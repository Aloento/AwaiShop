import{r as ee,b as ze}from"./react-mhcLWgJf.js";/*! @azure/msal-common v14.7.0 2024-02-07 */const d={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_RESPONSE_TYPE:"code",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",FRAGMENT_RESPONSE_MODE:"fragment",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],TOKEN_RESPONSE_TYPE:"token",ID_TOKEN_RESPONSE_TYPE:"id_token",SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},Je={SUCCESS_RANGE_START:200,SUCCESS_RANGE_END:299,REDIRECT:302,CLIENT_ERROR_RANGE_START:400,CLIENT_ERROR_RANGE_END:499,SERVER_ERROR_RANGE_START:500,SERVER_ERROR_RANGE_END:599},Ye=[d.OPENID_SCOPE,d.PROFILE_SCOPE,d.OFFLINE_ACCESS_SCOPE],Nn=[...Ye,d.EMAIL_SCOPE],te={CONTENT_TYPE:"Content-Type",RETRY_AFTER:"Retry-After",CCS_HEADER:"X-AnchorMailbox",WWWAuthenticate:"WWW-Authenticate",AuthenticationInfo:"Authentication-Info",X_MS_REQUEST_ID:"x-ms-request-id",X_MS_HTTP_VERSION:"x-ms-httpver"},K={ID_TOKEN:"idtoken",CLIENT_INFO:"client.info",ADAL_ID_TOKEN:"adal.idtoken",ERROR:"error",ERROR_DESC:"error.description",ACTIVE_ACCOUNT:"active-account",ACTIVE_ACCOUNT_FILTERS:"active-account-filters"},me={COMMON:"common",ORGANIZATIONS:"organizations",CONSUMERS:"consumers"},Xe={ACCESS_TOKEN:"access_token",XMS_CC:"xms_cc"},q={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},Mn={PLAIN:"plain",S256:"S256"},Ve={QUERY:"query",FRAGMENT:"fragment"},Xr={...Ve,FORM_POST:"form_post"},mo={IMPLICIT_GRANT:"implicit",AUTHORIZATION_CODE_GRANT:"authorization_code",CLIENT_CREDENTIALS_GRANT:"client_credentials",RESOURCE_OWNER_PASSWORD_GRANT:"password",REFRESH_TOKEN_GRANT:"refresh_token",DEVICE_CODE_GRANT:"device_code",JWT_BEARER:"urn:ietf:params:oauth:grant-type:jwt-bearer"},Ze={MSSTS_ACCOUNT_TYPE:"MSSTS",ADFS_ACCOUNT_TYPE:"ADFS",MSAV1_ACCOUNT_TYPE:"MSA",GENERIC_ACCOUNT_TYPE:"Generic"},G={CACHE_KEY_SEPARATOR:"-",CLIENT_INFO_SEPARATOR:"."},A={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},Wt="appmetadata",Zr="client_info",Ge="1",ot={CACHE_KEY:"authority-metadata",REFRESH_TIME_SECONDS:3600*24},$={CONFIG:"config",CACHE:"cache",NETWORK:"network",HARDCODED_VALUES:"hardcoded_values"},F={SCHEMA_VERSION:5,MAX_CUR_HEADER_BYTES:80,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},R={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},qe={DEFAULT_THROTTLE_TIME_SECONDS:60,DEFAULT_MAX_THROTTLE_TIME_SECONDS:3600,THROTTLING_PREFIX:"throttling",X_MS_LIB_CAPABILITY_VALUE:"retry-after, h429"},Ln={INVALID_GRANT_ERROR:"invalid_grant",CLIENT_MISMATCH_ERROR:"client_mismatch"},Un={username:"username",password:"password"},et={httpSuccess:200,httpBadRequest:400},Re={FAILED_AUTO_DETECTION:"1",INTERNAL_CACHE:"2",ENVIRONMENT_VARIABLE:"3",IMDS:"4"},wt={CONFIGURED_MATCHES_DETECTED:"1",CONFIGURED_NO_AUTO_DETECTION:"2",CONFIGURED_NOT_DETECTED:"3",AUTO_DETECTION_REQUESTED_SUCCESSFUL:"4",AUTO_DETECTION_REQUESTED_FAILED:"5"},ge={NOT_APPLICABLE:"0",FORCE_REFRESH_OR_CLAIMS:"1",NO_CACHED_ACCESS_TOKEN:"2",CACHED_ACCESS_TOKEN_EXPIRED:"3",PROACTIVELY_REFRESHED:"4"},ei={Jwt:"JWT",Jwk:"JWK",Pop:"pop"};/*! @azure/msal-common v14.7.0 2024-02-07 */const jt="unexpected_error",ti="post_request_failed";/*! @azure/msal-common v14.7.0 2024-02-07 */const Hn={[jt]:"Unexpected error in authentication.",[ti]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."};class O extends Error{constructor(e,t,n){const o=t?`${e}: ${t}`:e;super(o),Object.setPrototypeOf(this,O.prototype),this.errorCode=e||d.EMPTY_STRING,this.errorMessage=t||d.EMPTY_STRING,this.subError=n||d.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function fo(i,e){return new O(i,e?`${Hn[i]} ${e}`:Hn[i])}/*! @azure/msal-common v14.7.0 2024-02-07 */const Qt="client_info_decoding_error",Co="client_info_empty_error",Jt="token_parsing_error",yo="null_or_empty_token",ae="endpoints_resolution_error",To="network_error",Ao="openid_config_error",Io="hash_not_deserialized",Le="invalid_state",Eo="state_mismatch",rt="state_not_found",So="nonce_mismatch",Xt="auth_time_not_found",vo="max_age_transpired",ni="multiple_matching_tokens",oi="multiple_matching_accounts",wo="multiple_matching_appMetadata",_o="request_cannot_be_made",Ro="cannot_remove_empty_scope",ko="cannot_append_scopeset",Nt="empty_input_scopeset",ri="device_code_polling_cancelled",ii="device_code_expired",si="device_code_unknown_error",Zt="no_account_in_silent_request",bo="invalid_cache_record",en="invalid_cache_environment",Mt="no_account_found",Lt="no_crypto_object",Ut="unexpected_credential_type",ai="invalid_assertion",ci="invalid_client_credential",pe="token_refresh_required",li="user_timeout_reached",Oo="token_claims_cnf_required_for_signedjwt",Po="authorization_code_missing_from_server_response",No="binding_key_not_removed",Mo="end_session_endpoint_not_supported",tn="key_id_missing",hi="no_network_connectivity",di="user_canceled",ui="missing_tenant_id_error",I="method_not_implemented",gi="nested_app_auth_bridge_disabled";/*! @azure/msal-common v14.7.0 2024-02-07 */const Dn={[Qt]:"The client info could not be parsed/decoded correctly",[Co]:"The client info was empty",[Jt]:"Token cannot be parsed",[yo]:"The token is null or empty",[ae]:"Endpoints cannot be resolved",[To]:"Network request failed",[Ao]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[Io]:"The hash parameters could not be deserialized",[Le]:"State was not the expected format",[Eo]:"State mismatch error",[rt]:"State not found",[So]:"Nonce mismatch error",[Xt]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[vo]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[ni]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[oi]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[wo]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[_o]:"Token request cannot be made without authorization code or refresh token.",[Ro]:"Cannot remove null or empty scope from ScopeSet",[ko]:"Cannot append ScopeSet",[Nt]:"Empty input ScopeSet cannot be processed",[ri]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[ii]:"Device code is expired.",[si]:"Device code stopped polling for unknown reasons.",[Zt]:"Please pass an account object, silent flow is not supported without account information",[bo]:"Cache record object was null or undefined.",[en]:"Invalid environment when attempting to create cache entry",[Mt]:"No account found in cache for given key.",[Lt]:"No crypto object detected.",[Ut]:"Unexpected credential type.",[ai]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[ci]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[pe]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[li]:"User defined timeout for device code polling reached",[Oo]:"Cannot generate a POP jwt if the token_claims are not populated",[Po]:"Server response does not contain an authorization code to proceed",[No]:"Could not remove the credential's binding key from storage.",[Mo]:"The provided authority does not support logout",[tn]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[hi]:"No network connectivity. Check your internet connection.",[di]:"User cancelled the flow.",[ui]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[I]:"This method has not been implemented",[gi]:"The nested app auth bridge is disabled"};class mt extends O{constructor(e,t){super(e,t?`${Dn[e]}: ${t}`:Dn[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,mt.prototype)}}function g(i,e){return new mt(i,e)}/*! @azure/msal-common v14.7.0 2024-02-07 */const it={createNewGuid:()=>{throw g(I)},base64Decode:()=>{throw g(I)},base64Encode:()=>{throw g(I)},async getPublicKeyThumbprint(){throw g(I)},async removeTokenBindingKey(){throw g(I)},async clearKeystore(){throw g(I)},async signJwt(){throw g(I)},async hashString(){throw g(I)}};/*! @azure/msal-common v14.7.0 2024-02-07 */var P;(function(i){i[i.Error=0]="Error",i[i.Warning=1]="Warning",i[i.Info=2]="Info",i[i.Verbose=3]="Verbose",i[i.Trace=4]="Trace"})(P||(P={}));class fe{constructor(e,t,n){this.level=P.Info;const o=()=>{},r=e||fe.createDefaultLoggerOptions();this.localCallback=r.loggerCallback||o,this.piiLoggingEnabled=r.piiLoggingEnabled||!1,this.level=typeof r.logLevel=="number"?r.logLevel:P.Info,this.correlationId=r.correlationId||d.EMPTY_STRING,this.packageName=t||d.EMPTY_STRING,this.packageVersion=n||d.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:P.Info}}clone(e,t,n){return new fe({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:n||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;const r=`${`[${new Date().toUTCString()}] : [${t.correlationId||this.correlationId||""}]`} : ${this.packageName}@${this.packageVersion} : ${P[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,r,t.containsPii||!1)}executeCallback(e,t,n){this.localCallback&&this.localCallback(e,t,n)}error(e,t){this.logMessage(e,{logLevel:P.Error,containsPii:!1,correlationId:t||d.EMPTY_STRING})}errorPii(e,t){this.logMessage(e,{logLevel:P.Error,containsPii:!0,correlationId:t||d.EMPTY_STRING})}warning(e,t){this.logMessage(e,{logLevel:P.Warning,containsPii:!1,correlationId:t||d.EMPTY_STRING})}warningPii(e,t){this.logMessage(e,{logLevel:P.Warning,containsPii:!0,correlationId:t||d.EMPTY_STRING})}info(e,t){this.logMessage(e,{logLevel:P.Info,containsPii:!1,correlationId:t||d.EMPTY_STRING})}infoPii(e,t){this.logMessage(e,{logLevel:P.Info,containsPii:!0,correlationId:t||d.EMPTY_STRING})}verbose(e,t){this.logMessage(e,{logLevel:P.Verbose,containsPii:!1,correlationId:t||d.EMPTY_STRING})}verbosePii(e,t){this.logMessage(e,{logLevel:P.Verbose,containsPii:!0,correlationId:t||d.EMPTY_STRING})}trace(e,t){this.logMessage(e,{logLevel:P.Trace,containsPii:!1,correlationId:t||d.EMPTY_STRING})}tracePii(e,t){this.logMessage(e,{logLevel:P.Trace,containsPii:!0,correlationId:t||d.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}/*! @azure/msal-common v14.7.0 2024-02-07 */const Lo="@azure/msal-common",nn="14.7.0";/*! @azure/msal-common v14.7.0 2024-02-07 */const on={None:"none",AzurePublic:"https://login.microsoftonline.com",AzurePpe:"https://login.windows-ppe.net",AzureChina:"https://login.chinacloudapi.cn",AzureGermany:"https://login.microsoftonline.de",AzureUsGovernment:"https://login.microsoftonline.us"};/*! @azure/msal-common v14.7.0 2024-02-07 */function Se(i,e){const t=pi(i);try{const n=e(t);return JSON.parse(n)}catch{throw g(Jt)}}function pi(i){if(!i)throw g(yo);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(i);if(!t||t.length<4)throw g(Jt);return t[2]}function Uo(i,e){if(e===0||Date.now()-3e5>i+e)throw g(vo)}/*! @azure/msal-common v14.7.0 2024-02-07 */function re(){return Math.round(new Date().getTime()/1e3)}function Ht(i,e){const t=Number(i)||0;return re()+e>t}function mi(i){return Number(i)>re()}/*! @azure/msal-common v14.7.0 2024-02-07 */function Oe(i){return[fi(i),Ci(i),yi(i),Ti(i),Ai(i)].join(G.CACHE_KEY_SEPARATOR).toLowerCase()}function ft(i,e,t,n,o){return{credentialType:A.ID_TOKEN,homeAccountId:i,environment:e,clientId:n,secret:t,realm:o}}function Ct(i,e,t,n,o,r,s,a,c,l,u,p,C,E,_){const v={homeAccountId:i,credentialType:A.ACCESS_TOKEN,secret:t,cachedAt:re().toString(),expiresOn:s.toString(),extendedExpiresOn:a.toString(),environment:e,clientId:n,realm:o,target:r,tokenType:u||R.BEARER};if(p&&(v.userAssertionHash=p),l&&(v.refreshOn=l.toString()),E&&(v.requestedClaims=E,v.requestedClaimsHash=_),v.tokenType?.toLowerCase()!==R.BEARER.toLowerCase())switch(v.credentialType=A.ACCESS_TOKEN_WITH_AUTH_SCHEME,v.tokenType){case R.POP:const M=Se(t,c);if(!M?.cnf?.kid)throw g(Oo);v.keyId=M.cnf.kid;break;case R.SSH:v.keyId=C}return v}function Ho(i,e,t,n,o,r,s){const a={credentialType:A.REFRESH_TOKEN,homeAccountId:i,environment:e,clientId:n,secret:t};return r&&(a.userAssertionHash=r),o&&(a.familyId=o),s&&(a.expiresOn=s.toString()),a}function rn(i){return i.hasOwnProperty("homeAccountId")&&i.hasOwnProperty("environment")&&i.hasOwnProperty("credentialType")&&i.hasOwnProperty("clientId")&&i.hasOwnProperty("secret")}function Kn(i){return i?rn(i)&&i.hasOwnProperty("realm")&&i.hasOwnProperty("target")&&(i.credentialType===A.ACCESS_TOKEN||i.credentialType===A.ACCESS_TOKEN_WITH_AUTH_SCHEME):!1}function Bn(i){return i?rn(i)&&i.hasOwnProperty("realm")&&i.credentialType===A.ID_TOKEN:!1}function Fn(i){return i?rn(i)&&i.credentialType===A.REFRESH_TOKEN:!1}function fi(i){return[i.homeAccountId,i.environment].join(G.CACHE_KEY_SEPARATOR).toLowerCase()}function Ci(i){const e=i.credentialType===A.REFRESH_TOKEN&&i.familyId||i.clientId;return[i.credentialType,e,i.realm||""].join(G.CACHE_KEY_SEPARATOR).toLowerCase()}function yi(i){return(i.target||"").toLowerCase()}function Ti(i){return(i.requestedClaimsHash||"").toLowerCase()}function Ai(i){return i.tokenType&&i.tokenType.toLowerCase()!==R.BEARER.toLowerCase()?i.tokenType.toLowerCase():""}function Ii(i,e){const t=i.indexOf(F.CACHE_KEY)===0;let n=!0;return e&&(n=e.hasOwnProperty("failedRequests")&&e.hasOwnProperty("errors")&&e.hasOwnProperty("cacheHits")),t&&n}function Ei(i,e){let t=!1;i&&(t=i.indexOf(qe.THROTTLING_PREFIX)===0);let n=!0;return e&&(n=e.hasOwnProperty("throttleTime")),t&&n}function Si({environment:i,clientId:e}){return[Wt,i,e].join(G.CACHE_KEY_SEPARATOR).toLowerCase()}function vi(i,e){return e?i.indexOf(Wt)===0&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("environment"):!1}function wi(i,e){return e?i.indexOf(ot.CACHE_KEY)===0&&e.hasOwnProperty("aliases")&&e.hasOwnProperty("preferred_cache")&&e.hasOwnProperty("preferred_network")&&e.hasOwnProperty("canonical_authority")&&e.hasOwnProperty("authorization_endpoint")&&e.hasOwnProperty("token_endpoint")&&e.hasOwnProperty("issuer")&&e.hasOwnProperty("aliasesFromNetwork")&&e.hasOwnProperty("endpointsFromNetwork")&&e.hasOwnProperty("expiresAt")&&e.hasOwnProperty("jwks_uri"):!1}function xn(){return re()+ot.REFRESH_TIME_SECONDS}function tt(i,e,t){i.authorization_endpoint=e.authorization_endpoint,i.token_endpoint=e.token_endpoint,i.end_session_endpoint=e.end_session_endpoint,i.issuer=e.issuer,i.endpointsFromNetwork=t,i.jwks_uri=e.jwks_uri}function _t(i,e,t){i.aliases=e.aliases,i.preferred_cache=e.preferred_cache,i.preferred_network=e.preferred_network,i.aliasesFromNetwork=t}function Gn(i){return i.expiresAt<=re()}/*! @azure/msal-common v14.7.0 2024-02-07 */const Do="redirect_uri_empty",_i="claims_request_parsing_error",Ko="authority_uri_insecure",Fe="url_parse_error",Bo="empty_url_error",Fo="empty_input_scopes_error",xo="invalid_prompt_value",sn="invalid_claims",Go="token_request_empty",qo="logout_request_empty",$o="invalid_code_challenge_method",an="pkce_params_missing",cn="invalid_cloud_discovery_metadata",zo="invalid_authority_metadata",Yo="untrusted_authority",yt="missing_ssh_jwk",Vo="missing_ssh_kid",Ri="missing_nonce_authentication_header",ki="invalid_authentication_header",Wo="cannot_set_OIDCOptions",jo="cannot_allow_native_broker",Qo="authority_mismatch";/*! @azure/msal-common v14.7.0 2024-02-07 */const bi={[Do]:"A redirect URI is required for all calls, and none has been set.",[_i]:"Could not parse the given claims request object.",[Ko]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[Fe]:"URL could not be parsed into appropriate segments.",[Bo]:"URL was empty or null.",[Fo]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[xo]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[sn]:"Given claims parameter must be a stringified JSON object.",[Go]:"Token request was empty and not found in cache.",[qo]:"The logout request was null or undefined.",[$o]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[an]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[cn]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[zo]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[Yo]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[yt]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[Vo]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[Ri]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[ki]:"Invalid authentication header provided",[Wo]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[jo]:"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.",[Qo]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."};class ln extends O{constructor(e){super(e,bi[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,ln.prototype)}}function k(i){return new ln(i)}/*! @azure/msal-common v14.7.0 2024-02-07 */class Q{static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return Object.keys(t).length===0}catch{}return!0}static startsWith(e,t){return e.indexOf(t)===0}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},n=e.split("&"),o=r=>decodeURIComponent(r.replace(/\+/g," "));return n.forEach(r=>{if(r.trim()){const[s,a]=r.split(/=(.+)/g,2);s&&a&&(t[o(s)]=o(a))}}),t}static trimArrayEntries(e){return e.map(t=>t.trim())}static removeEmptyStringsFromArray(e){return e.filter(t=>!!t)}static jsonParseHelper(e){try{return JSON.parse(e)}catch{return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}/*! @azure/msal-common v14.7.0 2024-02-07 */class L{constructor(e){const t=e?Q.trimArrayEntries([...e]):[],n=t?Q.removeEmptyStringsFromArray(t):[];this.validateInputScopes(n),this.scopes=new Set,n.forEach(o=>this.scopes.add(o))}static fromString(e){const n=(e||d.EMPTY_STRING).split(" ");return new L(n)}static createSearchScopes(e){const t=new L(e);return t.containsOnlyOIDCScopes()?t.removeScope(d.OFFLINE_ACCESS_SCOPE):t.removeOIDCScopes(),t}validateInputScopes(e){if(!e||e.length<1)throw k(Fo)}containsScope(e){const t=this.printScopesLowerCase().split(" "),n=new L(t);return e?n.scopes.has(e.toLowerCase()):!1}containsScopeSet(e){return!e||e.scopes.size<=0?!1:this.scopes.size>=e.scopes.size&&e.asArray().every(t=>this.containsScope(t))}containsOnlyOIDCScopes(){let e=0;return Nn.forEach(t=>{this.containsScope(t)&&(e+=1)}),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach(t=>this.appendScope(t))}catch{throw g(ko)}}removeScope(e){if(!e)throw g(Ro);this.scopes.delete(e.trim())}removeOIDCScopes(){Nn.forEach(e=>{this.scopes.delete(e)})}unionScopeSets(e){if(!e)throw g(Nt);const t=new Set;return e.scopes.forEach(n=>t.add(n.toLowerCase())),this.scopes.forEach(n=>t.add(n.toLowerCase())),t}intersectingScopeSets(e){if(!e)throw g(Nt);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),n=e.getScopeCount(),o=this.getScopeCount();return t.size<o+n}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach(t=>e.push(t)),e}printScopes(){return this.scopes?this.asArray().join(" "):d.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}/*! @azure/msal-common v14.7.0 2024-02-07 */function st(i,e){if(!i)throw g(Co);try{const t=e(i);return JSON.parse(t)}catch{throw g(Qt)}}function Pe(i){if(!i)throw g(Qt);const e=i.split(G.CLIENT_INFO_SEPARATOR,2);return{uid:e[0],utid:e.length<2?d.EMPTY_STRING:e[1]}}/*! @azure/msal-common v14.7.0 2024-02-07 */function Dt(i,e){return!!i&&!!e&&i===e.split(".")[1]}function hn(i,e){const{oid:t,sub:n,tid:o,name:r,tfp:s,acr:a}=e,c=o||s||a||"";return{tenantId:c,localAccountId:t||n||"",name:r,isHomeTenant:Dt(c,i)}}function dn(i,e,t){let n=i;if(e){const{isHomeTenant:o,...r}=e;n={...i,...r}}if(t){const{isHomeTenant:o,...r}=hn(i.homeAccountId,t);return n={...n,...r,idTokenClaims:t},n}return n}/*! @azure/msal-common v14.7.0 2024-02-07 */const W={Default:0,Adfs:1,Dsts:2,Ciam:3};/*! @azure/msal-common v14.7.0 2024-02-07 */function Jo(i){return i&&(i.tid||i.tfp||i.acr)||null}/*! @azure/msal-common v14.7.0 2024-02-07 */const he={AAD:"AAD",OIDC:"OIDC"};/*! @azure/msal-common v14.7.0 2024-02-07 */class D{generateAccountId(){return[this.homeAccountId,this.environment].join(G.CACHE_KEY_SEPARATOR).toLowerCase()}generateAccountKey(){return D.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map(e=>[e.tenantId,e]))}}isSingleTenant(){return!this.tenantProfiles}static generateAccountCacheKey(e){const t=e.homeAccountId.split(".")[1];return[e.homeAccountId,e.environment||"",t||e.tenantId||""].join(G.CACHE_KEY_SEPARATOR).toLowerCase()}static createAccount(e,t,n){const o=new D;t.authorityType===W.Adfs?o.authorityType=Ze.ADFS_ACCOUNT_TYPE:t.protocolMode===he.AAD?o.authorityType=Ze.MSSTS_ACCOUNT_TYPE:o.authorityType=Ze.GENERIC_ACCOUNT_TYPE;let r;e.clientInfo&&n&&(r=st(e.clientInfo,n)),o.clientInfo=e.clientInfo,o.homeAccountId=e.homeAccountId,o.nativeAccountId=e.nativeAccountId;const s=e.environment||t&&t.getPreferredCache();if(!s)throw g(en);o.environment=s,o.realm=r?.utid||Jo(e.idTokenClaims)||"",o.localAccountId=r?.uid||e.idTokenClaims.oid||e.idTokenClaims.sub||"";const a=e.idTokenClaims.preferred_username||e.idTokenClaims.upn,c=e.idTokenClaims.emails?e.idTokenClaims.emails[0]:null;if(o.username=a||c||"",o.name=e.idTokenClaims.name,o.cloudGraphHostName=e.cloudGraphHostName,o.msGraphHost=e.msGraphHost,e.tenantProfiles)o.tenantProfiles=e.tenantProfiles;else{const l=[];if(e.idTokenClaims){const u=hn(e.homeAccountId,e.idTokenClaims);l.push(u)}o.tenantProfiles=l}return o}static createFromAccountInfo(e,t,n){const o=new D;return o.authorityType=e.authorityType||Ze.GENERIC_ACCOUNT_TYPE,o.homeAccountId=e.homeAccountId,o.localAccountId=e.localAccountId,o.nativeAccountId=e.nativeAccountId,o.realm=e.tenantId,o.environment=e.environment,o.username=e.username,o.name=e.name,o.cloudGraphHostName=t,o.msGraphHost=n,o.tenantProfiles=Array.from(e.tenantProfiles?.values()||[]),o}static generateHomeAccountId(e,t,n,o,r){if(!(t===W.Adfs||t===W.Dsts)){if(e)try{const s=st(e,o.base64Decode);if(s.uid&&s.utid)return`${s.uid}.${s.utid}`}catch{}n.warning("No client info in response")}return r?.sub||""}static isAccountEntity(e){return e?e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType"):!1}static accountInfoIsEqual(e,t,n){if(!e||!t)return!1;let o=!0;if(n){const r=e.idTokenClaims||{},s=t.idTokenClaims||{};o=r.iat===s.iat&&r.nonce===s.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&o}}/*! @azure/msal-common v14.7.0 2024-02-07 */function Xo(i){return i.startsWith("#/")?i.substring(2):i.startsWith("#")||i.startsWith("?")?i.substring(1):i}function at(i){if(!i||i.indexOf("=")<0)return null;try{const e=Xo(i),t=Object.fromEntries(new URLSearchParams(e));if(t.code||t.error||t.error_description||t.state)return t}catch{throw g(Io)}return null}/*! @azure/msal-common v14.7.0 2024-02-07 */class S{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw k(Bo);e.includes("#")||(this._urlString=S.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return Q.endsWith(t,"?")?t=t.slice(0,-1):Q.endsWith(t,"?/")&&(t=t.slice(0,-2)),Q.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch{throw k(Fe)}if(!e.HostNameAndPort||!e.PathSegments)throw k(Fe);if(!e.Protocol||e.Protocol.toLowerCase()!=="https:")throw k(Ko)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return S.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),n=t.PathSegments;return e&&n.length!==0&&(n[0]===me.COMMON||n[0]===me.ORGANIZATIONS)&&(n[0]=e),S.constructAuthorityUriFromObject(t)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw k(Fe);const n={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let o=n.AbsolutePath.split("/");return o=o.filter(r=>r&&r.length>0),n.PathSegments=o,n.QueryString&&n.QueryString.endsWith("/")&&(n.QueryString=n.QueryString.substring(0,n.QueryString.length-1)),n}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),n=e.match(t);if(!n)throw k(Fe);return n[2]}static getAbsoluteUrl(e,t){if(e[0]===d.FORWARD_SLASH){const o=new S(t).getUrlComponents();return o.Protocol+"//"+o.HostNameAndPort+e}return e}static constructAuthorityUriFromObject(e){return new S(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!at(e)}}/*! @azure/msal-common v14.7.0 2024-02-07 */const Zo={endpointMetadata:{"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},instanceDiscoveryMetadata:{tenant_discovery_endpoint:"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]}},qn=Zo.endpointMetadata,un=Zo.instanceDiscoveryMetadata,er=new Set;un.metadata.forEach(i=>{i.aliases.forEach(e=>{er.add(e)})});function Oi(i,e){let t;const n=i.canonicalAuthority;if(n){const o=new S(n).getUrlComponents().HostNameAndPort;t=$n(o,i.cloudDiscoveryMetadata?.metadata,$.CONFIG,e)||$n(o,un.metadata,$.HARDCODED_VALUES,e)||i.knownAuthorities}return t||[]}function $n(i,e,t,n){if(n?.trace(`getAliasesFromMetadata called with source: ${t}`),i&&e){const o=ct(e,i);if(o)return n?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${t}, returning aliases`),o.aliases;n?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${t}`)}return null}function Pi(i){return ct(un.metadata,i)}function ct(i,e){for(let t=0;t<i.length;t++){const n=i[t];if(n.aliases.includes(e))return n}return null}/*! @azure/msal-common v14.7.0 2024-02-07 */class Ue{constructor(e,t,n,o){this.clientId=e,this.cryptoImpl=t,this.commonLogger=n.clone(Lo,nn),this.staticAuthorityOptions=o}getAllAccounts(e){return this.buildTenantProfiles(this.getAccountsFilteredBy(e||{}),e)}getAccountInfoFilteredBy(e){const t=this.getAllAccounts(e);return t.length>1?t.sort(o=>o.idTokenClaims?-1:1)[0]:t.length===1?t[0]:null}getBaseAccountInfo(e){const t=this.getAccountsFilteredBy(e);return t.length>0?t[0].getAccountInfo():null}buildTenantProfiles(e,t){return e.flatMap(n=>this.getAccountInfoForTenantProfiles(n,t))}getAccountInfoForTenantProfiles(e,t){return this.getTenantProfilesFromAccountEntity(e,t?.tenantId,t)}getTenantedAccountInfoByFilter(e,t,n,o){let r=null,s;if(o&&!this.tenantProfileMatchesFilter(n,o))return null;const a=this.getIdToken(e,t,n.tenantId);return a&&(s=Se(a.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(s,o))?null:(r=dn(e,n,s),r)}getTenantProfilesFromAccountEntity(e,t,n){const o=e.getAccountInfo();let r=o.tenantProfiles||new Map;const s=this.getTokenKeys();if(t){const c=r.get(t);if(c)r=new Map([[t,c]]);else return[]}const a=[];return r.forEach(c=>{const l=this.getTenantedAccountInfoByFilter(o,s,c,n);l&&a.push(l)}),a}tenantProfileMatchesFilter(e,t){return!(t.localAccountId&&!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId)||t.name&&e.name!==t.name||t.isHomeTenant!==void 0&&e.isHomeTenant!==t.isHomeTenant)}idTokenClaimsMatchTenantProfileFilter(e,t){return!(t&&(t.localAccountId&&!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId)||t.loginHint&&!this.matchLoginHintFromTokenClaims(e,t.loginHint)||t.username&&!this.matchUsername(e.preferred_username,t.username)||t.name&&!this.matchName(e,t.name)||t.sid&&!this.matchSid(e,t.sid)))}async saveCacheRecord(e,t){if(!e)throw g(bo);e.account&&this.setAccount(e.account),e.idToken&&t?.idToken!==!1&&this.setIdTokenCredential(e.idToken),e.accessToken&&t?.accessToken!==!1&&await this.saveAccessToken(e.accessToken),e.refreshToken&&t?.refreshToken!==!1&&this.setRefreshTokenCredential(e.refreshToken),e.appMetadata&&this.setAppMetadata(e.appMetadata)}async saveAccessToken(e){const t={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},n=this.getTokenKeys(),o=L.fromString(e.target),r=[];n.accessToken.forEach(s=>{if(!this.accessTokenKeyMatchesFilter(s,t,!1))return;const a=this.getAccessTokenCredential(s);a&&this.credentialMatchesFilter(a,t)&&L.fromString(a.target).intersectingScopeSets(o)&&r.push(this.removeAccessToken(s))}),await Promise.all(r),this.setAccessTokenCredential(e)}getAccountsFilteredBy(e){const t=this.getAccountKeys(),n=[];return t.forEach(o=>{if(!this.isAccountKey(o,e.homeAccountId))return;const r=this.getAccount(o,this.commonLogger);if(!r||e.homeAccountId&&!this.matchHomeAccountId(r,e.homeAccountId)||e.username&&!this.matchUsername(r.username,e.username)||e.environment&&!this.matchEnvironment(r,e.environment)||e.realm&&!this.matchRealm(r,e.realm)||e.nativeAccountId&&!this.matchNativeAccountId(r,e.nativeAccountId)||e.authorityType&&!this.matchAuthorityType(r,e.authorityType))return;const s={localAccountId:e?.localAccountId,name:e?.name},a=r.tenantProfiles?.filter(c=>this.tenantProfileMatchesFilter(c,s));a&&a.length===0||n.push(r)}),n}isAccountKey(e,t,n){return!(e.split(G.CACHE_KEY_SEPARATOR).length<3||t&&!e.toLowerCase().includes(t.toLowerCase())||n&&!e.toLowerCase().includes(n.toLowerCase()))}isCredentialKey(e){if(e.split(G.CACHE_KEY_SEPARATOR).length<6)return!1;const t=e.toLowerCase();if(t.indexOf(A.ID_TOKEN.toLowerCase())===-1&&t.indexOf(A.ACCESS_TOKEN.toLowerCase())===-1&&t.indexOf(A.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())===-1&&t.indexOf(A.REFRESH_TOKEN.toLowerCase())===-1)return!1;if(t.indexOf(A.REFRESH_TOKEN.toLowerCase())>-1){const n=`${A.REFRESH_TOKEN}${G.CACHE_KEY_SEPARATOR}${this.clientId}${G.CACHE_KEY_SEPARATOR}`,o=`${A.REFRESH_TOKEN}${G.CACHE_KEY_SEPARATOR}${Ge}${G.CACHE_KEY_SEPARATOR}`;if(t.indexOf(n.toLowerCase())===-1&&t.indexOf(o.toLowerCase())===-1)return!1}else if(t.indexOf(this.clientId.toLowerCase())===-1)return!1;return!0}credentialMatchesFilter(e,t){return!(t.clientId&&!this.matchClientId(e,t.clientId)||t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash)||typeof t.homeAccountId=="string"&&!this.matchHomeAccountId(e,t.homeAccountId)||t.environment&&!this.matchEnvironment(e,t.environment)||t.realm&&!this.matchRealm(e,t.realm)||t.credentialType&&!this.matchCredentialType(e,t.credentialType)||t.familyId&&!this.matchFamilyId(e,t.familyId)||t.target&&!this.matchTarget(e,t.target)||(t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash||e.credentialType===A.ACCESS_TOKEN_WITH_AUTH_SCHEME&&(t.tokenType&&!this.matchTokenType(e,t.tokenType)||t.tokenType===R.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId)))}getAppMetadataFilteredBy(e){return this.getAppMetadataFilteredByInternal(e.environment,e.clientId)}getAppMetadataFilteredByInternal(e,t){const n=this.getKeys(),o={};return n.forEach(r=>{if(!this.isAppMetadata(r))return;const s=this.getAppMetadata(r);s&&(e&&!this.matchEnvironment(s,e)||t&&!this.matchClientId(s,t)||(o[r]=s))}),o}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let n=null;return t.forEach(o=>{if(!this.isAuthorityMetadata(o)||o.indexOf(this.clientId)===-1)return;const r=this.getAuthorityMetadata(o);r&&r.aliases.indexOf(e)!==-1&&(n=r)}),n}async removeAllAccounts(){const e=this.getAccountKeys(),t=[];e.forEach(n=>{t.push(this.removeAccount(n))}),await Promise.all(t)}async removeAccount(e){const t=this.getAccount(e,this.commonLogger);t&&(await this.removeAccountContext(t),this.removeItem(e))}async removeAccountContext(e){const t=this.getTokenKeys(),n=e.generateAccountId(),o=[];t.idToken.forEach(r=>{r.indexOf(n)===0&&this.removeIdToken(r)}),t.accessToken.forEach(r=>{r.indexOf(n)===0&&o.push(this.removeAccessToken(r))}),t.refreshToken.forEach(r=>{r.indexOf(n)===0&&this.removeRefreshToken(r)}),await Promise.all(o)}updateOutdatedCachedAccount(e,t,n){if(t&&t.isSingleTenant()){this.commonLogger?.verbose("updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity");const o=this.getAccountKeys().filter(l=>l.startsWith(t.homeAccountId)),r=[];o.forEach(l=>{const u=this.getCachedAccountEntity(l);u&&r.push(u)});const s=r.find(l=>Dt(l.realm,l.homeAccountId))||r[0];s.tenantProfiles=r.map(l=>({tenantId:l.realm,localAccountId:l.localAccountId,name:l.name,isHomeTenant:Dt(l.realm,l.homeAccountId)}));const a=Ue.toObject(new D,{...s}),c=a.generateAccountKey();return o.forEach(l=>{l!==c&&this.removeOutdatedAccount(e)}),this.setAccount(a),n?.verbose("Updated an outdated account entity in the cache"),a}return t}async removeAccessToken(e){const t=this.getAccessTokenCredential(e);if(t){if(t.credentialType.toLowerCase()===A.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()&&t.tokenType===R.POP){const o=t.keyId;if(o)try{await this.cryptoImpl.removeTokenBindingKey(o)}catch{throw g(No)}}return this.removeItem(e)}}removeAppMetadata(){return this.getKeys().forEach(t=>{this.isAppMetadata(t)&&this.removeItem(t)}),!0}readAccountFromCache(e){const t=D.generateAccountCacheKey(e);return this.getAccount(t,this.commonLogger)}getIdToken(e,t,n,o,r){this.commonLogger.trace("CacheManager - getIdToken called");const s={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:A.ID_TOKEN,clientId:this.clientId,realm:n},a=this.getIdTokensByFilter(s,t),c=a.size;if(c<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(c>1){let l=a;if(!n){const u=new Map;a.forEach((C,E)=>{C.realm===e.tenantId&&u.set(E,C)});const p=u.size;if(p<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),a.values().next().value;if(p===1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),u.values().next().value;l=u}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),l.forEach((u,p)=>{this.removeIdToken(p)}),o&&r&&o.addFields({multiMatchedID:a.size},r),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),a.values().next().value}getIdTokensByFilter(e,t){const n=t&&t.idToken||this.getTokenKeys().idToken,o=new Map;return n.forEach(r=>{if(!this.idTokenKeyMatchesFilter(r,{clientId:this.clientId,...e}))return;const s=this.getIdTokenCredential(r);s&&this.credentialMatchesFilter(s,e)&&o.set(r,s)}),o}idTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.clientId&&n.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&n.indexOf(t.homeAccountId.toLowerCase())===-1)}removeIdToken(e){this.removeItem(e)}removeRefreshToken(e){this.removeItem(e)}getAccessToken(e,t,n,o,r,s){this.commonLogger.trace("CacheManager - getAccessToken called");const a=L.createSearchScopes(t.scopes),c=t.authenticationScheme||R.BEARER,l=c&&c.toLowerCase()!==R.BEARER.toLowerCase()?A.ACCESS_TOKEN_WITH_AUTH_SCHEME:A.ACCESS_TOKEN,u={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:l,clientId:this.clientId,realm:o||e.tenantId,target:a,tokenType:c,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},p=n&&n.accessToken||this.getTokenKeys().accessToken,C=[];p.forEach(_=>{if(this.accessTokenKeyMatchesFilter(_,u,!0)){const v=this.getAccessTokenCredential(_);v&&this.credentialMatchesFilter(v,u)&&C.push(v)}});const E=C.length;return E<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found"),null):E>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them"),C.forEach(_=>{this.removeAccessToken(Oe(_))}),r&&s&&r.addFields({multiMatchedAT:C.length},s),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token"),C[0])}accessTokenKeyMatchesFilter(e,t,n){const o=e.toLowerCase();if(t.clientId&&o.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&o.indexOf(t.homeAccountId.toLowerCase())===-1||t.realm&&o.indexOf(t.realm.toLowerCase())===-1||t.requestedClaimsHash&&o.indexOf(t.requestedClaimsHash.toLowerCase())===-1)return!1;if(t.target){const r=t.target.asArray();for(let s=0;s<r.length;s++){if(n&&!o.includes(r[s].toLowerCase()))return!1;if(!n&&o.includes(r[s].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e){const t=this.getTokenKeys(),n=[];return t.accessToken.forEach(o=>{if(!this.accessTokenKeyMatchesFilter(o,e,!0))return;const r=this.getAccessTokenCredential(o);r&&this.credentialMatchesFilter(r,e)&&n.push(r)}),n}getRefreshToken(e,t,n,o,r){this.commonLogger.trace("CacheManager - getRefreshToken called");const s=t?Ge:void 0,a={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:A.REFRESH_TOKEN,clientId:this.clientId,familyId:s},c=n&&n.refreshToken||this.getTokenKeys().refreshToken,l=[];c.forEach(p=>{if(this.refreshTokenKeyMatchesFilter(p,a)){const C=this.getRefreshTokenCredential(p);C&&this.credentialMatchesFilter(C,a)&&l.push(C)}});const u=l.length;return u<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(u>1&&o&&r&&o.addFields({multiMatchedRT:u},r),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),l[0])}refreshTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.familyId&&n.indexOf(t.familyId.toLowerCase())===-1||!t.familyId&&t.clientId&&n.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&n.indexOf(t.homeAccountId.toLowerCase())===-1)}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},n=this.getAppMetadataFilteredBy(t),o=Object.keys(n).map(s=>n[s]),r=o.length;if(r<1)return null;if(r>1)throw g(wo);return o[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!!(t&&t.familyId===Ge)}matchHomeAccountId(e,t){return typeof e.homeAccountId=="string"&&t===e.homeAccountId}matchLocalAccountIdFromTokenClaims(e,t){const n=e.oid||e.sub;return t===n}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){return t.toLowerCase()===e.name?.toLowerCase()}matchUsername(e,t){return!!(e&&typeof e=="string"&&t?.toLowerCase()===e.toLowerCase())}matchUserAssertionHash(e,t){return!!(e.userAssertionHash&&t===e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){const o=Oi(this.staticAuthorityOptions,this.commonLogger);if(o.includes(t)&&o.includes(e.environment))return!0}const n=this.getAuthorityMetadataByAlias(t);return!!(n&&n.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!!(e.clientId&&t===e.clientId)}matchFamilyId(e,t){return!!(e.familyId&&t===e.familyId)}matchRealm(e,t){return e.realm?.toLowerCase()===t.toLowerCase()}matchNativeAccountId(e,t){return!!(e.nativeAccountId&&t===e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||e.preferred_username===t||e.upn===t}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!!(e.authorityType&&t.toLowerCase()===e.authorityType.toLowerCase())}matchTarget(e,t){return e.credentialType!==A.ACCESS_TOKEN&&e.credentialType!==A.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target?!1:L.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!!(e.tokenType&&e.tokenType===t)}matchKeyId(e,t){return!!(e.keyId&&e.keyId===t)}isAppMetadata(e){return e.indexOf(Wt)!==-1}isAuthorityMetadata(e){return e.indexOf(ot.CACHE_KEY)!==-1}generateAuthorityMetadataCacheKey(e){return`${ot.CACHE_KEY}-${this.clientId}-${e}`}static toObject(e,t){for(const n in t)e[n]=t[n];return e}}class Ni extends Ue{setAccount(){throw g(I)}getAccount(){throw g(I)}getCachedAccountEntity(){throw g(I)}setIdTokenCredential(){throw g(I)}getIdTokenCredential(){throw g(I)}setAccessTokenCredential(){throw g(I)}getAccessTokenCredential(){throw g(I)}setRefreshTokenCredential(){throw g(I)}getRefreshTokenCredential(){throw g(I)}setAppMetadata(){throw g(I)}getAppMetadata(){throw g(I)}setServerTelemetry(){throw g(I)}getServerTelemetry(){throw g(I)}setAuthorityMetadata(){throw g(I)}getAuthorityMetadata(){throw g(I)}getAuthorityMetadataKeys(){throw g(I)}setThrottlingCache(){throw g(I)}getThrottlingCache(){throw g(I)}removeItem(){throw g(I)}containsKey(){throw g(I)}getKeys(){throw g(I)}getAccountKeys(){throw g(I)}getTokenKeys(){throw g(I)}async clear(){throw g(I)}updateCredentialCacheKey(){throw g(I)}removeOutdatedAccount(){throw g(I)}}/*! @azure/msal-common v14.7.0 2024-02-07 */const Mi=300,tr={tokenRenewalOffsetSeconds:Mi,preventCorsPreflight:!1},Li={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:P.Info,correlationId:d.EMPTY_STRING},Ui={claimsBasedCachingEnabled:!1},Hi={async sendGetRequestAsync(){throw g(I)},async sendPostRequestAsync(){throw g(I)}},Di={sku:d.SKU,version:nn,cpu:d.EMPTY_STRING,os:d.EMPTY_STRING},Ki={clientSecret:d.EMPTY_STRING,clientAssertion:void 0},Bi={azureCloudInstance:on.None,tenant:`${d.DEFAULT_COMMON_TENANT}`},Fi={application:{appName:"",appVersion:""}};function xi({authOptions:i,systemOptions:e,loggerOptions:t,cacheOptions:n,storageInterface:o,networkInterface:r,cryptoInterface:s,clientCredentials:a,libraryInfo:c,telemetry:l,serverTelemetryManager:u,persistencePlugin:p,serializableCache:C}){const E={...Li,...t};return{authOptions:Gi(i),systemOptions:{...tr,...e},loggerOptions:E,cacheOptions:{...Ui,...n},storageInterface:o||new Ni(i.clientId,it,new fe(E)),networkInterface:r||Hi,cryptoInterface:s||it,clientCredentials:a||Ki,libraryInfo:{...Di,...c},telemetry:{...Fi,...l},serverTelemetryManager:u||null,persistencePlugin:p||null,serializableCache:C||null}}function Gi(i){return{clientCapabilities:[],azureCloudOptions:Bi,skipAuthorityMetadataCache:!1,...i}}function Kt(i){return i.authOptions.authority.options.protocolMode===he.OIDC}/*! @azure/msal-common v14.7.0 2024-02-07 */class Ce extends O{constructor(e,t,n){super(e,t,n),this.name="ServerError",Object.setPrototypeOf(this,Ce.prototype)}}/*! @azure/msal-common v14.7.0 2024-02-07 */class Z{static generateThrottlingStorageKey(e){return`${qe.THROTTLING_PREFIX}.${JSON.stringify(e)}`}static preProcess(e,t){const n=Z.generateThrottlingStorageKey(t),o=e.getThrottlingCache(n);if(o){if(o.throttleTime<Date.now()){e.removeItem(n);return}throw new Ce(o.errorCodes?.join(" ")||d.EMPTY_STRING,o.errorMessage,o.subError)}}static postProcess(e,t,n){if(Z.checkResponseStatus(n)||Z.checkResponseForRetryAfter(n)){const o={throttleTime:Z.calculateThrottleTime(parseInt(n.headers[te.RETRY_AFTER])),error:n.body.error,errorCodes:n.body.error_codes,errorMessage:n.body.error_description,subError:n.body.suberror};e.setThrottlingCache(Z.generateThrottlingStorageKey(t),o)}}static checkResponseStatus(e){return e.status===429||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return e.headers?e.headers.hasOwnProperty(te.RETRY_AFTER)&&(e.status<200||e.status>=300):!1}static calculateThrottleTime(e){const t=e<=0?0:e,n=Date.now()/1e3;return Math.floor(Math.min(n+(t||qe.DEFAULT_THROTTLE_TIME_SECONDS),n+qe.DEFAULT_MAX_THROTTLE_TIME_SECONDS)*1e3)}static removeThrottle(e,t,n,o){const r={clientId:t,authority:n.authority,scopes:n.scopes,homeAccountIdentifier:o,claims:n.claims,authenticationScheme:n.authenticationScheme,resourceRequestMethod:n.resourceRequestMethod,resourceRequestUri:n.resourceRequestUri,shrClaims:n.shrClaims,sshKid:n.sshKid},s=this.generateThrottlingStorageKey(r);e.removeItem(s)}}/*! @azure/msal-common v14.7.0 2024-02-07 */class qi{constructor(e,t){this.networkClient=e,this.cacheManager=t}async sendPostRequest(e,t,n){Z.preProcess(this.cacheManager,e);let o;try{o=await this.networkClient.sendPostRequestAsync(t,n)}catch(r){throw r instanceof O?r:g(To)}return Z.postProcess(this.cacheManager,e,o),o}}/*! @azure/msal-common v14.7.0 2024-02-07 */const z={HOME_ACCOUNT_ID:"home_account_id",UPN:"UPN"};/*! @azure/msal-common v14.7.0 2024-02-07 */const He="client_id",$i="redirect_uri",zn="response_type",zi="response_mode",Yi="grant_type",Vi="claims",Wi="scope",ji="refresh_token",Qi="state",Ji="nonce",Xi="prompt",Zi="code",es="code_challenge",ts="code_challenge_method",ns="code_verifier",os="client-request-id",rs="x-client-SKU",is="x-client-VER",ss="x-client-OS",as="x-client-CPU",cs="x-client-current-telemetry",ls="x-client-last-telemetry",hs="x-ms-lib-capability",ds="x-app-name",us="x-app-ver",gs="post_logout_redirect_uri",ps="id_token_hint",ms="device_code",fs="client_secret",Cs="client_assertion",ys="client_assertion_type",Yn="token_type",Vn="req_cnf",Ts="assertion",As="requested_token_use",Wn="return_spa_code",Is="nativebroker",Es="logout_hint",Ss="sid",vs="login_hint",ws="domain_hint";/*! @azure/msal-common v14.7.0 2024-02-07 */class ye{static validateRedirectUri(e){if(!e)throw k(Do)}static validatePrompt(e){const t=[];for(const n in q)t.push(q[n]);if(t.indexOf(e)<0)throw k(xo)}static validateClaims(e){try{JSON.parse(e)}catch{throw k(sn)}}static validateCodeChallengeParams(e,t){if(!e||!t)throw k(an);this.validateCodeChallengeMethod(t)}static validateCodeChallengeMethod(e){if([Mn.PLAIN,Mn.S256].indexOf(e)<0)throw k($o)}static sanitizeEQParams(e,t){return e?(t.forEach((n,o)=>{e[o]&&delete e[o]}),Object.fromEntries(Object.entries(e).filter(n=>n[1]!==""))):{}}}/*! @azure/msal-common v14.7.0 2024-02-07 */class $e{constructor(){this.parameters=new Map}addResponseTypeCode(){this.parameters.set(zn,encodeURIComponent(d.CODE_RESPONSE_TYPE))}addResponseTypeForTokenAndIdToken(){this.parameters.set(zn,encodeURIComponent(`${d.TOKEN_RESPONSE_TYPE} ${d.ID_TOKEN_RESPONSE_TYPE}`))}addResponseMode(e){this.parameters.set(zi,encodeURIComponent(e||Xr.QUERY))}addNativeBroker(){this.parameters.set(Is,encodeURIComponent("1"))}addScopes(e,t=!0,n=Ye){t&&!n.includes("openid")&&!e.includes("openid")&&n.push("openid");const o=t?[...e||[],...n]:e||[],r=new L(o);this.parameters.set(Wi,encodeURIComponent(r.printScopes()))}addClientId(e){this.parameters.set(He,encodeURIComponent(e))}addRedirectUri(e){ye.validateRedirectUri(e),this.parameters.set($i,encodeURIComponent(e))}addPostLogoutRedirectUri(e){ye.validateRedirectUri(e),this.parameters.set(gs,encodeURIComponent(e))}addIdTokenHint(e){this.parameters.set(ps,encodeURIComponent(e))}addDomainHint(e){this.parameters.set(ws,encodeURIComponent(e))}addLoginHint(e){this.parameters.set(vs,encodeURIComponent(e))}addCcsUpn(e){this.parameters.set(te.CCS_HEADER,encodeURIComponent(`UPN:${e}`))}addCcsOid(e){this.parameters.set(te.CCS_HEADER,encodeURIComponent(`Oid:${e.uid}@${e.utid}`))}addSid(e){this.parameters.set(Ss,encodeURIComponent(e))}addClaims(e,t){const n=this.addClientCapabilitiesToClaims(e,t);ye.validateClaims(n),this.parameters.set(Vi,encodeURIComponent(n))}addCorrelationId(e){this.parameters.set(os,encodeURIComponent(e))}addLibraryInfo(e){this.parameters.set(rs,e.sku),this.parameters.set(is,e.version),e.os&&this.parameters.set(ss,e.os),e.cpu&&this.parameters.set(as,e.cpu)}addApplicationTelemetry(e){e?.appName&&this.parameters.set(ds,e.appName),e?.appVersion&&this.parameters.set(us,e.appVersion)}addPrompt(e){ye.validatePrompt(e),this.parameters.set(`${Xi}`,encodeURIComponent(e))}addState(e){e&&this.parameters.set(Qi,encodeURIComponent(e))}addNonce(e){this.parameters.set(Ji,encodeURIComponent(e))}addCodeChallengeParams(e,t){if(ye.validateCodeChallengeParams(e,t),e&&t)this.parameters.set(es,encodeURIComponent(e)),this.parameters.set(ts,encodeURIComponent(t));else throw k(an)}addAuthorizationCode(e){this.parameters.set(Zi,encodeURIComponent(e))}addDeviceCode(e){this.parameters.set(ms,encodeURIComponent(e))}addRefreshToken(e){this.parameters.set(ji,encodeURIComponent(e))}addCodeVerifier(e){this.parameters.set(ns,encodeURIComponent(e))}addClientSecret(e){this.parameters.set(fs,encodeURIComponent(e))}addClientAssertion(e){e&&this.parameters.set(Cs,encodeURIComponent(e))}addClientAssertionType(e){e&&this.parameters.set(ys,encodeURIComponent(e))}addOboAssertion(e){this.parameters.set(Ts,encodeURIComponent(e))}addRequestTokenUse(e){this.parameters.set(As,encodeURIComponent(e))}addGrantType(e){this.parameters.set(Yi,encodeURIComponent(e))}addClientInfo(){this.parameters.set(Zr,"1")}addExtraQueryParameters(e){const t=ye.sanitizeEQParams(e,this.parameters);Object.keys(t).forEach(n=>{this.parameters.set(n,e[n])})}addClientCapabilitiesToClaims(e,t){let n;if(!e)n={};else try{n=JSON.parse(e)}catch{throw k(sn)}return t&&t.length>0&&(n.hasOwnProperty(Xe.ACCESS_TOKEN)||(n[Xe.ACCESS_TOKEN]={}),n[Xe.ACCESS_TOKEN][Xe.XMS_CC]={values:t}),JSON.stringify(n)}addUsername(e){this.parameters.set(Un.username,encodeURIComponent(e))}addPassword(e){this.parameters.set(Un.password,encodeURIComponent(e))}addPopToken(e){e&&(this.parameters.set(Yn,R.POP),this.parameters.set(Vn,encodeURIComponent(e)))}addSshJwk(e){e&&(this.parameters.set(Yn,R.SSH),this.parameters.set(Vn,encodeURIComponent(e)))}addServerTelemetry(e){this.parameters.set(cs,e.generateCurrentRequestHeaderValue()),this.parameters.set(ls,e.generateLastRequestHeaderValue())}addThrottling(){this.parameters.set(hs,qe.X_MS_LIB_CAPABILITY_VALUE)}addLogoutHint(e){this.parameters.set(Es,encodeURIComponent(e))}createQueryString(){const e=new Array;return this.parameters.forEach((t,n)=>{e.push(`${n}=${t}`)}),e.join("&")}}/*! @azure/msal-common v14.7.0 2024-02-07 */function _s(i){return i.hasOwnProperty("authorization_endpoint")&&i.hasOwnProperty("token_endpoint")&&i.hasOwnProperty("issuer")&&i.hasOwnProperty("jwks_uri")}/*! @azure/msal-common v14.7.0 2024-02-07 */function Rs(i){return i.hasOwnProperty("tenant_discovery_endpoint")&&i.hasOwnProperty("metadata")}/*! @azure/msal-common v14.7.0 2024-02-07 */function ks(i){return i.hasOwnProperty("error")&&i.hasOwnProperty("error_description")}/*! @azure/msal-common v14.7.0 2024-02-07 */const h={AcquireTokenByCode:"acquireTokenByCode",AcquireTokenByRefreshToken:"acquireTokenByRefreshToken",AcquireTokenSilent:"acquireTokenSilent",AcquireTokenSilentAsync:"acquireTokenSilentAsync",AcquireTokenPopup:"acquireTokenPopup",AcquireTokenRedirect:"acquireTokenRedirect",CryptoOptsGetPublicKeyThumbprint:"cryptoOptsGetPublicKeyThumbprint",CryptoOptsSignJwt:"cryptoOptsSignJwt",SilentCacheClientAcquireToken:"silentCacheClientAcquireToken",SilentIframeClientAcquireToken:"silentIframeClientAcquireToken",SilentRefreshClientAcquireToken:"silentRefreshClientAcquireToken",SsoSilent:"ssoSilent",StandardInteractionClientGetDiscoveredAuthority:"standardInteractionClientGetDiscoveredAuthority",FetchAccountIdWithNativeBroker:"fetchAccountIdWithNativeBroker",NativeInteractionClientAcquireToken:"nativeInteractionClientAcquireToken",BaseClientCreateTokenRequestHeaders:"baseClientCreateTokenRequestHeaders",RefreshTokenClientExecutePostToTokenEndpoint:"refreshTokenClientExecutePostToTokenEndpoint",AuthorizationCodeClientExecutePostToTokenEndpoint:"authorizationCodeClientExecutePostToTokenEndpoint",BrokerHandhshake:"brokerHandshake",AcquireTokenByRefreshTokenInBroker:"acquireTokenByRefreshTokenInBroker",AcquireTokenByBroker:"acquireTokenByBroker",RefreshTokenClientExecuteTokenRequest:"refreshTokenClientExecuteTokenRequest",RefreshTokenClientAcquireToken:"refreshTokenClientAcquireToken",RefreshTokenClientAcquireTokenWithCachedRefreshToken:"refreshTokenClientAcquireTokenWithCachedRefreshToken",RefreshTokenClientAcquireTokenByRefreshToken:"refreshTokenClientAcquireTokenByRefreshToken",RefreshTokenClientCreateTokenRequestBody:"refreshTokenClientCreateTokenRequestBody",AcquireTokenFromCache:"acquireTokenFromCache",SilentFlowClientAcquireCachedToken:"silentFlowClientAcquireCachedToken",SilentFlowClientGenerateResultFromCacheRecord:"silentFlowClientGenerateResultFromCacheRecord",AcquireTokenBySilentIframe:"acquireTokenBySilentIframe",InitializeBaseRequest:"initializeBaseRequest",InitializeSilentRequest:"initializeSilentRequest",InitializeClientApplication:"initializeClientApplication",SilentIframeClientTokenHelper:"silentIframeClientTokenHelper",SilentHandlerInitiateAuthRequest:"silentHandlerInitiateAuthRequest",SilentHandlerMonitorIframeForHash:"silentHandlerMonitorIframeForHash",SilentHandlerLoadFrame:"silentHandlerLoadFrame",SilentHandlerLoadFrameSync:"silentHandlerLoadFrameSync",StandardInteractionClientCreateAuthCodeClient:"standardInteractionClientCreateAuthCodeClient",StandardInteractionClientGetClientConfiguration:"standardInteractionClientGetClientConfiguration",StandardInteractionClientInitializeAuthorizationRequest:"standardInteractionClientInitializeAuthorizationRequest",StandardInteractionClientInitializeAuthorizationCodeRequest:"standardInteractionClientInitializeAuthorizationCodeRequest",GetAuthCodeUrl:"getAuthCodeUrl",HandleCodeResponseFromServer:"handleCodeResponseFromServer",HandleCodeResponse:"handleCodeResponse",UpdateTokenEndpointAuthority:"updateTokenEndpointAuthority",AuthClientAcquireToken:"authClientAcquireToken",AuthClientExecuteTokenRequest:"authClientExecuteTokenRequest",AuthClientCreateTokenRequestBody:"authClientCreateTokenRequestBody",AuthClientCreateQueryString:"authClientCreateQueryString",PopTokenGenerateCnf:"popTokenGenerateCnf",PopTokenGenerateKid:"popTokenGenerateKid",HandleServerTokenResponse:"handleServerTokenResponse",DeserializeResponse:"deserializeResponse",AuthorityFactoryCreateDiscoveredInstance:"authorityFactoryCreateDiscoveredInstance",AuthorityResolveEndpointsAsync:"authorityResolveEndpointsAsync",AuthorityResolveEndpointsFromLocalSources:"authorityResolveEndpointsFromLocalSources",AuthorityGetCloudDiscoveryMetadataFromNetwork:"authorityGetCloudDiscoveryMetadataFromNetwork",AuthorityUpdateCloudDiscoveryMetadata:"authorityUpdateCloudDiscoveryMetadata",AuthorityGetEndpointMetadataFromNetwork:"authorityGetEndpointMetadataFromNetwork",AuthorityUpdateEndpointMetadata:"authorityUpdateEndpointMetadata",AuthorityUpdateMetadataWithRegionalInformation:"authorityUpdateMetadataWithRegionalInformation",RegionDiscoveryDetectRegion:"regionDiscoveryDetectRegion",RegionDiscoveryGetRegionFromIMDS:"regionDiscoveryGetRegionFromIMDS",RegionDiscoveryGetCurrentVersion:"regionDiscoveryGetCurrentVersion",AcquireTokenByCodeAsync:"acquireTokenByCodeAsync",GetEndpointMetadataFromNetwork:"getEndpointMetadataFromNetwork",GetCloudDiscoveryMetadataFromNetworkMeasurement:"getCloudDiscoveryMetadataFromNetworkMeasurement",HandleRedirectPromiseMeasurement:"handleRedirectPromise",HandleNativeRedirectPromiseMeasurement:"handleNativeRedirectPromise",UpdateCloudDiscoveryMetadataMeasurement:"updateCloudDiscoveryMetadataMeasurement",UsernamePasswordClientAcquireToken:"usernamePasswordClientAcquireToken",NativeMessageHandlerHandshake:"nativeMessageHandlerHandshake",NativeGenerateAuthResult:"nativeGenerateAuthResult",RemoveHiddenIframe:"removeHiddenIframe",ClearTokensAndKeysWithClaims:"clearTokensAndKeysWithClaims",CacheManagerGetRefreshToken:"cacheManagerGetRefreshToken",GeneratePkceCodes:"generatePkceCodes",GenerateCodeVerifier:"generateCodeVerifier",GenerateCodeChallengeFromVerifier:"generateCodeChallengeFromVerifier",Sha256Digest:"sha256Digest",GetRandomValues:"getRandomValues"},bs={NotStarted:0,InProgress:1,Completed:2};/*! @azure/msal-common v14.7.0 2024-02-07 */const ve=(i,e,t,n,o)=>(...r)=>{t.trace(`Executing function ${e}`);const s=n?.startMeasurement(e,o);if(o){const a=e+"CallCount";n?.incrementFields({[a]:1},o)}try{const a=i(...r);return s?.end({success:!0}),t.trace(`Returning result from ${e}`),a}catch(a){t.trace(`Error occurred in ${e}`);try{t.trace(JSON.stringify(a))}catch{t.trace("Unable to print error message.")}throw s?.end({success:!1}),a}},m=(i,e,t,n,o)=>(...r)=>{t.trace(`Executing function ${e}`);const s=n?.startMeasurement(e,o);if(o){const a=e+"CallCount";n?.incrementFields({[a]:1},o)}return n?.setPreQueueTime(e,o),i(...r).then(a=>(t.trace(`Returning result from ${e}`),s?.end({success:!0}),a)).catch(a=>{t.trace(`Error occurred in ${e}`);try{t.trace(JSON.stringify(a))}catch{t.trace("Unable to print error message.")}throw s?.end({success:!1}),a})};/*! @azure/msal-common v14.7.0 2024-02-07 */class Tt{constructor(e,t,n,o){this.networkInterface=e,this.logger=t,this.performanceClient=n,this.correlationId=o}async detectRegion(e,t){this.performanceClient?.addQueueMeasurement(h.RegionDiscoveryDetectRegion,this.correlationId);let n=e;if(n)t.region_source=Re.ENVIRONMENT_VARIABLE;else{const o=Tt.IMDS_OPTIONS;try{const r=await m(this.getRegionFromIMDS.bind(this),h.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(d.IMDS_VERSION,o);if(r.status===et.httpSuccess&&(n=r.body,t.region_source=Re.IMDS),r.status===et.httpBadRequest){const s=await m(this.getCurrentVersion.bind(this),h.RegionDiscoveryGetCurrentVersion,this.logger,this.performanceClient,this.correlationId)(o);if(!s)return t.region_source=Re.FAILED_AUTO_DETECTION,null;const a=await m(this.getRegionFromIMDS.bind(this),h.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(s,o);a.status===et.httpSuccess&&(n=a.body,t.region_source=Re.IMDS)}}catch{return t.region_source=Re.FAILED_AUTO_DETECTION,null}}return n||(t.region_source=Re.FAILED_AUTO_DETECTION),n||null}async getRegionFromIMDS(e,t){return this.performanceClient?.addQueueMeasurement(h.RegionDiscoveryGetRegionFromIMDS,this.correlationId),this.networkInterface.sendGetRequestAsync(`${d.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,d.IMDS_TIMEOUT)}async getCurrentVersion(e){this.performanceClient?.addQueueMeasurement(h.RegionDiscoveryGetCurrentVersion,this.correlationId);try{const t=await this.networkInterface.sendGetRequestAsync(`${d.IMDS_ENDPOINT}?format=json`,e);return t.status===et.httpBadRequest&&t.body&&t.body["newest-versions"]&&t.body["newest-versions"].length>0?t.body["newest-versions"][0]:null}catch{return null}}}Tt.IMDS_OPTIONS={headers:{Metadata:"true"}};/*! @azure/msal-common v14.7.0 2024-02-07 */class x{constructor(e,t,n,o,r,s,a){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=n,this.authorityOptions=o,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=r,this.performanceClient=a,this.correlationId=s,this.regionDiscovery=new Tt(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(d.CIAM_AUTH_URL))return W.Ciam;const t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case d.ADFS:return W.Adfs;case d.DSTS:return W.Dsts}return W.Default}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new S(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw g(ae)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw g(ae)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw g(ae)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw g(Mo);return this.replacePath(this.metadata.end_session_endpoint)}else throw g(ae)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw g(ae)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw g(ae)}canReplaceTenant(e){return e.PathSegments.length===1&&!x.reservedTenantDomains.has(e.PathSegments[0])&&this.getAuthorityType(e)===W.Default&&this.protocolMode===he.AAD}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const o=new S(this.metadata.canonical_authority).getUrlComponents(),r=o.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach((a,c)=>{let l=r[c];if(c===0&&this.canReplaceTenant(o)){const u=new S(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];l!==u&&(this.logger.verbose(`Replacing tenant domain name ${l} with id ${u}`),l=u)}a!==l&&(t=t.replace(`/${l}/`,`/${a}/`))}),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||this.authorityType===W.Adfs||this.protocolMode!==he.AAD&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){this.performanceClient?.addQueueMeasurement(h.AuthorityResolveEndpointsAsync,this.correlationId);const e=this.getCurrentMetadataEntity(),t=await m(this.updateCloudDiscoveryMetadata.bind(this),h.AuthorityUpdateCloudDiscoveryMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);const n=await m(this.updateEndpointMetadata.bind(this),h.AuthorityUpdateEndpointMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:n}),this.performanceClient?.addFields({cloudDiscoverySource:t,authorityEndpointSource:n},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:xn(),jwks_uri:""}),e}updateCachedMetadata(e,t,n){t!==$.CACHE&&n?.source!==$.CACHE&&(e.expiresAt=xn(),e.canonical_authority=this.canonicalAuthority);const o=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(o,e),this.metadata=e}async updateEndpointMetadata(e){this.performanceClient?.addQueueMeasurement(h.AuthorityUpdateEndpointMetadata,this.correlationId);const t=this.updateEndpointMetadataFromLocalSources(e);if(t){if(t.source===$.HARDCODED_VALUES&&this.authorityOptions.azureRegionConfiguration?.azureRegion&&t.metadata){const o=await m(this.updateMetadataWithRegionalInformation.bind(this),h.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t.metadata);tt(e,o,!1),e.canonical_authority=this.canonicalAuthority}return t.source}let n=await m(this.getEndpointMetadataFromNetwork.bind(this),h.AuthorityGetEndpointMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(n)return this.authorityOptions.azureRegionConfiguration?.azureRegion&&(n=await m(this.updateMetadataWithRegionalInformation.bind(this),h.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(n)),tt(e,n,!0),$.NETWORK;throw g(Ao,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");const t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),tt(e,t,!1),{source:$.CONFIG};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{const o=this.getEndpointMetadataFromHardcodedValues();if(o)return tt(e,o,!1),{source:$.HARDCODED_VALUES,metadata:o};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const n=Gn(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!n?(this.logger.verbose("Found endpoint metadata in the cache."),{source:$.CACHE}):(n&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new S(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch{throw k(zo)}return null}async getEndpointMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(h.AuthorityGetEndpointMetadataFromNetwork,this.correlationId);const e={},t=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${t}`);try{const n=await this.networkInterface.sendGetRequestAsync(t,e);return _s(n.body)?n.body:(this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(n){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${n}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in qn?qn[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(e){this.performanceClient?.addQueueMeasurement(h.AuthorityUpdateMetadataWithRegionalInformation,this.correlationId);const t=this.authorityOptions.azureRegionConfiguration?.azureRegion;if(t){if(t!==d.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome=wt.CONFIGURED_NO_AUTO_DETECTION,this.regionDiscoveryMetadata.region_used=t,x.replaceWithRegionalInformation(e,t);const n=await m(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),h.RegionDiscoveryDetectRegion,this.logger,this.performanceClient,this.correlationId)(this.authorityOptions.azureRegionConfiguration?.environmentRegion,this.regionDiscoveryMetadata);if(n)return this.regionDiscoveryMetadata.region_outcome=wt.AUTO_DETECTION_REQUESTED_SUCCESSFUL,this.regionDiscoveryMetadata.region_used=n,x.replaceWithRegionalInformation(e,n);this.regionDiscoveryMetadata.region_outcome=wt.AUTO_DETECTION_REQUESTED_FAILED}return e}async updateCloudDiscoveryMetadata(e){this.performanceClient?.addQueueMeasurement(h.AuthorityUpdateCloudDiscoveryMetadata,this.correlationId);const t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;const n=await m(this.getCloudDiscoveryMetadataFromNetwork.bind(this),h.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(n)return _t(e,n,!0),$.NETWORK;throw k(Yo)}updateCloudDiscoveryMetadataFromLocalSources(e){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||d.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||d.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||d.NOT_APPLICABLE}`);const t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),_t(e,t,!1),$.CONFIG;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const o=Pi(this.hostnameAndPort);if(o)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),_t(e,o,!1),$.HARDCODED_VALUES;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}const n=Gn(e);return this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!n?(this.logger.verbose("Found cloud discovery metadata in the cache."),$.CACHE):(n&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(this.authorityType===W.Ciam)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),x.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=JSON.parse(this.authorityOptions.cloudDiscoveryMetadata),t=ct(e.metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),t)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),t;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch{throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),k(cn)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),x.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(h.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.correlationId);const e=`${d.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,t={};let n=null;try{const o=await this.networkInterface.sendGetRequestAsync(e,t);let r,s;if(Rs(o.body))r=o.body,s=r.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${r.tenant_discovery_endpoint}`);else if(ks(o.body)){if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${o.status}`),r=o.body,r.error===d.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${r.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${r.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),s=[]}else return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),n=ct(s,this.hostnameAndPort)}catch(o){if(o instanceof O)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.
Error: ${o.errorCode}
Error Description: ${o.errorMessage}`);else{const r=o;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.
Error: ${r.name}
Error Description: ${r.message}`)}return null}return n||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),n=x.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),n}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter(t=>t&&S.getDomainFromUrl(t).toLowerCase()===this.hostnameAndPort).length>0}static generateAuthority(e,t){let n;if(t&&t.azureCloudInstance!==on.None){const o=t.tenant?t.tenant:d.DEFAULT_COMMON_TENANT;n=`${t.azureCloudInstance}/${o}/`}return n||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.discoveryComplete())return this.metadata.preferred_cache;throw g(ae)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return er.has(e)}static isPublicCloudAuthority(e){return d.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,n){const o=new S(e);o.validateAsUri();const r=o.getUrlComponents();let s=`${t}.${r.HostNameAndPort}`;this.isPublicCloudAuthority(r.HostNameAndPort)&&(s=`${t}.${d.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const a=S.constructAuthorityUriFromObject({...o.getUrlComponents(),HostNameAndPort:s}).urlString;return n?`${a}?${n}`:a}static replaceWithRegionalInformation(e,t){const n={...e};return n.authorization_endpoint=x.buildRegionalAuthorityString(n.authorization_endpoint,t),n.token_endpoint=x.buildRegionalAuthorityString(n.token_endpoint,t),n.end_session_endpoint&&(n.end_session_endpoint=x.buildRegionalAuthorityString(n.end_session_endpoint,t)),n}static transformCIAMAuthority(e){let t=e;const o=new S(e).getUrlComponents();if(o.PathSegments.length===0&&o.HostNameAndPort.endsWith(d.CIAM_AUTH_URL)){const r=o.HostNameAndPort.split(".")[0];t=`${t}${r}${d.AAD_TENANT_DOMAIN_SUFFIX}`}return t}}x.reservedTenantDomains=new Set(["{tenant}","{tenantid}",me.COMMON,me.CONSUMERS,me.ORGANIZATIONS]);function Os(i){const n=new S(i).getUrlComponents().PathSegments.slice(-1)[0].toLowerCase();switch(n){case me.COMMON:case me.ORGANIZATIONS:case me.CONSUMERS:return;default:return n}}function nr(i){return i.endsWith(d.FORWARD_SLASH)?i:`${i}${d.FORWARD_SLASH}`}function Ps(i){const e=i.cloudDiscoveryMetadata;let t;if(e)try{t=JSON.parse(e)}catch{throw k(cn)}return{canonicalAuthority:i.authority?nr(i.authority):void 0,knownAuthorities:i.knownAuthorities,cloudDiscoveryMetadata:t}}/*! @azure/msal-common v14.7.0 2024-02-07 */async function or(i,e,t,n,o,r,s){s?.addQueueMeasurement(h.AuthorityFactoryCreateDiscoveredInstance,r);const a=x.transformCIAMAuthority(nr(i)),c=new x(a,e,t,n,o,r,s);try{return await m(c.resolveEndpointsAsync.bind(c),h.AuthorityResolveEndpointsAsync,o,s,r)(),c}catch{throw g(ae)}}/*! @azure/msal-common v14.7.0 2024-02-07 */class gn{constructor(e,t){this.config=xi(e),this.logger=new fe(this.config.loggerOptions,Lo,nn),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.networkManager=new qi(this.networkClient,this.cacheManager),this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){const t={};if(t[te.CONTENT_TYPE]=d.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case z.HOME_ACCOUNT_ID:try{const n=Pe(e.credential);t[te.CCS_HEADER]=`Oid:${n.uid}@${n.utid}`}catch(n){this.logger.verbose("Could not parse home account ID for CCS Header: "+n)}break;case z.UPN:t[te.CCS_HEADER]=`UPN: ${e.credential}`;break}return t}async executePostToTokenEndpoint(e,t,n,o,r,s){s&&this.performanceClient?.addQueueMeasurement(s,r);const a=await this.networkManager.sendPostRequest(o,e,{body:t,headers:n});return this.performanceClient?.addFields({refreshTokenSize:a.body.refresh_token?.length||0,httpVerToken:a.headers?.[te.X_MS_HTTP_VERSION]||""},r),this.config.serverTelemetryManager&&a.status<500&&a.status!==429&&this.config.serverTelemetryManager.clearTelemetryCache(),a}async updateAuthority(e,t){this.performanceClient?.addQueueMeasurement(h.UpdateTokenEndpointAuthority,t);const n=`https://${e}/${this.authority.tenant}/`,o=await or(n,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=o}createTokenQueryParameters(e){const t=new $e;return e.tokenQueryParameters&&t.addExtraQueryParameters(e.tokenQueryParameters),t.createQueryString()}}/*! @azure/msal-common v14.7.0 2024-02-07 */const lt="no_tokens_found",rr="native_account_unavailable",pn="refresh_token_expired",Ns="interaction_required",Ms="consent_required",Ls="login_required",At="bad_token";/*! @azure/msal-common v14.7.0 2024-02-07 */const jn=[Ns,Ms,Ls,At],Us=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],Hs={[lt]:"No refresh token found in the cache. Please sign-in.",[rr]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[pn]:"Refresh token has expired.",[At]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve."};class X extends O{constructor(e,t,n,o,r,s,a){super(e,t,n),Object.setPrototypeOf(this,X.prototype),this.timestamp=o||d.EMPTY_STRING,this.traceId=r||d.EMPTY_STRING,this.correlationId=s||d.EMPTY_STRING,this.claims=a||d.EMPTY_STRING,this.name="InteractionRequiredAuthError"}}function Qn(i,e,t){const n=!!i&&jn.indexOf(i)>-1,o=!!t&&Us.indexOf(t)>-1,r=!!e&&jn.some(s=>e.indexOf(s)>-1);return n||r||o}function Bt(i){return new X(i,Hs[i])}/*! @azure/msal-common v14.7.0 2024-02-07 */class Ne{constructor(e,t,n,o,r){this.account=e||null,this.idToken=t||null,this.accessToken=n||null,this.refreshToken=o||null,this.appMetadata=r||null}}/*! @azure/msal-common v14.7.0 2024-02-07 */class J{static setRequestState(e,t,n){const o=J.generateLibraryState(e,n);return t?`${o}${d.RESOURCE_DELIM}${t}`:o}static generateLibraryState(e,t){if(!e)throw g(Lt);const n={id:e.createNewGuid()};t&&(n.meta=t);const o=JSON.stringify(n);return e.base64Encode(o)}static parseRequestState(e,t){if(!e)throw g(Lt);if(!t)throw g(Le);try{const n=t.split(d.RESOURCE_DELIM),o=n[0],r=n.length>1?n.slice(1).join(d.RESOURCE_DELIM):d.EMPTY_STRING,s=e.base64Decode(o),a=JSON.parse(s);return{userRequestState:r||d.EMPTY_STRING,libraryState:a}}catch{throw g(Le)}}}/*! @azure/msal-common v14.7.0 2024-02-07 */const Ds={SW:"sw",UHW:"uhw"};class De{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){this.performanceClient?.addQueueMeasurement(h.PopTokenGenerateCnf,e.correlationId);const n=await m(this.generateKid.bind(this),h.PopTokenGenerateCnf,t,this.performanceClient,e.correlationId)(e),o=this.cryptoUtils.base64Encode(JSON.stringify(n));return{kid:n.kid,reqCnfString:o,reqCnfHash:await this.cryptoUtils.hashString(o)}}async generateKid(e){return this.performanceClient?.addQueueMeasurement(h.PopTokenGenerateKid,e.correlationId),{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:Ds.SW}}async signPopToken(e,t,n){return this.signPayload(e,t,n)}async signPayload(e,t,n,o){const{resourceRequestMethod:r,resourceRequestUri:s,shrClaims:a,shrNonce:c,shrOptions:l}=n,p=(s?new S(s):void 0)?.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:re(),m:r?.toUpperCase(),u:p?.HostNameAndPort,nonce:c||this.cryptoUtils.createNewGuid(),p:p?.AbsolutePath,q:p?.QueryString?[[],p.QueryString]:void 0,client_claims:a||void 0,...o},t,l,n.correlationId)}}/*! @azure/msal-common v14.7.0 2024-02-07 */class Ks{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}/*! @azure/msal-common v14.7.0 2024-02-07 */class Ae{constructor(e,t,n,o,r,s,a){this.clientId=e,this.cacheStorage=t,this.cryptoObj=n,this.logger=o,this.serializableCache=r,this.persistencePlugin=s,this.performanceClient=a}validateServerAuthorizationCodeResponse(e,t){if(!e.state||!t)throw e.state?g(rt,"Cached State"):g(rt,"Server State");let n,o;try{n=decodeURIComponent(e.state)}catch{throw g(Le,e.state)}try{o=decodeURIComponent(t)}catch{throw g(Le,e.state)}if(n!==o)throw g(Eo);if(e.error||e.error_description||e.suberror)throw Qn(e.error,e.error_description,e.suberror)?new X(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||""):new Ce(e.error||"",e.error_description,e.suberror)}validateTokenResponse(e,t){if(e.error||e.error_description||e.suberror){const n=`${e.error_codes} - [${e.timestamp}]: ${e.error_description} - Correlation ID: ${e.correlation_id} - Trace ID: ${e.trace_id}`,o=new Ce(e.error,n,e.suberror);if(t&&e.status&&e.status>=Je.SERVER_ERROR_RANGE_START&&e.status<=Je.SERVER_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.
${o}`);return}else if(t&&e.status&&e.status>=Je.CLIENT_ERROR_RANGE_START&&e.status<=Je.CLIENT_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.
${o}`);return}throw Qn(e.error,e.error_description,e.suberror)?new X(e.error,e.error_description,e.suberror,e.timestamp||d.EMPTY_STRING,e.trace_id||d.EMPTY_STRING,e.correlation_id||d.EMPTY_STRING,e.claims||d.EMPTY_STRING):o}}async handleServerTokenResponse(e,t,n,o,r,s,a,c,l){this.performanceClient?.addQueueMeasurement(h.HandleServerTokenResponse,e.correlation_id);let u;if(e.id_token){if(u=Se(e.id_token||d.EMPTY_STRING,this.cryptoObj.base64Decode),r&&r.nonce&&u.nonce!==r.nonce)throw g(So);if(o.maxAge||o.maxAge===0){const _=u.auth_time;if(!_)throw g(Xt);Uo(_,o.maxAge)}}this.homeAccountIdentifier=D.generateHomeAccountId(e.client_info||d.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,u);let p;r&&r.state&&(p=J.parseRequestState(this.cryptoObj,r.state)),e.key_id=e.key_id||o.sshKid||void 0;const C=this.generateCacheRecord(e,t,n,o,u,s,r);let E;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),E=new Ks(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(E)),a&&!c&&C.account){const _=C.account.generateAccountKey();if(!this.cacheStorage.getAccount(_,this.logger))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await Ae.generateAuthenticationResult(this.cryptoObj,t,C,!1,o,u,p,void 0,l)}await this.cacheStorage.saveCacheRecord(C,o.storeInCache)}finally{this.persistencePlugin&&this.serializableCache&&E&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(E))}return Ae.generateAuthenticationResult(this.cryptoObj,t,C,!1,o,u,p,e,l)}generateCacheRecord(e,t,n,o,r,s,a){const c=t.getPreferredCache();if(!c)throw g(en);const l=Jo(r);let u,p;e.id_token&&r&&(u=ft(this.homeAccountIdentifier,c,e.id_token,this.clientId,l||""),p=mn(this.cacheStorage,t,this.homeAccountIdentifier,r,this.cryptoObj.base64Decode,e.client_info,c,l,a,void 0,this.logger));let C=null;if(e.access_token){const v=e.scope?L.fromString(e.scope):new L(o.scopes||[]),M=(typeof e.expires_in=="string"?parseInt(e.expires_in,10):e.expires_in)||0,we=(typeof e.ext_expires_in=="string"?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,ie=(typeof e.refresh_in=="string"?parseInt(e.refresh_in,10):e.refresh_in)||void 0,_e=n+M,vt=_e+we,Qe=ie&&ie>0?n+ie:void 0;C=Ct(this.homeAccountIdentifier,c,e.access_token,this.clientId,l||t.tenant||"",v.printScopes(),_e,vt,this.cryptoObj.base64Decode,Qe,e.token_type,s,e.key_id,o.claims,o.requestedClaimsHash)}let E=null;if(e.refresh_token){let v;if(e.refresh_token_expires_in){const M=typeof e.refresh_token_expires_in=="string"?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in;v=n+M}E=Ho(this.homeAccountIdentifier,c,e.refresh_token,this.clientId,e.foci,s,v)}let _=null;return e.foci&&(_={clientId:this.clientId,environment:c,familyId:e.foci}),new Ne(p,u,C,E,_)}static async generateAuthenticationResult(e,t,n,o,r,s,a,c,l){let u=d.EMPTY_STRING,p=[],C=null,E,_,v=d.EMPTY_STRING;if(n.accessToken){if(n.accessToken.tokenType===R.POP){const _e=new De(e),{secret:vt,keyId:Qe}=n.accessToken;if(!Qe)throw g(tn);u=await _e.signPopToken(vt,Qe,r)}else u=n.accessToken.secret;p=L.fromString(n.accessToken.target).asArray(),C=new Date(Number(n.accessToken.expiresOn)*1e3),E=new Date(Number(n.accessToken.extendedExpiresOn)*1e3),n.accessToken.refreshOn&&(_=new Date(Number(n.accessToken.refreshOn)*1e3))}n.appMetadata&&(v=n.appMetadata.familyId===Ge?Ge:"");const M=s?.oid||s?.sub||"",we=s?.tid||"";c?.spa_accountid&&n.account&&(n.account.nativeAccountId=c?.spa_accountid);const ie=n.account?dn(n.account.getAccountInfo(),void 0,s):null;return{authority:t.canonicalAuthority,uniqueId:M,tenantId:we,scopes:p,account:ie,idToken:n?.idToken?.secret||"",idTokenClaims:s||{},accessToken:u,fromCache:o,expiresOn:C,extExpiresOn:E,refreshOn:_,correlationId:r.correlationId,requestId:l||d.EMPTY_STRING,familyId:v,tokenType:n.accessToken?.tokenType||d.EMPTY_STRING,state:a?a.userRequestState:d.EMPTY_STRING,cloudGraphHostName:n.account?.cloudGraphHostName||d.EMPTY_STRING,msGraphHost:n.account?.msGraphHost||d.EMPTY_STRING,code:c?.spa_code,fromNativeBroker:!1}}}function mn(i,e,t,n,o,r,s,a,c,l,u){u?.verbose("setCachedAccount called");const C=i.getAccountKeys().find(M=>M.startsWith(t));let E=null;C&&(E=i.getAccount(C,u));const _=E||D.createAccount({homeAccountId:t,idTokenClaims:n,clientInfo:r,environment:s,cloudGraphHostName:c?.cloud_graph_host_name,msGraphHost:c?.msgraph_host,nativeAccountId:l},e,o),v=_.tenantProfiles||[];if(a&&!v.find(M=>M.tenantId===a)){const M=hn(t,n);v.push(M)}return _.tenantProfiles=v,_}/*! @azure/msal-common v14.7.0 2024-02-07 */class ir extends gn{constructor(e,t){super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=this.config.authOptions.authority.options.OIDCOptions?.defaultScopes}async getAuthCodeUrl(e){this.performanceClient?.addQueueMeasurement(h.GetAuthCodeUrl,e.correlationId);const t=await m(this.createAuthCodeUrlQueryString.bind(this),h.AuthClientCreateQueryString,this.logger,this.performanceClient,e.correlationId)(e);return S.appendQueryString(this.authority.authorizationEndpoint,t)}async acquireToken(e,t){if(this.performanceClient?.addQueueMeasurement(h.AuthClientAcquireToken,e.correlationId),!e.code)throw g(_o);const n=re(),o=await m(this.executeTokenRequest.bind(this),h.AuthClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(this.authority,e),r=o.headers?.[te.X_MS_REQUEST_ID],s=new Ae(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return s.validateTokenResponse(o.body),m(s.handleServerTokenResponse.bind(s),h.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(o.body,this.authority,n,e,t,void 0,void 0,void 0,r)}handleFragmentResponse(e,t){if(new Ae(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,null,null).validateServerAuthorizationCodeResponse(e,t),!e.code)throw g(Po);return e}getLogoutUri(e){if(!e)throw k(qo);const t=this.createLogoutUrlQueryString(e);return S.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(h.AuthClientExecuteTokenRequest,t.correlationId);const n=this.createTokenQueryParameters(t),o=S.appendQueryString(e.tokenEndpoint,n),r=await m(this.createTokenRequestBody.bind(this),h.AuthClientCreateTokenRequestBody,this.logger,this.performanceClient,t.correlationId)(t);let s;if(t.clientInfo)try{const l=st(t.clientInfo,this.cryptoUtils.base64Decode);s={credential:`${l.uid}${G.CLIENT_INFO_SEPARATOR}${l.utid}`,type:z.HOME_ACCOUNT_ID}}catch(l){this.logger.verbose("Could not parse client info for CCS Header: "+l)}const a=this.createTokenRequestHeaders(s||t.ccsCredential),c={clientId:t.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return m(this.executePostToTokenEndpoint.bind(this),h.AuthorizationCodeClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,t.correlationId)(o,r,a,c,t.correlationId,h.AuthorizationCodeClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(h.AuthClientCreateTokenRequestBody,e.correlationId);const t=new $e;if(t.addClientId(e.tokenBodyParameters?.[He]||this.config.authOptions.clientId),this.includeRedirectUri?t.addRedirectUri(e.redirectUri):ye.validateRedirectUri(e.redirectUri),t.addScopes(e.scopes,!0,this.oidcDefaultScopes),t.addAuthorizationCode(e.code),t.addLibraryInfo(this.config.libraryInfo),t.addApplicationTelemetry(this.config.telemetry.application),t.addThrottling(),this.serverTelemetryManager&&!Kt(this.config)&&t.addServerTelemetry(this.serverTelemetryManager),e.codeVerifier&&t.addCodeVerifier(e.codeVerifier),this.config.clientCredentials.clientSecret&&t.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const r=this.config.clientCredentials.clientAssertion;t.addClientAssertion(r.assertion),t.addClientAssertionType(r.assertionType)}if(t.addGrantType(mo.AUTHORIZATION_CODE_GRANT),t.addClientInfo(),e.authenticationScheme===R.POP){const r=new De(this.cryptoUtils,this.performanceClient),s=await m(r.generateCnf.bind(r),h.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger);t.addPopToken(s.reqCnfString)}else if(e.authenticationScheme===R.SSH)if(e.sshJwk)t.addSshJwk(e.sshJwk);else throw k(yt);const n=e.correlationId||this.config.cryptoInterface.createNewGuid();t.addCorrelationId(n),(!Q.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities);let o;if(e.clientInfo)try{const r=st(e.clientInfo,this.cryptoUtils.base64Decode);o={credential:`${r.uid}${G.CLIENT_INFO_SEPARATOR}${r.utid}`,type:z.HOME_ACCOUNT_ID}}catch(r){this.logger.verbose("Could not parse client info for CCS Header: "+r)}else o=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&o)switch(o.type){case z.HOME_ACCOUNT_ID:try{const r=Pe(o.credential);t.addCcsOid(r)}catch(r){this.logger.verbose("Could not parse home account ID for CCS Header: "+r)}break;case z.UPN:t.addCcsUpn(o.credential);break}return e.tokenBodyParameters&&t.addExtraQueryParameters(e.tokenBodyParameters),e.enableSpaAuthorizationCode&&(!e.tokenBodyParameters||!e.tokenBodyParameters[Wn])&&t.addExtraQueryParameters({[Wn]:"1"}),t.createQueryString()}async createAuthCodeUrlQueryString(e){this.performanceClient?.addQueueMeasurement(h.AuthClientCreateQueryString,e.correlationId);const t=new $e;t.addClientId(e.extraQueryParameters?.[He]||this.config.authOptions.clientId);const n=[...e.scopes||[],...e.extraScopesToConsent||[]];t.addScopes(n,!0,this.oidcDefaultScopes),t.addRedirectUri(e.redirectUri);const o=e.correlationId||this.config.cryptoInterface.createNewGuid();if(t.addCorrelationId(o),t.addResponseMode(e.responseMode),t.addResponseTypeCode(),t.addLibraryInfo(this.config.libraryInfo),Kt(this.config)||t.addApplicationTelemetry(this.config.telemetry.application),t.addClientInfo(),e.codeChallenge&&e.codeChallengeMethod&&t.addCodeChallengeParams(e.codeChallenge,e.codeChallengeMethod),e.prompt&&t.addPrompt(e.prompt),e.domainHint&&t.addDomainHint(e.domainHint),e.prompt!==q.SELECT_ACCOUNT)if(e.sid&&e.prompt===q.NONE)this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),t.addSid(e.sid);else if(e.account){const r=this.extractAccountSid(e.account),s=this.extractLoginHint(e.account);if(s){this.logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),t.addLoginHint(s);try{const a=Pe(e.account.homeAccountId);t.addCcsOid(a)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(r&&e.prompt===q.NONE){this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),t.addSid(r);try{const a=Pe(e.account.homeAccountId);t.addCcsOid(a)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint);else if(e.account.username){this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),t.addLoginHint(e.account.username);try{const a=Pe(e.account.homeAccountId);t.addCcsOid(a)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(this.logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint));else this.logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");if(e.nonce&&t.addNonce(e.nonce),e.state&&t.addState(e.state),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters),e.nativeBroker&&(t.addNativeBroker(),e.authenticationScheme===R.POP)){const r=new De(this.cryptoUtils),s=await m(r.generateCnf.bind(r),h.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger);t.addPopToken(s.reqCnfHash)}return t.createQueryString()}createLogoutUrlQueryString(e){const t=new $e;return e.postLogoutRedirectUri&&t.addPostLogoutRedirectUri(e.postLogoutRedirectUri),e.correlationId&&t.addCorrelationId(e.correlationId),e.idTokenHint&&t.addIdTokenHint(e.idTokenHint),e.state&&t.addState(e.state),e.logoutHint&&t.addLogoutHint(e.logoutHint),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters),t.createQueryString()}extractAccountSid(e){return e.idTokenClaims?.sid||null}extractLoginHint(e){return e.idTokenClaims?.login_hint||null}}/*! @azure/msal-common v14.7.0 2024-02-07 */const Bs=300;class Ft extends gn{constructor(e,t){super(e,t)}async acquireToken(e){this.performanceClient?.addQueueMeasurement(h.RefreshTokenClientAcquireToken,e.correlationId);const t=re(),n=await m(this.executeTokenRequest.bind(this),h.RefreshTokenClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(e,this.authority),o=n.headers?.[te.X_MS_REQUEST_ID],r=new Ae(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return r.validateTokenResponse(n.body),m(r.handleServerTokenResponse.bind(r),h.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(n.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,o)}async acquireTokenByRefreshToken(e){if(!e)throw k(Go);if(this.performanceClient?.addQueueMeasurement(h.RefreshTokenClientAcquireTokenByRefreshToken,e.correlationId),!e.account)throw g(Zt);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await m(this.acquireTokenWithCachedRefreshToken.bind(this),h.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(n){const o=n instanceof X&&n.errorCode===lt,r=n instanceof Ce&&n.errorCode===Ln.INVALID_GRANT_ERROR&&n.subError===Ln.CLIENT_MISMATCH_ERROR;if(o||r)return m(this.acquireTokenWithCachedRefreshToken.bind(this),h.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1);throw n}return m(this.acquireTokenWithCachedRefreshToken.bind(this),h.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){this.performanceClient?.addQueueMeasurement(h.RefreshTokenClientAcquireTokenWithCachedRefreshToken,e.correlationId);const n=ve(this.cacheManager.getRefreshToken.bind(this.cacheManager),h.CacheManagerGetRefreshToken,this.logger,this.performanceClient,e.correlationId)(e.account,t,void 0,this.performanceClient,e.correlationId);if(!n)throw Bt(lt);if(n.expiresOn&&Ht(n.expiresOn,e.refreshTokenExpirationOffsetSeconds||Bs))throw Bt(pn);const o={...e,refreshToken:n.secret,authenticationScheme:e.authenticationScheme||R.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:z.HOME_ACCOUNT_ID}};try{return await m(this.acquireToken.bind(this),h.RefreshTokenClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(o)}catch(r){if(r instanceof X&&r.subError===At){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");const s=Oe(n);this.cacheManager.removeRefreshToken(s)}throw r}}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(h.RefreshTokenClientExecuteTokenRequest,e.correlationId);const n=this.createTokenQueryParameters(e),o=S.appendQueryString(t.tokenEndpoint,n),r=await m(this.createTokenRequestBody.bind(this),h.RefreshTokenClientCreateTokenRequestBody,this.logger,this.performanceClient,e.correlationId)(e),s=this.createTokenRequestHeaders(e.ccsCredential),a={clientId:e.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:t.canonicalAuthority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return m(this.executePostToTokenEndpoint.bind(this),h.RefreshTokenClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,e.correlationId)(o,r,s,a,e.correlationId,h.RefreshTokenClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(h.RefreshTokenClientCreateTokenRequestBody,e.correlationId);const t=e.correlationId,n=new $e;if(n.addClientId(e.tokenBodyParameters?.[He]||this.config.authOptions.clientId),e.redirectUri&&n.addRedirectUri(e.redirectUri),n.addScopes(e.scopes,!0,this.config.authOptions.authority.options.OIDCOptions?.defaultScopes),n.addGrantType(mo.REFRESH_TOKEN_GRANT),n.addClientInfo(),n.addLibraryInfo(this.config.libraryInfo),n.addApplicationTelemetry(this.config.telemetry.application),n.addThrottling(),this.serverTelemetryManager&&!Kt(this.config)&&n.addServerTelemetry(this.serverTelemetryManager),n.addCorrelationId(t),n.addRefreshToken(e.refreshToken),this.config.clientCredentials.clientSecret&&n.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const o=this.config.clientCredentials.clientAssertion;n.addClientAssertion(o.assertion),n.addClientAssertionType(o.assertionType)}if(e.authenticationScheme===R.POP){const o=new De(this.cryptoUtils,this.performanceClient),r=await m(o.generateCnf.bind(o),h.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger);n.addPopToken(r.reqCnfString)}else if(e.authenticationScheme===R.SSH)if(e.sshJwk)n.addSshJwk(e.sshJwk);else throw k(yt);if((!Q.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&n.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case z.HOME_ACCOUNT_ID:try{const o=Pe(e.ccsCredential.credential);n.addCcsOid(o)}catch(o){this.logger.verbose("Could not parse home account ID for CCS Header: "+o)}break;case z.UPN:n.addCcsUpn(e.ccsCredential.credential);break}return e.tokenBodyParameters&&n.addExtraQueryParameters(e.tokenBodyParameters),n.createQueryString()}}/*! @azure/msal-common v14.7.0 2024-02-07 */class Fs extends gn{constructor(e,t){super(e,t)}async acquireToken(e){try{const[t,n]=await this.acquireCachedToken(e);return n===ge.PROACTIVELY_REFRESHED&&(this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed."),new Ft(this.config,this.performanceClient).acquireTokenByRefreshToken(e).catch(()=>{})),t}catch(t){if(t instanceof mt&&t.errorCode===pe)return new Ft(this.config,this.performanceClient).acquireTokenByRefreshToken(e);throw t}}async acquireCachedToken(e){this.performanceClient?.addQueueMeasurement(h.SilentFlowClientAcquireCachedToken,e.correlationId);let t=ge.NOT_APPLICABLE;if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!Q.isEmptyObj(e.claims))throw this.setCacheOutcome(ge.FORCE_REFRESH_OR_CLAIMS,e.correlationId),g(pe);if(!e.account)throw g(Zt);const n=e.account.tenantId||Os(e.authority),o=this.cacheManager.getTokenKeys(),r=this.cacheManager.getAccessToken(e.account,e,o,n,this.performanceClient,e.correlationId);if(r){if(mi(r.cachedAt)||Ht(r.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome(ge.CACHED_ACCESS_TOKEN_EXPIRED,e.correlationId),g(pe);r.refreshOn&&Ht(r.refreshOn,0)&&(t=ge.PROACTIVELY_REFRESHED)}else throw this.setCacheOutcome(ge.NO_CACHED_ACCESS_TOKEN,e.correlationId),g(pe);const s=e.authority||this.authority.getPreferredCache(),a={account:this.cacheManager.readAccountFromCache(e.account),accessToken:r,idToken:this.cacheManager.getIdToken(e.account,o,n,this.performanceClient,e.correlationId),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(s)};return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await m(this.generateResultFromCacheRecord.bind(this),h.SilentFlowClientGenerateResultFromCacheRecord,this.logger,this.performanceClient,e.correlationId)(a,e),t]}setCacheOutcome(e,t){this.serverTelemetryManager?.setCacheOutcome(e),this.performanceClient?.addFields({cacheOutcome:e},t),e!==ge.NOT_APPLICABLE&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){this.performanceClient?.addQueueMeasurement(h.SilentFlowClientGenerateResultFromCacheRecord,t.correlationId);let n;if(e.idToken&&(n=Se(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||t.maxAge===0){const o=n?.auth_time;if(!o)throw g(Xt);Uo(o,t.maxAge)}return Ae.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,n)}}/*! @azure/msal-common v14.7.0 2024-02-07 */const xs={sendGetRequestAsync:()=>Promise.reject(g(I)),sendPostRequestAsync:()=>Promise.reject(g(I))};/*! @azure/msal-common v14.7.0 2024-02-07 */const sr="missing_kid_error",ar="missing_alg_error";/*! @azure/msal-common v14.7.0 2024-02-07 */const Gs={[sr]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[ar]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class fn extends O{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,fn.prototype)}}function Jn(i){return new fn(i,Gs[i])}/*! @azure/msal-common v14.7.0 2024-02-07 */class Cn{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw Jn(sr);if(!e.alg)throw Jn(ar);const t=new Cn({typ:e.typ||ei.Pop,kid:e.kid,alg:e.alg});return JSON.stringify(t)}}/*! @azure/msal-common v14.7.0 2024-02-07 */class ht{constructor(e,t){this.cacheOutcome=ge.NOT_APPLICABLE,this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||d.EMPTY_STRING,this.wrapperVer=e.wrapperVer||d.EMPTY_STRING,this.telemetryCacheKey=F.CACHE_KEY+G.CACHE_KEY_SEPARATOR+e.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${F.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer].join(F.VALUE_SEPARATOR),n=this.getRegionDiscoveryFields(),o=[e,n].join(F.VALUE_SEPARATOR);return[F.SCHEMA_VERSION,o,t].join(F.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=ht.maxErrorsToSend(e),n=e.failedRequests.slice(0,2*t).join(F.VALUE_SEPARATOR),o=e.errors.slice(0,t).join(F.VALUE_SEPARATOR),r=e.errors.length,s=t<r?F.OVERFLOW_TRUE:F.OVERFLOW_FALSE,a=[r,s].join(F.VALUE_SEPARATOR);return[F.SCHEMA_VERSION,e.cacheHits,n,o,a].join(F.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=F.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof O?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(F.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e),e.cacheHits}getLastRequests(){const e={failedRequests:[],errors:[],cacheHits:0};return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||e}clearTelemetryCache(){const e=this.getLastRequests(),t=ht.maxErrorsToSend(e),n=e.errors.length;if(t===n)this.cacheManager.removeItem(this.telemetryCacheKey);else{const o={failedRequests:e.failedRequests.slice(t*2),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,o)}}static maxErrorsToSend(e){let t,n=0,o=0;const r=e.errors.length;for(t=0;t<r;t++){const s=e.failedRequests[2*t]||d.EMPTY_STRING,a=e.failedRequests[2*t+1]||d.EMPTY_STRING,c=e.errors[t]||d.EMPTY_STRING;if(o+=s.toString().length+a.toString().length+c.length+3,o<F.MAX_LAST_HEADER_BYTES)n+=1;else break}return n}getRegionDiscoveryFields(){const e=[];return e.push(this.regionUsed||d.EMPTY_STRING),e.push(this.regionSource||d.EMPTY_STRING),e.push(this.regionOutcome||d.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}}/*! @azure/msal-common v14.7.0 2024-02-07 */class Xn{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class qs{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:bs.InProgress,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new Xn}}startPerformanceMeasurement(){return new Xn}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}/*! @azure/msal-browser v3.9.0 2024-02-07 */const yn="pkce_not_created",cr="crypto_nonexistent",It="empty_navigate_uri",lr="hash_empty_error",Tn="no_state_in_hash",hr="hash_does_not_contain_known_properties",dr="unable_to_parse_state",ur="state_interaction_type_mismatch",gr="interaction_in_progress",pr="popup_window_error",mr="empty_window_error",Ie="user_cancelled",$s="monitor_popup_timeout",fr="monitor_window_timeout",Cr="redirect_in_iframe",yr="block_iframe_reload",Tr="block_nested_popups",zs="iframe_closed_prematurely",Et="silent_logout_unsupported",Ar="no_account_error",Ir="silent_prompt_value_error",Er="no_token_request_cache_error",Sr="unable_to_parse_token_request_cache_error",An="no_cached_authority_error",Ys="auth_request_not_set_error",Vs="invalid_cache_type",vr="non_browser_environment",ke="database_not_open",dt="no_network_connectivity",wr="post_request_failed",_r="get_request_failed",xt="failed_to_parse_response",V="unable_to_load_token",In="crypto_key_not_found",Rr="auth_code_required",kr="auth_code_or_nativeAccountId_required",br="spa_code_and_nativeAccountId_present",En="database_unavailable",Or="unable_to_acquire_token_from_native_platform",Pr="native_handshake_timeout",Nr="native_extension_not_installed",We="native_connection_not_established",Mr="uninitialized_public_client_application",Lr="native_prompt_not_supported",Ur="invalid_base64_string";/*! @azure/msal-browser v3.9.0 2024-02-07 */const se="For more visit: aka.ms/msaljs/browser-errors",Ws={[yn]:"The PKCE code challenge and verifier could not be generated.",[cr]:"The crypto object or function is not available.",[It]:"Navigation URI is empty. Please check stack trace for more info.",[lr]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${se}`,[Tn]:"Hash does not contain state. Please verify that the request originated from msal.",[hr]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${se}`,[dr]:"Unable to parse state. Please verify that the request originated from msal.",[ur]:"Hash contains state but the interaction type does not match the caller.",[gr]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${se}`,[pr]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[mr]:"window.open returned null or undefined window object.",[Ie]:"User cancelled the flow.",[$s]:`Token acquisition in popup failed due to timeout.  ${se}`,[fr]:`Token acquisition in iframe failed due to timeout.  ${se}`,[Cr]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[yr]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${se}`,[Tr]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[zs]:"The iframe being monitored was closed prematurely.",[Et]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[Ar]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[Ir]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[Er]:"No token request found in cache.",[Sr]:"The cached token request could not be parsed.",[An]:"No cached authority found.",[Ys]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[Vs]:"Invalid cache type",[vr]:"Login and token requests are not supported in non-browser environments.",[ke]:"Database is not open!",[dt]:"No network connectivity. Check your internet connection.",[wr]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[_r]:"Network request failed. Please check the network trace to determine root cause.",[xt]:"Failed to parse network response. Check network trace.",[V]:"Error loading token to cache.",[In]:"Cryptographic Key or Keypair not found in browser storage.",[Rr]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[kr]:"An authorization code or nativeAccountId must be provided to this flow.",[br]:"Request cannot contain both spa code and native account id.",[En]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[Or]:`Unable to acquire token from native platform.  ${se}`,[Pr]:"Timed out while attempting to establish connection to browser extension",[Nr]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[We]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${se}`,[Mr]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${se}`,[Lr]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[Ur]:"Invalid base64 encoded string."};class je extends O{constructor(e){super(e,Ws[e]),Object.setPrototypeOf(this,je.prototype),this.name="BrowserAuthError"}}function f(i){return new je(i)}/*! @azure/msal-browser v3.9.0 2024-02-07 */const j={INTERACTION_IN_PROGRESS_VALUE:"interaction_in_progress",INVALID_GRANT_ERROR:"invalid_grant",POPUP_WIDTH:483,POPUP_HEIGHT:600,POPUP_NAME_PREFIX:"msal",DEFAULT_POLL_INTERVAL_MS:30,MSAL_SKU:"msal.js.browser"},xe={CHANNEL_ID:"53ee284d-920a-4b59-9d30-a60315b26836",PREFERRED_EXTENSION_ID:"ppnbnpeolgkicgegkbkbjmhlideopiji",MATS_TELEMETRY:"MATS"},Te={HandshakeRequest:"Handshake",HandshakeResponse:"HandshakeResponse",GetToken:"GetToken",Response:"Response"},H={LocalStorage:"localStorage",SessionStorage:"sessionStorage",MemoryStorage:"memoryStorage"},Zn={GET:"GET",POST:"POST"},w={AUTHORITY:"authority",ACQUIRE_TOKEN_ACCOUNT:"acquireToken.account",SESSION_STATE:"session.state",REQUEST_STATE:"request.state",NONCE_IDTOKEN:"nonce.id_token",ORIGIN_URI:"request.origin",RENEW_STATUS:"token.renew.status",URL_HASH:"urlHash",REQUEST_PARAMS:"request.params",SCOPES:"scopes",INTERACTION_STATUS_KEY:"interaction.status",CCS_CREDENTIAL:"ccs.credential",CORRELATION_ID:"request.correlationId",NATIVE_REQUEST:"request.native",REDIRECT_CONTEXT:"request.redirect.context"},ue={ACCOUNT_KEYS:"msal.account.keys",TOKEN_KEYS:"msal.token.keys"},nt={WRAPPER_SKU:"wrapper.sku",WRAPPER_VER:"wrapper.version"},b={acquireTokenRedirect:861,acquireTokenPopup:862,ssoSilent:863,acquireTokenSilent_authCode:864,handleRedirectPromise:865,acquireTokenByCode:866,acquireTokenSilent_silentFlow:61,logout:961,logoutPopup:962};var y;(function(i){i.Redirect="redirect",i.Popup="popup",i.Silent="silent",i.None="none"})(y||(y={}));const N={Startup:"startup",Login:"login",Logout:"logout",AcquireToken:"acquireToken",SsoSilent:"ssoSilent",HandleRedirect:"handleRedirect",None:"none"},eo={scopes:Ye},Hr="jwk",js={React:"@azure/msal-react",Angular:"@azure/msal-angular"},Gt="msal.db",Qs=1,Js=`${Gt}.keys`,Y={Default:0,AccessToken:1,AccessTokenAndRefreshToken:2,RefreshToken:3,RefreshTokenAndNetwork:4,Skip:5},Xs=[Y.Default,Y.Skip,Y.RefreshTokenAndNetwork],Zs="msal.browser.log.level",ea="msal.browser.log.pii";/*! @azure/msal-browser v3.9.0 2024-02-07 */function ta(i){i.location.hash="",typeof i.history.replaceState=="function"&&i.history.replaceState(null,"",`${i.location.origin}${i.location.pathname}${i.location.search}`)}function na(i){const e=i.split("#");e.shift(),window.location.hash=e.length>0?e.join("#"):""}function Sn(){return window.parent!==window}function oa(){return typeof window<"u"&&!!window.opener&&window.opener!==window&&typeof window.name=="string"&&window.name.indexOf(`${j.POPUP_NAME_PREFIX}.`)===0}function le(){return window.location.href.split("?")[0].split("#")[0]}function ra(){const e=new S(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}function Rt(){if(S.hashContainsKnownProperties(window.location.hash)&&Sn())throw f(yr)}function ia(i,e){const t=Sn();if(i===y.Redirect&&t&&!e)throw f(Cr)}function sa(){if(oa())throw f(Tr)}function aa(i){if(!i)throw f(vr)}function to(i){if(!i)throw f(Mr)}function Dr(i){const e=document.createElement("link");e.rel="preconnect",e.href=new URL(i).origin,e.crossOrigin="anonymous",document.head.appendChild(e),window.setTimeout(()=>{try{document.head.removeChild(e)}catch{}},1e4)}const ca=function(){const e=typeof document<"u"&&document.createElement("link").relList;return e&&e.supports&&e.supports("modulepreload")?"modulepreload":"preload"}(),la=function(i){return"/"+i},no={},ha=function(e,t,n){let o=Promise.resolve();if(t&&t.length>0){const r=document.getElementsByTagName("link");o=Promise.all(t.map(s=>{if(s=la(s),s in no)return;no[s]=!0;const a=s.endsWith(".css"),c=a?'[rel="stylesheet"]':"";if(!!n)for(let p=r.length-1;p>=0;p--){const C=r[p];if(C.href===s&&(!a||C.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${s}"]${c}`))return;const u=document.createElement("link");if(u.rel=a?"stylesheet":ca,a||(u.as="script",u.crossOrigin=""),u.href=s,document.head.appendChild(u),a)return new Promise((p,C)=>{u.addEventListener("load",p),u.addEventListener("error",()=>C(new Error(`Unable to preload CSS for ${s}`)))})}))}return o.then(()=>e()).catch(r=>{const s=new Event("vite:preloadError",{cancelable:!0});if(s.payload=r,window.dispatchEvent(s),!s.defaultPrevented)throw r})};/*! @azure/msal-browser v3.9.0 2024-02-07 */class ut{navigateInternal(e,t){return ut.defaultNavigateWindow(e,t)}navigateExternal(e,t){return ut.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise(n=>{setTimeout(()=>{n(!0)},t.timeout)})}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class da{async sendGetRequestAsync(e,t){let n;try{n=await fetch(e,{method:Zn.GET,headers:this.getFetchHeaders(t)})}catch{throw window.navigator.onLine?f(_r):f(dt)}try{return{headers:this.getHeaderDict(n.headers),body:await n.json(),status:n.status}}catch{throw f(xt)}}async sendPostRequestAsync(e,t){const n=t&&t.body||d.EMPTY_STRING;let o;try{o=await fetch(e,{method:Zn.POST,headers:this.getFetchHeaders(t),body:n})}catch{throw window.navigator.onLine?f(wr):f(dt)}try{return{headers:this.getHeaderDict(o.headers),body:await o.json(),status:o.status}}catch{throw f(xt)}}getFetchHeaders(e){const t=new Headers;if(!(e&&e.headers))return t;const n=e.headers;return Object.keys(n).forEach(o=>{t.append(o,n[o])}),t}getHeaderDict(e){const t={};return e.forEach((n,o)=>{t[o]=n}),t}}/*! @azure/msal-browser v3.9.0 2024-02-07 */const ua=6e4,qt=1e4,ga=3e4,pa=2e3;function ma({auth:i,cache:e,system:t,telemetry:n},o){const r={clientId:d.EMPTY_STRING,authority:`${d.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:d.EMPTY_STRING,authorityMetadata:d.EMPTY_STRING,redirectUri:d.EMPTY_STRING,postLogoutRedirectUri:d.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:he.AAD,OIDCOptions:{serverResponseType:Ve.FRAGMENT,defaultScopes:[d.OPENID_SCOPE,d.PROFILE_SCOPE,d.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:on.None,tenant:d.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1},s={cacheLocation:H.SessionStorage,temporaryCacheLocation:H.SessionStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!!(e&&e.cacheLocation===H.LocalStorage),claimsBasedCachingEnabled:!1},a={loggerCallback:()=>{},logLevel:P.Info,piiLoggingEnabled:!1},l={...{...tr,loggerOptions:a,networkClient:o?new da:xs,navigationClient:new ut,loadFrameTimeout:0,windowHashTimeout:t?.loadFrameTimeout||ua,iframeHashTimeout:t?.loadFrameTimeout||qt,navigateFrameWait:0,redirectNavigationTimeout:ga,asyncPopups:!1,allowRedirectInIframe:!1,allowNativeBroker:!1,nativeBrokerHandshakeTimeout:t?.nativeBrokerHandshakeTimeout||pa,pollIntervalMilliseconds:j.DEFAULT_POLL_INTERVAL_MS},...t,loggerOptions:t?.loggerOptions||a},u={application:{appName:d.EMPTY_STRING,appVersion:d.EMPTY_STRING},client:new qs};if(i?.protocolMode!==he.OIDC&&i?.OIDCOptions&&new fe(l.loggerOptions).warning(JSON.stringify(k(Wo))),i?.protocolMode&&i.protocolMode!==he.AAD&&l?.allowNativeBroker)throw k(jo);return{auth:{...r,...i,OIDCOptions:{...r.OIDCOptions,...i?.OIDCOptions}},cache:{...s,...e},system:l,telemetry:{...u,...n}}}/*! @azure/msal-browser v3.9.0 2024-02-07 */const fa="@azure/msal-browser",vn="3.9.0";/*! @azure/msal-browser v3.9.0 2024-02-07 */class wn{static loggerCallback(e,t){switch(e){case P.Error:console.error(t);return;case P.Info:console.info(t);return;case P.Verbose:console.debug(t);return;case P.Warning:console.warn(t);return;default:console.log(t);return}}constructor(e){this.browserEnvironment=typeof window<"u",this.config=ma(e,this.browserEnvironment);let t;try{t=window[H.SessionStorage]}catch{}const n=t?.getItem(Zs),o=t?.getItem(ea)?.toLowerCase(),r=o==="true"?!0:o==="false"?!1:void 0,s={...this.config.system.loggerOptions},a=n&&Object.keys(P).includes(n)?P[n]:void 0;a&&(s.loggerCallback=wn.loggerCallback,s.logLevel=a),r!==void 0&&(s.piiLoggingEnabled=r),this.logger=new fe(s,fa,vn),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class Ee extends wn{getModuleName(){return Ee.MODULE_NAME}getId(){return Ee.ID}async initialize(){return this.available=typeof window<"u",this.available}}Ee.MODULE_NAME="";Ee.ID="StandardOperatingContext";async function Ca(i){const e=new Ee(i);return await e.initialize(),(await ha(()=>Promise.resolve().then(()=>ic),void 0)).StandardController.createController(e)}/*! @azure/msal-browser v3.9.0 2024-02-07 */function kt(i){return encodeURIComponent(_n(i).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function gt(i){return Kr(i).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function _n(i){return Kr(new TextEncoder().encode(i))}function Kr(i){const e=Array.from(i,t=>String.fromCodePoint(t)).join("");return btoa(e)}/*! @azure/msal-browser v3.9.0 2024-02-07 */function oe(i){return new TextDecoder().decode(ya(i))}function ya(i){let e=i.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw f(Ur)}const t=atob(e);return Uint8Array.from(t,n=>n.codePointAt(0)||0)}/*! @azure/msal-browser v3.9.0 2024-02-07 */const Ta="RSASSA-PKCS1-v1_5",Br="SHA-256",Aa=2048,Ia=new Uint8Array([1,0,1]),oo="0123456789abcdef",ro=new Uint32Array(1),Rn={name:Ta,hash:Br,modulusLength:Aa,publicExponent:Ia};function Ea(i){if("crypto"in window)i.verbose("BrowserCrypto: modern crypto interface available");else throw i.error("BrowserCrypto: crypto interface is unavailable"),f(cr)}async function Fr(i,e,t){e?.addQueueMeasurement(h.Sha256Digest,t);const o=new TextEncoder().encode(i);return window.crypto.subtle.digest(Br,o)}function Sa(i){return window.crypto.getRandomValues(i)}function bt(){return window.crypto.getRandomValues(ro),ro[0]}function de(){const i=Date.now(),e=bt()*1024+(bt()&1023),t=new Uint8Array(16),n=Math.trunc(e/2**30),o=e&2**30-1,r=bt();t[0]=i/2**40,t[1]=i/2**32,t[2]=i/2**24,t[3]=i/2**16,t[4]=i/2**8,t[5]=i,t[6]=112|n>>>8,t[7]=n,t[8]=128|o>>>24,t[9]=o>>>16,t[10]=o>>>8,t[11]=o,t[12]=r>>>24,t[13]=r>>>16,t[14]=r>>>8,t[15]=r;let s="";for(let a=0;a<t.length;a++)s+=oo.charAt(t[a]>>>4),s+=oo.charAt(t[a]&15),(a===3||a===5||a===7||a===9)&&(s+="-");return s}async function va(i,e){return window.crypto.subtle.generateKey(Rn,i,e)}async function Ot(i){return window.crypto.subtle.exportKey(Hr,i)}async function wa(i,e,t){return window.crypto.subtle.importKey(Hr,i,Rn,e,t)}async function _a(i,e){return window.crypto.subtle.sign(Rn,i,e)}/*! @azure/msal-browser v3.9.0 2024-02-07 */class Ra{constructor(){this.dbName=Gt,this.version=Qs,this.tableName=Js,this.dbOpen=!1}async open(){return new Promise((e,t)=>{const n=window.indexedDB.open(this.dbName,this.version);n.addEventListener("upgradeneeded",o=>{o.target.result.createObjectStore(this.tableName)}),n.addEventListener("success",o=>{const r=o;this.db=r.target.result,this.dbOpen=!0,e()}),n.addEventListener("error",()=>t(f(En)))})}closeConnection(){const e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(f(ke));const s=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);s.addEventListener("success",a=>{const c=a;this.closeConnection(),t(c.target.result)}),s.addEventListener("error",a=>{this.closeConnection(),n(a)})})}async setItem(e,t){return await this.validateDbIsOpen(),new Promise((n,o)=>{if(!this.db)return o(f(ke));const a=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);a.addEventListener("success",()=>{this.closeConnection(),n()}),a.addEventListener("error",c=>{this.closeConnection(),o(c)})})}async removeItem(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(f(ke));const s=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);s.addEventListener("success",()=>{this.closeConnection(),t()}),s.addEventListener("error",a=>{this.closeConnection(),n(a)})})}async getKeys(){return await this.validateDbIsOpen(),new Promise((e,t)=>{if(!this.db)return t(f(ke));const r=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();r.addEventListener("success",s=>{const a=s;this.closeConnection(),e(a.target.result)}),r.addEventListener("error",s=>{this.closeConnection(),t(s)})})}async containsKey(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(f(ke));const s=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);s.addEventListener("success",a=>{const c=a;this.closeConnection(),t(c.target.result===1)}),s.addEventListener("error",a=>{this.closeConnection(),n(a)})})}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise((e,t)=>{const n=window.indexedDB.deleteDatabase(Gt);n.addEventListener("success",()=>e(!0)),n.addEventListener("blocked",()=>e(!0)),n.addEventListener("error",()=>t(!1))})}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class $t{constructor(){this.cache=new Map}getItem(e){return this.cache.get(e)||null}setItem(e,t){this.cache.set(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){const e=[];return this.cache.forEach((t,n)=>{e.push(n)}),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class io{constructor(e,t){this.inMemoryCache=new $t,this.indexedDBCache=new Ra,this.logger=e,this.storeName=t}handleDatabaseAccessError(e){if(e instanceof je&&e.errorCode===En)this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.");else throw e}async getItem(e){const t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(n){this.handleDatabaseAccessError(n)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(n){this.handleDatabaseAccessError(n)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(t){this.handleDatabaseAccessError(t)}}async getKeys(){const e=this.inMemoryCache.getKeys();if(e.length===0)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(t){this.handleDatabaseAccessError(t)}return e}async containsKey(e){const t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(n){this.handleDatabaseAccessError(n)}return t}clearInMemory(){this.logger.verbose(`Deleting in-memory keystore ${this.storeName}`),this.inMemoryCache.clear(),this.logger.verbose(`In-memory keystore ${this.storeName} deleted`)}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");const e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}/*! @azure/msal-browser v3.9.0 2024-02-07 */const so={asymmetricKeys:"asymmetricKeys",symmetricKeys:"symmetricKeys"};class ka{constructor(e){this.logger=e,this.asymmetricKeys=new io(this.logger,so.asymmetricKeys),this.symmetricKeys=new io(this.logger,so.symmetricKeys)}async clear(){this.asymmetricKeys.clearInMemory(),this.symmetricKeys.clearInMemory();try{return await this.asymmetricKeys.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class Ke{constructor(e,t){this.logger=e,Ea(e),this.cache=new ka(this.logger),this.performanceClient=t}createNewGuid(){return de()}base64Encode(e){return _n(e)}base64Decode(e){return oe(e)}async getPublicKeyThumbprint(e){const t=this.performanceClient?.startMeasurement(h.CryptoOptsGetPublicKeyThumbprint,e.correlationId),n=await va(Ke.EXTRACTABLE,Ke.POP_KEY_USAGES),o=await Ot(n.publicKey),r={e:o.e,kty:o.kty,n:o.n},s=ao(r),a=await this.hashString(s),c=await Ot(n.privateKey),l=await wa(c,!1,["sign"]);return await this.cache.asymmetricKeys.setItem(a,{privateKey:l,publicKey:n.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),a}async removeTokenBindingKey(e){return await this.cache.asymmetricKeys.removeItem(e),!await this.cache.asymmetricKeys.containsKey(e)}async clearKeystore(){return this.cache.clear()}async signJwt(e,t,n,o){const r=this.performanceClient?.startMeasurement(h.CryptoOptsSignJwt,o),s=await this.cache.asymmetricKeys.getItem(t);if(!s)throw f(In);const a=await Ot(s.publicKey),c=ao(a),l=kt(JSON.stringify({kid:t})),u=Cn.getShrHeaderString({...n?.header,alg:a.alg,kid:l}),p=kt(u);e.cnf={jwk:JSON.parse(c)};const C=kt(JSON.stringify(e)),E=`${p}.${C}`,v=new TextEncoder().encode(E),M=await _a(s.privateKey,v),we=gt(new Uint8Array(M)),ie=`${E}.${we}`;return r&&r.end({success:!0}),ie}async hashString(e){const t=await Fr(e),n=new Uint8Array(t);return gt(n)}}Ke.POP_KEY_USAGES=["sign","verify"];Ke.EXTRACTABLE=!0;function ao(i){return JSON.stringify(i,Object.keys(i).sort())}/*! @azure/msal-browser v3.9.0 2024-02-07 */const xr="storage_not_supported",B="stubbed_public_client_application_called",Gr="in_mem_redirect_unavailable";/*! @azure/msal-browser v3.9.0 2024-02-07 */const ba={[xr]:"Given storage configuration option was not supported.",[B]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[Gr]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."};class kn extends O{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,kn.prototype)}}function U(i){return new kn(i,ba[i])}/*! @azure/msal-browser v3.9.0 2024-02-07 */class co{constructor(e){this.validateWindowStorage(e),this.windowStorage=window[e]}validateWindowStorage(e){if(e!==H.LocalStorage&&e!==H.SessionStorage||!window[e])throw U(xr)}getItem(e){return this.windowStorage.getItem(e)}setItem(e,t){this.windowStorage.setItem(e,t)}removeItem(e){this.windowStorage.removeItem(e)}getKeys(){return Object.keys(this.windowStorage)}containsKey(e){return this.windowStorage.hasOwnProperty(e)}}/*! @azure/msal-browser v3.9.0 2024-02-07 */function qr(i,e){if(!e)return null;try{return J.parseRequestState(i,e).libraryState.meta}catch{throw g(Le)}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class zt extends Ue{constructor(e,t,n,o,r){super(e,n,o,r),this.COOKIE_LIFE_MULTIPLIER=24*60*60*1e3,this.cacheConfig=t,this.logger=o,this.internalStorage=new $t,this.browserStorage=this.setupBrowserStorage(this.cacheConfig.cacheLocation),this.temporaryCacheStorage=this.setupTemporaryCacheStorage(this.cacheConfig.temporaryCacheLocation,this.cacheConfig.cacheLocation),t.cacheMigrationEnabled&&(this.migrateCacheEntries(),this.createKeyMaps())}setupBrowserStorage(e){switch(e){case H.LocalStorage:case H.SessionStorage:try{return new co(e)}catch(t){this.logger.verbose(t);break}}return this.cacheConfig.cacheLocation=H.MemoryStorage,new $t}setupTemporaryCacheStorage(e,t){switch(t){case H.LocalStorage:case H.SessionStorage:try{return new co(e||H.SessionStorage)}catch(n){return this.logger.verbose(n),this.internalStorage}case H.MemoryStorage:default:return this.internalStorage}}migrateCacheEntries(){const e=`${d.CACHE_PREFIX}.${K.ID_TOKEN}`,t=`${d.CACHE_PREFIX}.${K.CLIENT_INFO}`,n=`${d.CACHE_PREFIX}.${K.ERROR}`,o=`${d.CACHE_PREFIX}.${K.ERROR_DESC}`,r=this.browserStorage.getItem(e),s=this.browserStorage.getItem(t),a=this.browserStorage.getItem(n),c=this.browserStorage.getItem(o),l=[r,s,a,c];[K.ID_TOKEN,K.CLIENT_INFO,K.ERROR,K.ERROR_DESC].forEach((p,C)=>this.migrateCacheEntry(p,l[C]))}migrateCacheEntry(e,t){t&&this.setTemporaryCache(e,t,!0)}createKeyMaps(){this.logger.trace("BrowserCacheManager - createKeyMaps called.");const e=this.getItem(ue.ACCOUNT_KEYS),t=this.getItem(`${ue.TOKEN_KEYS}.${this.clientId}`);if(e&&t){this.logger.verbose("BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.");return}this.browserStorage.getKeys().forEach(o=>{if(this.isCredentialKey(o)){const r=this.getItem(o);if(r){const s=this.validateAndParseJson(r);if(s&&s.hasOwnProperty("credentialType"))switch(s.credentialType){case A.ID_TOKEN:if(Bn(s)){this.logger.trace("BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${o} found, saving key to token key map`);const a=s,c=this.updateCredentialCacheKey(o,a);this.addTokenKey(c,A.ID_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${o}`);break;case A.ACCESS_TOKEN:case A.ACCESS_TOKEN_WITH_AUTH_SCHEME:if(Kn(s)){this.logger.trace("BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${o} found, saving key to token key map`);const a=s,c=this.updateCredentialCacheKey(o,a);this.addTokenKey(c,A.ACCESS_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${o}`);break;case A.REFRESH_TOKEN:if(Fn(s)){this.logger.trace("BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${o} found, saving key to token key map`);const a=s,c=this.updateCredentialCacheKey(o,a);this.addTokenKey(c,A.REFRESH_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${o}`);break}}}if(this.isAccountKey(o)){const r=this.getItem(o);if(r){const s=this.validateAndParseJson(r);s&&D.isAccountEntity(s)&&(this.logger.trace("BrowserCacheManager:createKeyMaps - account found, saving key to account key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${o} found, saving key to account key map`),this.addAccountKeyToMap(o))}}})}validateAndParseJson(e){try{const t=JSON.parse(e);return t&&typeof t=="object"?t:null}catch{return null}}getItem(e){return this.browserStorage.getItem(e)}setItem(e,t){this.browserStorage.setItem(e,t)}getAccount(e,t){this.logger.trace("BrowserCacheManager.getAccount called");const n=this.getCachedAccountEntity(e);return this.updateOutdatedCachedAccount(e,n,t)}getCachedAccountEntity(e){const t=this.getItem(e);if(!t)return this.removeAccountKeyFromMap(e),null;const n=this.validateAndParseJson(t);return!n||!D.isAccountEntity(n)?(this.removeAccountKeyFromMap(e),null):Ue.toObject(new D,n)}setAccount(e){this.logger.trace("BrowserCacheManager.setAccount called");const t=e.generateAccountKey();this.setItem(t,JSON.stringify(e)),this.addAccountKeyToMap(t)}getAccountKeys(){this.logger.trace("BrowserCacheManager.getAccountKeys called");const e=this.getItem(ue.ACCOUNT_KEYS);return e?JSON.parse(e):(this.logger.verbose("BrowserCacheManager.getAccountKeys - No account keys found"),[])}addAccountKeyToMap(e){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);const t=this.getAccountKeys();t.indexOf(e)===-1?(t.push(e),this.setItem(ue.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added")):this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map")}removeAccountKeyFromMap(e){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);const t=this.getAccountKeys(),n=t.indexOf(e);n>-1?(t.splice(n,1),this.setItem(ue.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")):this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}async removeAccount(e){super.removeAccount(e),this.removeAccountKeyFromMap(e)}removeOutdatedAccount(e){this.removeItem(e),this.removeAccountKeyFromMap(e)}removeIdToken(e){super.removeIdToken(e),this.removeTokenKey(e,A.ID_TOKEN)}async removeAccessToken(e){super.removeAccessToken(e),this.removeTokenKey(e,A.ACCESS_TOKEN)}removeRefreshToken(e){super.removeRefreshToken(e),this.removeTokenKey(e,A.REFRESH_TOKEN)}getTokenKeys(){this.logger.trace("BrowserCacheManager.getTokenKeys called");const e=this.getItem(`${ue.TOKEN_KEYS}.${this.clientId}`);if(e){const t=this.validateAndParseJson(e);if(t&&t.hasOwnProperty("idToken")&&t.hasOwnProperty("accessToken")&&t.hasOwnProperty("refreshToken"))return t;this.logger.error("BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.")}else this.logger.verbose("BrowserCacheManager.getTokenKeys - No token keys found");return{idToken:[],accessToken:[],refreshToken:[]}}addTokenKey(e,t){this.logger.trace("BrowserCacheManager addTokenKey called");const n=this.getTokenKeys();switch(t){case A.ID_TOKEN:n.idToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),n.idToken.push(e));break;case A.ACCESS_TOKEN:n.accessToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - accessToken added to map"),n.accessToken.push(e));break;case A.REFRESH_TOKEN:n.refreshToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),n.refreshToken.push(e));break;default:throw this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${t}`),g(Ut)}this.setItem(`${ue.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(n))}removeTokenKey(e,t){this.logger.trace("BrowserCacheManager removeTokenKey called");const n=this.getTokenKeys();switch(t){case A.ID_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${e} from map`);const o=n.idToken.indexOf(e);o>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - idToken removed from map"),n.idToken.splice(o,1)):this.logger.info("BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.");break;case A.ACCESS_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${e} from map`);const r=n.accessToken.indexOf(e);r>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - accessToken removed from map"),n.accessToken.splice(r,1)):this.logger.info("BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.");break;case A.REFRESH_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${e} from map`);const s=n.refreshToken.indexOf(e);s>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken removed from map"),n.refreshToken.splice(s,1)):this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.");break;default:throw this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${t}`),g(Ut)}this.setItem(`${ue.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(n))}getIdTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.ID_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!Bn(n)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.ID_TOKEN),null):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),n)}setIdTokenCredential(e){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");const t=Oe(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,A.ID_TOKEN)}getAccessTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.ACCESS_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!Kn(n)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.ACCESS_TOKEN),null):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),n)}setAccessTokenCredential(e){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");const t=Oe(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,A.ACCESS_TOKEN)}getRefreshTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.REFRESH_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!Fn(n)?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.REFRESH_TOKEN),null):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),n)}setRefreshTokenCredential(e){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");const t=Oe(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,A.REFRESH_TOKEN)}getAppMetadata(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!vi(e,n)?(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),n)}setAppMetadata(e){this.logger.trace("BrowserCacheManager.setAppMetadata called");const t=Si(e);this.setItem(t,JSON.stringify(e))}getServerTelemetry(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!Ii(e,n)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),n)}setServerTelemetry(e,t){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t))}getAuthorityMetadata(e){const t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;const n=this.validateAndParseJson(t);return n&&wi(e,n)?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),n):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter(t=>this.isAuthorityMetadata(t))}setWrapperMetadata(e,t){this.internalStorage.setItem(nt.WRAPPER_SKU,e),this.internalStorage.setItem(nt.WRAPPER_VER,t)}getWrapperMetadata(){const e=this.internalStorage.getItem(nt.WRAPPER_SKU)||d.EMPTY_STRING,t=this.internalStorage.getItem(nt.WRAPPER_VER)||d.EMPTY_STRING;return[e,t]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(){const e=this.generateCacheKey(K.ACTIVE_ACCOUNT_FILTERS),t=this.getItem(e);if(!t){this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema");const o=this.generateCacheKey(K.ACTIVE_ACCOUNT),r=this.getItem(o);if(!r)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null;const s=this.getAccountInfoFilteredBy({localAccountId:r});return s?(this.logger.trace("BrowserCacheManager.getActiveAccount: Legacy active account cache schema found"),this.logger.trace("BrowserCacheManager.getActiveAccount: Adding active account filters cache schema"),this.setActiveAccount(s),s):null}const n=this.validateAndParseJson(t);return n?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:n.homeAccountId,localAccountId:n.localAccountId,tenantId:n.tenantId})):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e){const t=this.generateCacheKey(K.ACTIVE_ACCOUNT_FILTERS),n=this.generateCacheKey(K.ACTIVE_ACCOUNT);if(e){this.logger.verbose("setActiveAccount: Active account set");const o={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId,tenantId:e.tenantId};this.browserStorage.setItem(t,JSON.stringify(o)),this.browserStorage.setItem(n,e.localAccountId)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(t),this.browserStorage.removeItem(n)}getThrottlingCache(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!Ei(e,n)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),n)}setThrottlingCache(e,t){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t))}getTemporaryCache(e,t){const n=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){const r=this.getItemCookie(n);if(r)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),r}const o=this.temporaryCacheStorage.getItem(n);if(!o){if(this.cacheConfig.cacheLocation===H.LocalStorage){const r=this.browserStorage.getItem(n);if(r)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),r}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),o}setTemporaryCache(e,t,n){const o=n?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(o,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.setItemCookie(o,t))}removeItem(e){this.browserStorage.removeItem(e),this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.clearItemCookie(e))}containsKey(e){return this.browserStorage.containsKey(e)||this.temporaryCacheStorage.containsKey(e)}getKeys(){return[...this.browserStorage.getKeys(),...this.temporaryCacheStorage.getKeys()]}async clear(){await this.removeAllAccounts(),this.removeAppMetadata(),this.getKeys().forEach(e=>{(this.browserStorage.containsKey(e)||this.temporaryCacheStorage.containsKey(e))&&(e.indexOf(d.CACHE_PREFIX)!==-1||e.indexOf(this.clientId)!==-1)&&this.removeItem(e)}),this.internalStorage.clear()}async clearTokensAndKeysWithClaims(e){e.addQueueMeasurement(h.ClearTokensAndKeysWithClaims);const t=this.getTokenKeys(),n=[];t.accessToken.forEach(o=>{const r=this.getAccessTokenCredential(o);r?.requestedClaimsHash&&o.includes(r.requestedClaimsHash.toLowerCase())&&n.push(this.removeAccessToken(o))}),await Promise.all(n),n.length>0&&this.logger.warning(`${n.length} access tokens with claims in the cache keys have been removed from the cache.`)}setItemCookie(e,t,n){let o=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=Lax;`;if(n){const r=this.getCookieExpirationTime(n);o+=`expires=${r};`}this.cacheConfig.secureCookies&&(o+="Secure;"),document.cookie=o}getItemCookie(e){const t=`${encodeURIComponent(e)}=`,n=document.cookie.split(";");for(let o=0;o<n.length;o++){let r=n[o];for(;r.charAt(0)===" ";)r=r.substring(1);if(r.indexOf(t)===0)return decodeURIComponent(r.substring(t.length,r.length))}return d.EMPTY_STRING}clearMsalCookies(){const e=`${d.CACHE_PREFIX}.${this.clientId}`;document.cookie.split(";").forEach(n=>{for(;n.charAt(0)===" ";)n=n.substring(1);if(n.indexOf(e)===0){const o=n.split("=")[0];this.clearItemCookie(o)}})}clearItemCookie(e){this.setItemCookie(e,d.EMPTY_STRING,-1)}getCookieExpirationTime(e){const t=new Date;return new Date(t.getTime()+e*this.COOKIE_LIFE_MULTIPLIER).toUTCString()}getCache(){return this.browserStorage}setCache(){}generateCacheKey(e){return this.validateAndParseJson(e)?JSON.stringify(e):Q.startsWith(e,d.CACHE_PREFIX)||Q.startsWith(e,K.ADAL_ID_TOKEN)?e:`${d.CACHE_PREFIX}.${this.clientId}.${e}`}generateAuthorityKey(e){const{libraryState:{id:t}}=J.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${w.AUTHORITY}.${t}`)}generateNonceKey(e){const{libraryState:{id:t}}=J.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${w.NONCE_IDTOKEN}.${t}`)}generateStateKey(e){const{libraryState:{id:t}}=J.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${w.REQUEST_STATE}.${t}`)}getCachedAuthority(e){const t=this.generateStateKey(e),n=this.getTemporaryCache(t);if(!n)return null;const o=this.generateAuthorityKey(n);return this.getTemporaryCache(o)}updateCacheEntries(e,t,n,o,r){this.logger.trace("BrowserCacheManager.updateCacheEntries called");const s=this.generateStateKey(e);this.setTemporaryCache(s,e,!1);const a=this.generateNonceKey(e);this.setTemporaryCache(a,t,!1);const c=this.generateAuthorityKey(e);if(this.setTemporaryCache(c,n,!1),r){const l={credential:r.homeAccountId,type:z.HOME_ACCOUNT_ID};this.setTemporaryCache(w.CCS_CREDENTIAL,JSON.stringify(l),!0)}else if(o){const l={credential:o,type:z.UPN};this.setTemporaryCache(w.CCS_CREDENTIAL,JSON.stringify(l),!0)}}resetRequestCache(e){this.logger.trace("BrowserCacheManager.resetRequestCache called"),e&&(this.getKeys().forEach(t=>{t.indexOf(e)!==-1&&this.removeItem(t)}),this.removeItem(this.generateStateKey(e)),this.removeItem(this.generateNonceKey(e)),this.removeItem(this.generateAuthorityKey(e))),this.removeItem(this.generateCacheKey(w.REQUEST_PARAMS)),this.removeItem(this.generateCacheKey(w.ORIGIN_URI)),this.removeItem(this.generateCacheKey(w.URL_HASH)),this.removeItem(this.generateCacheKey(w.CORRELATION_ID)),this.removeItem(this.generateCacheKey(w.CCS_CREDENTIAL)),this.removeItem(this.generateCacheKey(w.NATIVE_REQUEST)),this.setInteractionInProgress(!1)}cleanRequestByState(e){if(this.logger.trace("BrowserCacheManager.cleanRequestByState called"),e){const t=this.generateStateKey(e),n=this.temporaryCacheStorage.getItem(t);this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n||d.EMPTY_STRING)}this.clearMsalCookies()}cleanRequestByInteractionType(e){this.logger.trace("BrowserCacheManager.cleanRequestByInteractionType called"),this.getKeys().forEach(t=>{if(t.indexOf(w.REQUEST_STATE)===-1)return;const n=this.temporaryCacheStorage.getItem(t);if(!n)return;const o=qr(this.cryptoImpl,n);o&&o.interactionType===e&&(this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n))}),this.clearMsalCookies(),this.setInteractionInProgress(!1)}cacheCodeRequest(e){this.logger.trace("BrowserCacheManager.cacheCodeRequest called");const t=_n(JSON.stringify(e));this.setTemporaryCache(w.REQUEST_PARAMS,t,!0)}getCachedRequest(e){this.logger.trace("BrowserCacheManager.getCachedRequest called");const t=this.getTemporaryCache(w.REQUEST_PARAMS,!0);if(!t)throw f(Er);let n;try{n=JSON.parse(oe(t))}catch(o){throw this.logger.errorPii(`Attempted to parse: ${t}`),this.logger.error(`Parsing cached token request threw with error: ${o}`),f(Sr)}if(this.removeItem(this.generateCacheKey(w.REQUEST_PARAMS)),!n.authority){const o=this.generateAuthorityKey(e),r=this.getTemporaryCache(o);if(!r)throw f(An);n.authority=r}return n}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");const e=this.getTemporaryCache(w.NATIVE_REQUEST,!0);if(!e)return this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null;const t=this.validateAndParseJson(e);return t||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null)}isInteractionInProgress(e){const t=this.getInteractionInProgress();return e?t===this.clientId:!!t}getInteractionInProgress(){const e=`${d.CACHE_PREFIX}.${w.INTERACTION_STATUS_KEY}`;return this.getTemporaryCache(e,!1)}setInteractionInProgress(e){const t=`${d.CACHE_PREFIX}.${w.INTERACTION_STATUS_KEY}`;if(e){if(this.getInteractionInProgress())throw f(gr);this.setTemporaryCache(t,this.clientId,!1)}else!e&&this.getInteractionInProgress()===this.clientId&&this.removeItem(t)}getLegacyLoginHint(){const e=this.getTemporaryCache(K.ADAL_ID_TOKEN);e&&(this.browserStorage.removeItem(K.ADAL_ID_TOKEN),this.logger.verbose("Cached ADAL id token retrieved."));const t=this.getTemporaryCache(K.ID_TOKEN,!0);t&&(this.removeItem(this.generateCacheKey(K.ID_TOKEN)),this.logger.verbose("Cached MSAL.js v1 id token retrieved"));const n=t||e;if(n){const o=Se(n,oe);if(o.preferred_username)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint"),o.preferred_username;if(o.upn)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint"),o.upn;this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.")}return null}updateCredentialCacheKey(e,t){const n=Oe(t);if(e!==n){const o=this.getItem(e);if(o)return this.removeItem(e),this.setItem(n,o),this.logger.verbose(`Updated an outdated ${t.credentialType} cache key`),n;this.logger.error(`Attempted to update an outdated ${t.credentialType} cache key but no item matching the outdated key was found in storage`)}return e}getRedirectRequestContext(){return this.getTemporaryCache(w.REDIRECT_CONTEXT,!0)}setRedirectRequestContext(e){this.setTemporaryCache(w.REDIRECT_CONTEXT,e,!0)}async hydrateCache(e,t){const n=ft(e.account?.homeAccountId,e.account?.environment,e.idToken,this.clientId,e.tenantId);let o;t.claims&&(o=await this.cryptoImpl.hashString(t.claims));const r=Ct(e.account?.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),e.expiresOn?.getTime()||0,e.extExpiresOn?.getTime()||0,oe,void 0,e.tokenType,void 0,t.sshKid,t.claims,o),s=new Ne(void 0,n,r);return this.saveCacheRecord(s)}}const Oa=(i,e)=>{const t={cacheLocation:H.MemoryStorage,temporaryCacheLocation:H.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};return new zt(i,t,it,e)};/*! @azure/msal-browser v3.9.0 2024-02-07 */const T={INITIALIZE_START:"msal:initializeStart",INITIALIZE_END:"msal:initializeEnd",ACCOUNT_ADDED:"msal:accountAdded",ACCOUNT_REMOVED:"msal:accountRemoved",ACTIVE_ACCOUNT_CHANGED:"msal:activeAccountChanged",LOGIN_START:"msal:loginStart",LOGIN_SUCCESS:"msal:loginSuccess",LOGIN_FAILURE:"msal:loginFailure",ACQUIRE_TOKEN_START:"msal:acquireTokenStart",ACQUIRE_TOKEN_SUCCESS:"msal:acquireTokenSuccess",ACQUIRE_TOKEN_FAILURE:"msal:acquireTokenFailure",ACQUIRE_TOKEN_NETWORK_START:"msal:acquireTokenFromNetworkStart",SSO_SILENT_START:"msal:ssoSilentStart",SSO_SILENT_SUCCESS:"msal:ssoSilentSuccess",SSO_SILENT_FAILURE:"msal:ssoSilentFailure",ACQUIRE_TOKEN_BY_CODE_START:"msal:acquireTokenByCodeStart",ACQUIRE_TOKEN_BY_CODE_SUCCESS:"msal:acquireTokenByCodeSuccess",ACQUIRE_TOKEN_BY_CODE_FAILURE:"msal:acquireTokenByCodeFailure",HANDLE_REDIRECT_START:"msal:handleRedirectStart",HANDLE_REDIRECT_END:"msal:handleRedirectEnd",POPUP_OPENED:"msal:popupOpened",LOGOUT_START:"msal:logoutStart",LOGOUT_SUCCESS:"msal:logoutSuccess",LOGOUT_FAILURE:"msal:logoutFailure",LOGOUT_END:"msal:logoutEnd",RESTORE_FROM_BFCACHE:"msal:restoreFromBFCache"};/*! @azure/msal-browser v3.9.0 2024-02-07 */class Pa{constructor(e,t){this.eventCallbacks=new Map,this.logger=e,this.browserCrypto=t,this.listeningToStorageEvents=!1,this.handleAccountCacheChange=this.handleAccountCacheChange.bind(this)}addEventCallback(e){if(typeof window<"u"){const t=de();return this.eventCallbacks.set(t,e),this.logger.verbose(`Event callback registered with id: ${t}`),t}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}enableAccountStorageEvents(){typeof window>"u"||(this.listeningToStorageEvents?this.logger.verbose("Account storage listener already registered."):(this.logger.verbose("Adding account storage listener."),this.listeningToStorageEvents=!0,window.addEventListener("storage",this.handleAccountCacheChange)))}disableAccountStorageEvents(){typeof window>"u"||(this.listeningToStorageEvents?(this.logger.verbose("Removing account storage listener."),window.removeEventListener("storage",this.handleAccountCacheChange),this.listeningToStorageEvents=!1):this.logger.verbose("No account storage listener registered."))}emitEvent(e,t,n,o){if(typeof window<"u"){const r={eventType:e,interactionType:t||null,payload:n||null,error:o||null,timestamp:Date.now()};this.logger.info(`Emitting event: ${e}`),this.eventCallbacks.forEach((s,a)=>{this.logger.verbose(`Emitting event to callback ${a}: ${e}`),s.apply(null,[r])})}}handleAccountCacheChange(e){try{e.key?.includes(K.ACTIVE_ACCOUNT_FILTERS)&&this.emitEvent(T.ACTIVE_ACCOUNT_CHANGED);const t=e.newValue||e.oldValue;if(!t)return;const n=JSON.parse(t);if(typeof n!="object"||!D.isAccountEntity(n))return;const r=Ue.toObject(new D,n).getAccountInfo();!e.oldValue&&e.newValue?(this.logger.info("Account was added to cache in a different window"),this.emitEvent(T.ACCOUNT_ADDED,void 0,r)):!e.newValue&&e.oldValue&&(this.logger.info("Account was removed from cache in a different window"),this.emitEvent(T.ACCOUNT_REMOVED,void 0,r))}catch{return}}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class $r{constructor(e,t,n,o,r,s,a,c,l){this.config=e,this.browserStorage=t,this.browserCrypto=n,this.networkClient=this.config.system.networkClient,this.eventHandler=r,this.navigationClient=s,this.nativeMessageHandler=c,this.correlationId=l||de(),this.logger=o.clone(j.MSAL_SKU,vn,this.correlationId),this.performanceClient=a}async clearCacheOnLogout(e){if(e){D.accountInfoIsEqual(e,this.browserStorage.getActiveAccount(),!1)&&(this.logger.verbose("Setting active account to null"),this.browserStorage.setActiveAccount(null));try{await this.browserStorage.removeAccount(D.generateAccountCacheKey(e)),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch{this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),await this.browserStorage.clear(),await this.browserCrypto.clearKeystore()}catch{this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}async initializeBaseRequest(e){this.performanceClient.addQueueMeasurement(h.InitializeBaseRequest,this.correlationId);const t=e.authority||this.config.auth.authority,n=[...e&&e.scopes||[]],o={...e,correlationId:this.correlationId,authority:t,scopes:n};if(!o.authenticationScheme)o.authenticationScheme=R.BEARER,this.logger.verbose(`Authentication Scheme wasn't explicitly set in request, defaulting to "Bearer" request`);else{if(o.authenticationScheme===R.SSH){if(!e.sshJwk)throw k(yt);if(!e.sshKid)throw k(Vo)}this.logger.verbose(`Authentication Scheme set to "${o.authenticationScheme}" as configured in Auth request`)}return this.config.cache.claimsBasedCachingEnabled&&e.claims&&!Q.isEmptyObj(e.claims)&&(o.requestedClaimsHash=await this.browserCrypto.hashString(e.claims)),o}getRedirectUri(e){this.logger.verbose("getRedirectUri called");const t=e||this.config.auth.redirectUri||le();return S.getAbsoluteUrl(t,le())}initializeServerTelemetryManager(e,t){this.logger.verbose("initializeServerTelemetryManager called");const n={clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]};return new ht(n,this.browserStorage)}async getDiscoveredAuthority(e,t,n){this.performanceClient.addQueueMeasurement(h.StandardInteractionClientGetDiscoveredAuthority,this.correlationId);const o={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},r=e||this.config.auth.authority,s=x.generateAuthority(r,t||this.config.auth.azureCloudOptions),a=await m(or,h.AuthorityFactoryCreateDiscoveredInstance,this.logger,this.performanceClient,this.correlationId)(s,this.config.system.networkClient,this.browserStorage,o,this.logger,this.correlationId,this.performanceClient);if(n&&!a.isAlias(n.environment))throw k(Qo);return a}}/*! @azure/msal-browser v3.9.0 2024-02-07 */const Na=32;async function Ma(i,e,t){i.addQueueMeasurement(h.GeneratePkceCodes,t);const n=ve(La,h.GenerateCodeVerifier,e,i,t)(i,e,t),o=await m(Ua,h.GenerateCodeChallengeFromVerifier,e,i,t)(n,i,e,t);return{verifier:n,challenge:o}}function La(i,e,t){try{const n=new Uint8Array(Na);return ve(Sa,h.GetRandomValues,e,i,t)(n),gt(n)}catch{throw f(yn)}}async function Ua(i,e,t,n){e.addQueueMeasurement(h.GenerateCodeChallengeFromVerifier,n);try{const o=await m(Fr,h.Sha256Digest,t,e,n)(i,e,n);return gt(new Uint8Array(o))}catch{throw f(yn)}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class Be extends $r{async initializeAuthorizationCodeRequest(e){this.performanceClient.addQueueMeasurement(h.StandardInteractionClientInitializeAuthorizationCodeRequest,this.correlationId);const t=await m(Ma,h.GeneratePkceCodes,this.logger,this.performanceClient,this.correlationId)(this.performanceClient,this.logger,this.correlationId),n={...e,redirectUri:e.redirectUri,code:d.EMPTY_STRING,codeVerifier:t.verifier};return e.codeChallenge=t.challenge,e.codeChallengeMethod=d.S256_CODE_CHALLENGE_METHOD,n}initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e?.correlationId);const t={correlationId:this.correlationId||de(),...e};if(e)if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){const n=this.getLogoutHintFromIdTokenClaims(e.account);n&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=n)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set");else this.logger.verbose("logoutHint will not be set since no logout request was configured");return!e||e.postLogoutRedirectUri!==null?e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=S.getAbsoluteUrl(e.postLogoutRedirectUri,le())):this.config.auth.postLogoutRedirectUri===null?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=S.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,le())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=S.getAbsoluteUrl(le(),le())):this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId),t}getLogoutHintFromIdTokenClaims(e){const t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e,t,n,o){this.performanceClient.addQueueMeasurement(h.StandardInteractionClientCreateAuthCodeClient,this.correlationId);const r=await m(this.getClientConfiguration.bind(this),h.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e,t,n,o);return new ir(r,this.performanceClient)}async getClientConfiguration(e,t,n,o){this.performanceClient.addQueueMeasurement(h.StandardInteractionClientGetClientConfiguration,this.correlationId);const r=await m(this.getDiscoveredAuthority.bind(this),h.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,this.correlationId)(t,n,o),s=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:r,clientCapabilities:this.config.auth.clientCapabilities},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:s.loggerCallback,piiLoggingEnabled:s.piiLoggingEnabled,logLevel:s.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:e,libraryInfo:{sku:j.MSAL_SKU,version:vn,cpu:d.EMPTY_STRING,os:d.EMPTY_STRING},telemetry:this.config.telemetry}}async initializeAuthorizationRequest(e,t){this.performanceClient.addQueueMeasurement(h.StandardInteractionClientInitializeAuthorizationRequest,this.correlationId);const n=this.getRedirectUri(e.redirectUri),o={interactionType:t},r=J.setRequestState(this.browserCrypto,e&&e.state||d.EMPTY_STRING,o),a={...await m(this.initializeBaseRequest.bind(this),h.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)(e),redirectUri:n,state:r,nonce:e.nonce||de(),responseMode:this.config.auth.OIDCOptions.serverResponseType},c=e.account||this.browserStorage.getActiveAccount();if(c&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${c.homeAccountId}`,this.correlationId),a.account=c),!a.loginHint&&!c){const l=this.browserStorage.getLegacyLoginHint();l&&(a.loginHint=l)}return a}}/*! @azure/msal-browser v3.9.0 2024-02-07 */const Ha="ContentError",zr="user_switch";/*! @azure/msal-browser v3.9.0 2024-02-07 */const Da="USER_INTERACTION_REQUIRED",Ka="USER_CANCEL",Ba="NO_NETWORK",Fa="PERSISTENT_ERROR",xa="DISABLED",Ga="ACCOUNT_UNAVAILABLE";/*! @azure/msal-browser v3.9.0 2024-02-07 */const qa=-2147186943,$a={[zr]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class ce extends O{constructor(e,t,n){super(e,t),Object.setPrototypeOf(this,ce.prototype),this.name="NativeAuthError",this.ext=n}}function be(i){if(i.ext&&i.ext.status&&(i.ext.status===Fa||i.ext.status===xa)||i.ext&&i.ext.error&&i.ext.error===qa)return!0;switch(i.errorCode){case Ha:return!0;default:return!1}}function Yt(i,e,t){if(t&&t.status)switch(t.status){case Ga:return Bt(rr);case Da:return new X(i,e);case Ka:return f(Ie);case Ba:return f(dt)}return new ce(i,$a[i]||e,t)}/*! @azure/msal-browser v3.9.0 2024-02-07 */class Yr extends Be{async acquireToken(e){this.performanceClient.addQueueMeasurement(h.SilentCacheClientAcquireToken,e.correlationId);const t=this.initializeServerTelemetryManager(b.acquireTokenSilent_silentFlow),n=await this.createSilentFlowClient(t,e.authority,e.azureCloudOptions,e.account);this.logger.verbose("Silent auth client created");try{const r=(await m(n.acquireCachedToken.bind(n),h.SilentFlowClientAcquireCachedToken,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),r}catch(o){throw o instanceof je&&o.errorCode===In&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),o}}logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t?.account)}async createSilentFlowClient(e,t,n,o){const r=await m(this.getClientConfiguration.bind(this),h.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e,t,n,o);return new Fs(r,this.performanceClient)}async initializeSilentRequest(e,t){this.performanceClient.addQueueMeasurement(h.InitializeSilentRequest,this.correlationId);const n=await m(this.initializeBaseRequest.bind(this),h.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)(e);return{...e,...n,account:t,forceRefresh:e.forceRefresh||!1}}}/*! @azure/msal-browser v3.9.0 2024-02-07 */const Pt={BROKER_CLIENT_ID:"brk_client_id",BROKER_REDIRECT_URI:"brk_redirect_uri"};class Me extends $r{constructor(e,t,n,o,r,s,a,c,l,u,p,C){super(e,t,n,o,r,s,c,l,C),this.apiId=a,this.accountId=u,this.nativeMessageHandler=l,this.nativeStorageManager=p,this.silentCacheClient=new Yr(e,this.nativeStorageManager,n,o,r,s,c,l,C)}async acquireToken(e){this.performanceClient.addQueueMeasurement(h.NativeInteractionClientAcquireToken,e.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");const t=this.performanceClient.startMeasurement(h.NativeInteractionClientAcquireToken,e.correlationId),n=re(),o=await this.initializeNativeRequest(e);try{const c=await this.acquireTokensFromCache(this.accountId,o);return t.end({success:!0,isNativeBroker:!1,fromCache:!0}),c}catch{this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}const r={method:Te.GetToken,request:o},s=await this.nativeMessageHandler.sendMessage(r),a=this.validateNativeResponse(s);return this.handleNativeResponse(a,o,n).then(c=>(t.end({success:!0,isNativeBroker:!0,requestId:c.requestId}),c)).catch(c=>{throw t.end({success:!1,errorCode:c.errorCode,subErrorCode:c.subError,isNativeBroker:!0}),c})}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:L.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),g(Mt);const n=this.browserStorage.getBaseAccountInfo({nativeAccountId:e});if(!n)throw g(Mt);try{const o=this.createSilentCacheRequest(t,n),r=await this.silentCacheClient.acquireToken(o),s={...n,idTokenClaims:r?.idTokenClaims};return{...r,account:s}}catch(o){throw o}}async acquireTokenRedirect(e){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");const t=await this.initializeNativeRequest(e),n={method:Te.GetToken,request:t};try{const s=await this.nativeMessageHandler.sendMessage(n);this.validateNativeResponse(s)}catch(s){if(s instanceof ce&&be(s))throw s}this.browserStorage.setTemporaryCache(w.NATIVE_REQUEST,JSON.stringify(t),!0);const o={apiId:b.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},r=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);await this.navigationClient.navigateExternal(r,o)}async handleRedirectPromise(e,t){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const n=this.browserStorage.getCachedNativeRequest();if(!n)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),e&&t&&e?.addFields({errorCode:"no_cached_request"},t),null;const{prompt:o,...r}=n;o&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(w.NATIVE_REQUEST));const s={method:Te.GetToken,request:r},a=re();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");const c=await this.nativeMessageHandler.sendMessage(s);this.validateNativeResponse(c);const l=this.handleNativeResponse(c,r,a);return this.browserStorage.setInteractionInProgress(!1),await l}catch(c){throw this.browserStorage.setInteractionInProgress(!1),c}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,n){if(this.logger.trace("NativeInteractionClient - handleNativeResponse called."),e.account.id!==t.accountId)throw Yt(zr);const o=await this.getDiscoveredAuthority(t.authority),r=Se(e.id_token,oe),s=this.createHomeAccountIdentifier(e,r),a=mn(this.browserStorage,o,s,r,oe,e.client_info,void 0,r.tid,void 0,e.account.id,this.logger),c=await this.generateAuthenticationResult(e,t,r,a,o.canonicalAuthority,n);return this.cacheAccount(a),this.cacheNativeTokens(e,t,s,r,c.accessToken,c.tenantId,n),c}createHomeAccountIdentifier(e,t){return D.generateHomeAccountId(e.client_info||d.EMPTY_STRING,W.Default,this.logger,this.browserCrypto,t)}generateScopes(e,t){return e.scope?L.fromString(e.scope):L.fromString(t.scope)}async generatePopAccessToken(e,t){if(t.tokenType===R.POP){if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;const n=new De(this.browserCrypto),o={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw g(tn);return n.signPopToken(e.access_token,t.keyId,o)}else return e.access_token}async generateAuthenticationResult(e,t,n,o,r,s){const a=this.addTelemetryFromNativeResponse(e),c=e.scope?L.fromString(e.scope):L.fromString(t.scope),l=e.account.properties||{},u=l.UID||n.oid||n.sub||d.EMPTY_STRING,p=l.TenantId||n.tid||d.EMPTY_STRING,C=dn(o.getAccountInfo(),void 0,n),E=await this.generatePopAccessToken(e,t),_=t.tokenType===R.POP?R.POP:R.BEARER;return{authority:r,uniqueId:u,tenantId:p,scopes:c.asArray(),account:C,idToken:e.id_token,idTokenClaims:n,accessToken:E,fromCache:a?this.isResponseFromCache(a):!1,expiresOn:new Date(Number(s+e.expires_in)*1e3),tokenType:_,correlationId:this.correlationId,state:e.state,fromNativeBroker:!0}}cacheAccount(e){this.browserStorage.setAccount(e),this.browserStorage.removeAccountContext(e).catch(t=>{this.logger.error(`Error occurred while removing account context from browser storage. ${t}`)})}cacheNativeTokens(e,t,n,o,r,s,a){const c=ft(n,t.authority,e.id_token||"",t.clientId,o.tid||""),l=t.tokenType===R.POP?d.SHR_NONCE_VALIDITY:(typeof e.expires_in=="string"?parseInt(e.expires_in,10):e.expires_in)||0,u=a+l,p=this.generateScopes(e,t),C=Ct(n,t.authority,r,t.clientId,o.tid||s,p.printScopes(),u,0,oe),E=new Ne(void 0,c,C);this.nativeStorageManager.saveCacheRecord(E,t.storeInCache)}addTelemetryFromNativeResponse(e){const t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.nativeMessageHandler.getExtensionId(),extensionVersion:this.nativeMessageHandler.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}validateNativeResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw fo(jt,"Response missing expected properties.")}getMATSFromResponse(e){if(e.properties.MATS)try{return JSON.parse(e.properties.MATS)}catch{this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return typeof e.is_cached>"u"?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");const t=e.authority||this.config.auth.authority;e.account&&await this.getDiscoveredAuthority(t,e.azureCloudOptions,e.account);const n=new S(t);n.validateAsUri();const{scopes:o,...r}=e,s=new L(o||[]);s.appendScopes(Ye);const a=()=>{switch(this.apiId){case b.ssoSilent:case b.acquireTokenSilent_silentFlow:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),q.NONE}if(!e.prompt){this.logger.trace("initializeNativeRequest: prompt was not provided");return}switch(e.prompt){case q.NONE:case q.CONSENT:case q.LOGIN:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e.prompt;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e.prompt} is not compatible with native flow`),f(Lr)}},c={...r,accountId:this.accountId,clientId:this.config.auth.clientId,authority:n.urlString,scope:s.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:a(),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1};if(this.handleExtraBrokerParams(c),c.extraParameters=c.extraParameters||{},c.extraParameters.telemetry=xe.MATS_TELEMETRY,e.authenticationScheme===R.POP){const l={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},u=new De(this.browserCrypto),p=await m(u.generateCnf.bind(u),h.PopTokenGenerateCnf,this.logger,this.performanceClient,this.correlationId)(l,this.logger);c.reqCnf=p.reqCnfHash,c.keyId=p.kid}return c}handleExtraBrokerParams(e){if(e.extraParameters&&e.extraParameters.hasOwnProperty(Pt.BROKER_CLIENT_ID)&&e.extraParameters.hasOwnProperty(Pt.BROKER_REDIRECT_URI)&&e.extraParameters.hasOwnProperty(He)){const t=e.extraParameters[He],n=e.redirectUri,o=e.extraParameters[Pt.BROKER_REDIRECT_URI];e.extraParameters={child_client_id:t,child_redirect_uri:n},e.redirectUri=o}}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class ne{constructor(e,t,n,o){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=o,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=n,this.handshakeEvent=n.startMeasurement(h.NativeMessageHandlerHandshake)}async sendMessage(e){this.logger.trace("NativeMessageHandler - sendMessage called.");const t={channel:xe.CHANNEL_ID,extensionId:this.extensionId,responseId:de(),body:e};return this.logger.trace("NativeMessageHandler - Sending request to browser extension"),this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(t)}`),this.messageChannel.port1.postMessage(t),new Promise((n,o)=>{this.resolvers.set(t.responseId,{resolve:n,reject:o})})}static async createProvider(e,t,n){e.trace("NativeMessageHandler - createProvider called.");try{const o=new ne(e,t,n,xe.PREFERRED_EXTENSION_ID);return await o.sendHandshakeRequest(),o}catch{const r=new ne(e,t,n);return await r.sendHandshakeRequest(),r}}async sendHandshakeRequest(){this.logger.trace("NativeMessageHandler - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);const e={channel:xe.CHANNEL_ID,extensionId:this.extensionId,responseId:de(),body:{method:Te.HandshakeRequest}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=t=>{this.onChannelMessage(t)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise((t,n)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:n}),this.timeoutId=window.setTimeout(()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),n(f(Pr)),this.handshakeResolvers.delete(e.responseId)},this.handshakeTimeoutMs)})}onWindowMessage(e){if(this.logger.trace("NativeMessageHandler - onWindowMessage called"),e.source!==window)return;const t=e.data;if(!(!t.channel||t.channel!==xe.CHANNEL_ID)&&!(t.extensionId&&t.extensionId!==this.extensionId)&&t.body.method===Te.HandshakeRequest){const n=this.handshakeResolvers.get(t.responseId);if(!n){this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${t.responseId}`);return}this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),n.reject(f(Nr))}}onChannelMessage(e){this.logger.trace("NativeMessageHandler - onChannelMessage called.");const t=e.data,n=this.resolvers.get(t.responseId),o=this.handshakeResolvers.get(t.responseId);try{const r=t.body.method;if(r===Te.Response){if(!n)return;const s=t.body.response;if(this.logger.trace("NativeMessageHandler - Received response from browser extension"),this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(s)}`),s.status!=="Success")n.reject(Yt(s.code,s.description,s.ext));else if(s.result)s.result.code&&s.result.description?n.reject(Yt(s.result.code,s.result.description,s.result.ext)):n.resolve(s.result);else throw fo(jt,"Event does not contain result.");this.resolvers.delete(t.responseId)}else if(r===Te.HandshakeResponse){if(!o){this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${t.responseId}`);return}clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),o.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(r){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${r}`),this.logger.errorPii(`Unable to parse ${e}`),n?n.reject(r):o&&o.reject(r)}}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}static isNativeAvailable(e,t,n,o){if(t.trace("isNativeAvailable called"),!e.system.allowNativeBroker)return t.trace("isNativeAvailable: allowNativeBroker is not enabled, returning false"),!1;if(!n)return t.trace("isNativeAvailable: WAM extension provider is not initialized, returning false"),!1;if(o)switch(o){case R.BEARER:case R.POP:return t.trace("isNativeAvailable: authenticationScheme is supported, returning true"),!0;default:return t.trace("isNativeAvailable: authenticationScheme is not supported, returning false"),!1}return!0}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class bn{constructor(e,t,n,o,r){this.authModule=e,this.browserStorage=t,this.authCodeRequest=n,this.logger=o,this.performanceClient=r}async handleCodeResponse(e,t){this.performanceClient.addQueueMeasurement(h.HandleCodeResponse,t.correlationId);let n;try{n=this.authModule.handleFragmentResponse(e,t.state)}catch(o){throw o instanceof Ce&&o.subError===Ie?f(Ie):o}return m(this.handleCodeResponseFromServer.bind(this),h.HandleCodeResponseFromServer,this.logger,this.performanceClient,t.correlationId)(n,t)}async handleCodeResponseFromServer(e,t,n=!0){if(this.performanceClient.addQueueMeasurement(h.HandleCodeResponseFromServer,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await m(this.authModule.updateAuthority.bind(this.authModule),h.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),n&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{const r=this.createCcsCredentials(t);r&&(this.authCodeRequest.ccsCredential=r)}return await m(this.authModule.acquireToken.bind(this.authModule),h.AuthClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:z.HOME_ACCOUNT_ID}:e.loginHint?{credential:e.loginHint,type:z.UPN}:null}}/*! @azure/msal-browser v3.9.0 2024-02-07 */function Vr(i,e,t){const n=at(i);if(!n)throw Xo(i)?(t.error(`A ${e} is present in the iframe but it does not contain known properties. It's likely that the ${e} has been replaced by code running on the redirectUri page.`),t.errorPii(`The ${e} detected is: ${i}`),f(hr)):(t.error(`The request has returned to the redirectUri but a ${e} is not present. It's likely that the ${e} has been removed or the page has been redirected by code running on the redirectUri page.`),f(lr));return n}function za(i,e,t){if(!i.state)throw f(Tn);const n=qr(e,i.state);if(!n)throw f(dr);if(n.interactionType!==t)throw f(ur)}/*! @azure/msal-browser v3.9.0 2024-02-07 */class Ya extends Be{constructor(e,t,n,o,r,s,a,c,l,u){super(e,t,n,o,r,s,a,l,u),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=c}acquireToken(e){try{const t=this.generatePopupName(e.scopes||Ye,e.authority||this.config.auth.authority),n=e.popupWindowAttributes||{};if(this.config.system.asyncPopups)return this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,t,n);{this.logger.verbose("asyncPopup set to false, opening popup before acquiring token");const o=this.openSizedPopup("about:blank",t,n);return this.acquireTokenPopupAsync(e,t,n,o)}}catch(t){return Promise.reject(t)}}logout(e){try{this.logger.verbose("logoutPopup called");const t=this.initializeLogoutRequest(e),n=this.generateLogoutPopupName(t),o=e&&e.authority,r=e&&e.mainWindowRedirectUri,s=e?.popupWindowAttributes||{};if(this.config.system.asyncPopups)return this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,n,s,o,void 0,r);{this.logger.verbose("asyncPopup set to false, opening popup");const a=this.openSizedPopup("about:blank",n,s);return this.logoutPopupAsync(t,n,s,o,a,r)}}catch(t){return Promise.reject(t)}}async acquireTokenPopupAsync(e,t,n,o){this.logger.verbose("acquireTokenPopupAsync called");const r=this.initializeServerTelemetryManager(b.acquireTokenPopup),s=await m(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,y.Popup);Dr(s.authority);try{const a=await m(this.initializeAuthorizationCodeRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(s),c=await m(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(r,s.authority,s.azureCloudOptions,s.account),l=ne.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme);let u;l&&(u=this.performanceClient.startMeasurement(h.FetchAccountIdWithNativeBroker,e.correlationId));const p=await c.getAuthCodeUrl({...s,nativeBroker:l}),C=new bn(c,this.browserStorage,a,this.logger,this.performanceClient),E={popup:o,popupName:t,popupWindowAttributes:n},_=this.initiateAuthRequest(p,E);this.eventHandler.emitEvent(T.POPUP_OPENED,y.Popup,{popupWindow:_},null);const v=await this.monitorPopupForHash(_),M=ve(Vr,h.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(v,this.config.auth.OIDCOptions.serverResponseType,this.logger);if(Z.removeThrottle(this.browserStorage,this.config.auth.clientId,a),M.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),u&&u.end({success:!0,isNativeBroker:!0}),!this.nativeMessageHandler)throw f(We);const ie=new Me(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,M.accountId,this.nativeStorage,s.correlationId),{userRequestState:_e}=J.parseRequestState(this.browserCrypto,s.state);return await ie.acquireToken({...s,state:_e,prompt:void 0})}return await C.handleCodeResponse(M,s)}catch(a){throw o&&o.close(),a instanceof O&&(a.setCorrelationId(this.correlationId),r.cacheFailedRequest(a)),a}}async logoutPopupAsync(e,t,n,o,r,s){this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(T.LOGOUT_START,y.Popup,e);const a=this.initializeServerTelemetryManager(b.logoutPopup);try{await this.clearCacheOnLogout(e.account);const c=await m(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(a,o,void 0,e.account||void 0);try{c.authority.endSessionEndpoint}catch{if(e.account?.homeAccountId&&e.postLogoutRedirectUri&&c.authority.protocolMode===he.OIDC){if(this.browserStorage.removeAccount(e.account?.homeAccountId),this.eventHandler.emitEvent(T.LOGOUT_SUCCESS,y.Popup,e),s){const p={apiId:b.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},C=S.getAbsoluteUrl(s,le());await this.navigationClient.navigateInternal(C,p)}r&&r.close();return}}const l=c.getLogoutUri(e);this.eventHandler.emitEvent(T.LOGOUT_SUCCESS,y.Popup,e);const u=this.openPopup(l,{popupName:t,popupWindowAttributes:n,popup:r});if(this.eventHandler.emitEvent(T.POPUP_OPENED,y.Popup,{popupWindow:u},null),await this.monitorPopupForHash(u).catch(()=>{}),s){const p={apiId:b.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},C=S.getAbsoluteUrl(s,le());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${C}`),await this.navigationClient.navigateInternal(C,p)}else this.logger.verbose("No main window navigation requested")}catch(c){throw r&&r.close(),c instanceof O&&(c.setCorrelationId(this.correlationId),a.cacheFailedRequest(c)),this.browserStorage.setInteractionInProgress(!1),this.eventHandler.emitEvent(T.LOGOUT_FAILURE,y.Popup,null,c),this.eventHandler.emitEvent(T.LOGOUT_END,y.Popup),c}this.eventHandler.emitEvent(T.LOGOUT_END,y.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),f(It)}monitorPopupForHash(e){return new Promise((t,n)=>{this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");const o=setInterval(()=>{if(e.closed){this.logger.error("PopupHandler.monitorPopupForHash - window closed"),clearInterval(o),n(f(Ie));return}let r="";try{r=e.location.href}catch{}if(!r||r==="about:blank")return;clearInterval(o);let s="";const a=this.config.auth.OIDCOptions.serverResponseType;e&&(a===Ve.QUERY?s=e.location.search:s=e.location.hash),this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),t(s)},this.config.system.pollIntervalMilliseconds)}).finally(()=>{this.cleanPopup(e)})}openPopup(e,t){try{let n;if(t.popup?(n=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),n.location.assign(e)):typeof t.popup>"u"&&(this.logger.verbosePii(`Opening popup window to: ${e}`),n=this.openSizedPopup(e,t.popupName,t.popupWindowAttributes)),!n)throw f(mr);return n.focus&&n.focus(),this.currentWindow=n,window.addEventListener("beforeunload",this.unloadWindow),n}catch(n){throw this.logger.error("error opening popup "+n.message),this.browserStorage.setInteractionInProgress(!1),f(pr)}}openSizedPopup(e,t,n){const o=window.screenLeft?window.screenLeft:window.screenX,r=window.screenTop?window.screenTop:window.screenY,s=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,a=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;let c=n.popupSize?.width,l=n.popupSize?.height,u=n.popupPosition?.top,p=n.popupPosition?.left;return(!c||c<0||c>s)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),c=j.POPUP_WIDTH),(!l||l<0||l>a)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),l=j.POPUP_HEIGHT),(!u||u<0||u>a)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),u=Math.max(0,a/2-j.POPUP_HEIGHT/2+r)),(!p||p<0||p>s)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),p=Math.max(0,s/2-j.POPUP_WIDTH/2+o)),window.open(e,t,`width=${c}, height=${l}, top=${u}, left=${p}, scrollbars=yes`)}unloadWindow(e){this.browserStorage.cleanRequestByInteractionType(y.Popup),this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e){e&&e.close(),window.removeEventListener("beforeunload",this.unloadWindow),this.browserStorage.setInteractionInProgress(!1)}generatePopupName(e,t){return`${j.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){const t=e.account&&e.account.homeAccountId;return`${j.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${t}.${this.correlationId}`}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class lo{constructor(e,t,n,o,r){this.authModule=e,this.browserStorage=t,this.authCodeRequest=n,this.logger=o,this.performanceClient=r}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){t.redirectStartPage&&(this.logger.verbose("RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page"),this.browserStorage.setTemporaryCache(w.ORIGIN_URI,t.redirectStartPage,!0)),this.browserStorage.setTemporaryCache(w.CORRELATION_ID,this.authCodeRequest.correlationId,!0),this.browserStorage.cacheCodeRequest(this.authCodeRequest),this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);const n={apiId:b.acquireTokenRedirect,timeout:t.redirectTimeout,noHistory:!1};if(typeof t.onRedirectNavigate=="function")if(this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback"),t.onRedirectNavigate(e)!==!1){this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),await t.navigationClient.navigateExternal(e,n);return}else{this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation");return}else{this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),await t.navigationClient.navigateExternal(e,n);return}}else throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),f(It)}async handleCodeResponse(e,t){this.logger.verbose("RedirectHandler.handleCodeResponse called"),this.browserStorage.setInteractionInProgress(!1);const n=this.browserStorage.generateStateKey(t),o=this.browserStorage.getTemporaryCache(n);if(!o)throw g(rt,"Cached State");let r;try{r=this.authModule.handleFragmentResponse(e,o)}catch(l){throw l instanceof Ce&&l.subError===Ie?f(Ie):l}const s=this.browserStorage.generateNonceKey(o),a=this.browserStorage.getTemporaryCache(s);if(this.authCodeRequest.code=r.code,r.cloud_instance_host_name&&await m(this.authModule.updateAuthority.bind(this.authModule),h.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(r.cloud_instance_host_name,this.authCodeRequest.correlationId),r.nonce=a||void 0,r.state=o,r.client_info)this.authCodeRequest.clientInfo=r.client_info;else{const l=this.checkCcsCredentials();l&&(this.authCodeRequest.ccsCredential=l)}const c=await this.authModule.acquireToken(this.authCodeRequest,r);return this.browserStorage.cleanRequestByState(t),c}checkCcsCredentials(){const e=this.browserStorage.getTemporaryCache(w.CCS_CREDENTIAL,!0);if(e)try{return JSON.parse(e)}catch{this.authModule.logger.error("Cache credential could not be parsed"),this.authModule.logger.errorPii(`Cache credential could not be parsed: ${e}`)}return null}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class Va extends Be{constructor(e,t,n,o,r,s,a,c,l,u){super(e,t,n,o,r,s,a,l,u),this.nativeStorage=c}async acquireToken(e){const t=await m(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,y.Redirect);this.browserStorage.updateCacheEntries(t.state,t.nonce,t.authority,t.loginHint||"",t.account||null);const n=this.initializeServerTelemetryManager(b.acquireTokenRedirect),o=r=>{r.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.cleanRequestByState(t.state),this.eventHandler.emitEvent(T.RESTORE_FROM_BFCACHE,y.Redirect))};try{const r=await m(this.initializeAuthorizationCodeRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(t),s=await m(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(n,t.authority,t.azureCloudOptions,t.account),a=new lo(s,this.browserStorage,r,this.logger,this.performanceClient),c=await s.getAuthCodeUrl({...t,nativeBroker:ne.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme)}),l=this.getRedirectStartPage(e.redirectStartPage);return this.logger.verbosePii(`Redirect start page: ${l}`),window.addEventListener("pageshow",o),await a.initiateAuthRequest(c,{navigationClient:this.navigationClient,redirectTimeout:this.config.system.redirectNavigationTimeout,redirectStartPage:l,onRedirectNavigate:e.onRedirectNavigate})}catch(r){throw r instanceof O&&(r.setCorrelationId(this.correlationId),n.cacheFailedRequest(r)),window.removeEventListener("pageshow",o),this.browserStorage.cleanRequestByState(t.state),r}}async handleRedirectPromise(e,t,n){const o=this.initializeServerTelemetryManager(b.handleRedirectPromise);try{if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const[r,s]=this.getRedirectResponse(e||"");if(!r)return this.logger.info("handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."),this.browserStorage.cleanRequestByInteractionType(y.Redirect),t&&n&&t?.addFields({errorCode:"no_server_response"},n),null;const a=this.browserStorage.getTemporaryCache(w.ORIGIN_URI,!0)||d.EMPTY_STRING,c=S.removeHashFromUrl(a),l=S.removeHashFromUrl(window.location.href);if(c===l&&this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("Current page is loginRequestUrl, handling response"),a.indexOf("#")>-1&&na(a),await this.handleResponse(r,o);if(this.config.auth.navigateToLoginRequestUrl){if(!Sn()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(w.URL_HASH,s,!0);const u={apiId:b.handleRedirectPromise,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0};let p=!0;if(!a||a==="null"){const C=ra();this.browserStorage.setTemporaryCache(w.ORIGIN_URI,C,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),p=await this.navigationClient.navigateInternal(C,u)}else this.logger.verbose(`Navigating to loginRequestUrl: ${a}`),p=await this.navigationClient.navigateInternal(a,u);if(!p)return await this.handleResponse(r,o)}}else return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling response"),await this.handleResponse(r,o);return null}catch(r){throw r instanceof O&&(r.setCorrelationId(this.correlationId),o.cacheFailedRequest(r)),this.browserStorage.cleanRequestByInteractionType(y.Redirect),r}}getRedirectResponse(e){this.logger.verbose("getRedirectResponseHash called");let t=e;t||(this.config.auth.OIDCOptions.serverResponseType===Ve.QUERY?t=window.location.search:t=window.location.hash);let n=at(t);if(n){try{za(n,this.browserCrypto,y.Redirect)}catch(r){return r instanceof O&&this.logger.error(`Interaction type validation failed due to ${r.errorCode}: ${r.errorMessage}`),[null,""]}return ta(window),this.logger.verbose("Hash contains known properties, returning response hash"),[n,t]}const o=this.browserStorage.getTemporaryCache(w.URL_HASH,!0);return this.browserStorage.removeItem(this.browserStorage.generateCacheKey(w.URL_HASH)),o&&(n=at(o),n)?(this.logger.verbose("Hash does not contain known properties, returning cached hash"),[n,o]):[null,""]}async handleResponse(e,t){const n=e.state;if(!n)throw f(Tn);const o=this.browserStorage.getCachedRequest(n);if(this.logger.verbose("handleResponse called, retrieved cached request"),e.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw f(We);const c=new Me(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,e.accountId,this.nativeStorage,o.correlationId),{userRequestState:l}=J.parseRequestState(this.browserCrypto,n);return c.acquireToken({...o,state:l,prompt:void 0}).finally(()=>{this.browserStorage.cleanRequestByState(n)})}const r=this.browserStorage.getCachedAuthority(n);if(!r)throw f(An);const s=await m(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(t,r);return Z.removeThrottle(this.browserStorage,this.config.auth.clientId,o),new lo(s,this.browserStorage,o,this.logger,this.performanceClient).handleCodeResponse(e,n)}async logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e),n=this.initializeServerTelemetryManager(b.logout);try{this.eventHandler.emitEvent(T.LOGOUT_START,y.Redirect,e),await this.clearCacheOnLogout(t.account);const o={apiId:b.logout,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},r=await m(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(n,e&&e.authority,void 0,e&&e.account||void 0);if(r.authority.protocolMode===he.OIDC)try{r.authority.endSessionEndpoint}catch{if(t.account?.homeAccountId){this.browserStorage.removeAccount(t.account?.homeAccountId),this.eventHandler.emitEvent(T.LOGOUT_SUCCESS,y.Redirect,t);return}}const s=r.getLogoutUri(t);if(this.eventHandler.emitEvent(T.LOGOUT_SUCCESS,y.Redirect,t),e&&typeof e.onRedirectNavigate=="function")if(e.onRedirectNavigate(s)!==!1){this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(s,o);return}else this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation");else{this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(s,o);return}}catch(o){throw o instanceof O&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),this.eventHandler.emitEvent(T.LOGOUT_FAILURE,y.Redirect,null,o),this.eventHandler.emitEvent(T.LOGOUT_END,y.Redirect),o}this.eventHandler.emitEvent(T.LOGOUT_END,y.Redirect)}getRedirectStartPage(e){const t=e||window.location.href;return S.getAbsoluteUrl(t,le())}}/*! @azure/msal-browser v3.9.0 2024-02-07 */async function Wa(i,e,t,n,o){if(e.addQueueMeasurement(h.SilentHandlerInitiateAuthRequest,n),!i)throw t.info("Navigate url is empty"),f(It);return o?m(Qa,h.SilentHandlerLoadFrame,t,e,n)(i,o,e,n):ve(Ja,h.SilentHandlerLoadFrameSync,t,e,n)(i)}async function ja(i,e,t,n,o,r,s){return n.addQueueMeasurement(h.SilentHandlerMonitorIframeForHash,r),new Promise((a,c)=>{e<qt&&o.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${e}ms) than the default (${qt}ms). This may result in timeouts.`);const l=window.setTimeout(()=>{window.clearInterval(u),c(f(fr))},e),u=window.setInterval(()=>{let p="";const C=i.contentWindow;try{p=C?C.location.href:""}catch{}if(!p||p==="about:blank")return;let E="";C&&(s===Ve.QUERY?E=C.location.search:E=C.location.hash),window.clearTimeout(l),window.clearInterval(u),a(E)},t)}).finally(()=>{ve(Xa,h.RemoveHiddenIframe,o,n,r)(i)})}function Qa(i,e,t,n){return t.addQueueMeasurement(h.SilentHandlerLoadFrame,n),new Promise((o,r)=>{const s=Wr();window.setTimeout(()=>{if(!s){r("Unable to load iframe");return}s.src=i,o(s)},e)})}function Ja(i){const e=Wr();return e.src=i,e}function Wr(){const i=document.createElement("iframe");return i.style.visibility="hidden",i.style.position="absolute",i.style.width=i.style.height="0",i.style.border="0",i.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.body.appendChild(i),i}function Xa(i){document.body===i.parentNode&&document.body.removeChild(i)}/*! @azure/msal-browser v3.9.0 2024-02-07 */class Za extends Be{constructor(e,t,n,o,r,s,a,c,l,u,p){super(e,t,n,o,r,s,c,u,p),this.apiId=a,this.nativeStorage=l}async acquireToken(e){if(this.performanceClient.addQueueMeasurement(h.SilentIframeClientAcquireToken,e.correlationId),!e.loginHint&&!e.sid&&(!e.account||!e.account.username)&&this.logger.warning("No user hint provided. The authorization server may need more information to complete this request."),e.prompt&&e.prompt!==q.NONE&&e.prompt!==q.NO_SESSION)throw f(Ir);const t=await m(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)({...e,prompt:e.prompt||q.NONE},y.Silent);Dr(t.authority);const n=this.initializeServerTelemetryManager(this.apiId);try{const o=await m(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,e.correlationId)(n,t.authority,t.azureCloudOptions,t.account);return await m(this.silentTokenHelper.bind(this),h.SilentIframeClientTokenHelper,this.logger,this.performanceClient,e.correlationId)(o,t)}catch(o){throw o instanceof O&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),o}}logout(){return Promise.reject(f(Et))}async silentTokenHelper(e,t){const n=t.correlationId;this.performanceClient.addQueueMeasurement(h.SilentIframeClientTokenHelper,n);const o=await m(this.initializeAuthorizationCodeRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,n)(t),r=await m(e.getAuthCodeUrl.bind(e),h.GetAuthCodeUrl,this.logger,this.performanceClient,n)({...t,nativeBroker:ne.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,t.authenticationScheme)}),s=new bn(e,this.browserStorage,o,this.logger,this.performanceClient),a=await m(Wa,h.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,n)(r,this.performanceClient,this.logger,n,this.config.system.navigateFrameWait),c=this.config.auth.OIDCOptions.serverResponseType,l=await m(ja,h.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,n)(a,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,n,c),u=ve(Vr,h.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(l,c,this.logger);if(u.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw f(We);const p=new Me(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.apiId,this.performanceClient,this.nativeMessageHandler,u.accountId,this.browserStorage,n),{userRequestState:C}=J.parseRequestState(this.browserCrypto,t.state);return m(p.acquireToken.bind(p),h.NativeInteractionClientAcquireToken,this.logger,this.performanceClient,n)({...t,state:C,prompt:t.prompt||q.NONE})}return m(s.handleCodeResponse.bind(s),h.HandleCodeResponse,this.logger,this.performanceClient,n)(u,t)}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class ec extends Be{async acquireToken(e){this.performanceClient.addQueueMeasurement(h.SilentRefreshClientAcquireToken,e.correlationId);const t=await m(this.initializeBaseRequest.bind(this),h.InitializeBaseRequest,this.logger,this.performanceClient,e.correlationId)(e),n={...e,...t};e.redirectUri&&(n.redirectUri=this.getRedirectUri(e.redirectUri));const o=this.initializeServerTelemetryManager(b.acquireTokenSilent_silentFlow),r=await this.createRefreshTokenClient(o,n.authority,n.azureCloudOptions,n.account);return m(r.acquireTokenByRefreshToken.bind(r),h.RefreshTokenClientAcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(n).catch(s=>{throw s.setCorrelationId(this.correlationId),o.cacheFailedRequest(s),s})}logout(){return Promise.reject(f(Et))}async createRefreshTokenClient(e,t,n,o){const r=await m(this.getClientConfiguration.bind(this),h.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e,t,n,o);return new Ft(r,this.performanceClient)}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class tc{constructor(e,t,n,o){this.isBrowserEnvironment=typeof window<"u",this.config=e,this.storage=t,this.logger=n,this.cryptoObj=o}loadExternalTokens(e,t,n){if(this.logger.info("TokenCache - loadExternalTokens called"),!t.id_token)throw f(V);const o=Se(t.id_token,oe);let r,s,a;if(e.account)a=D.createFromAccountInfo(e.account),r=new Ne(a,this.loadIdToken(t.id_token,a.homeAccountId,e.account.environment,e.account.tenantId),this.loadAccessToken(e,t,a.homeAccountId,e.account.environment,e.account.tenantId,n),this.loadRefreshToken(e,t,a.homeAccountId,e.account.environment));else if(e.authority){const c=x.generateAuthority(e.authority,e.azureCloudOptions),l={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache};if(s=new x(c,this.config.system.networkClient,this.storage,l,this.logger,e.correlationId||de()),n.clientInfo)this.logger.trace("TokenCache - homeAccountId from options"),a=this.loadAccount(o,s,n.clientInfo),r=new Ne(a,this.loadIdToken(t.id_token,a.homeAccountId,s.hostnameAndPort,s.tenant),this.loadAccessToken(e,t,a.homeAccountId,s.hostnameAndPort,s.tenant,n),this.loadRefreshToken(e,t,a.homeAccountId,s.hostnameAndPort));else if(t.client_info)this.logger.trace("TokenCache - homeAccountId from response"),a=this.loadAccount(o,s,t.client_info),r=new Ne(a,this.loadIdToken(t.id_token,a.homeAccountId,s.hostnameAndPort,s.tenant),this.loadAccessToken(e,t,a.homeAccountId,s.hostnameAndPort,s.tenant,n),this.loadRefreshToken(e,t,a.homeAccountId,s.hostnameAndPort));else throw f(V)}else throw f(V);return this.generateAuthenticationResult(e,o,r,a,s)}loadAccount(e,t,n,o){if(this.isBrowserEnvironment){this.logger.verbose("TokenCache - loading account");let r;if(o?r=o:t.authorityType!==void 0&&n&&(r=D.generateHomeAccountId(n,t.authorityType,this.logger,this.cryptoObj,e)),!r)throw f(V);const s=e.tid,a=mn(this.storage,t,r,e,oe,n,t.hostnameAndPort,s,void 0,void 0,this.logger);return this.storage.setAccount(a),a}else throw f(V)}loadIdToken(e,t,n,o){const r=ft(t,n,e,this.config.auth.clientId,o);if(this.isBrowserEnvironment)return this.logger.verbose("TokenCache - loading id token"),this.storage.setIdTokenCredential(r),r;throw f(V)}loadAccessToken(e,t,n,o,r,s){if(!t.access_token)return this.logger.verbose("TokenCache - No access token provided for caching"),null;if(!t.expires_in||!s.extendedExpiresOn)throw f(V);const a=new L(e.scopes).printScopes(),c=s.expiresOn||t.expires_in+new Date().getTime()/1e3,l=s.extendedExpiresOn,u=Ct(n,o,t.access_token,this.config.auth.clientId,r,a,c,l,oe);if(this.isBrowserEnvironment)return this.logger.verbose("TokenCache - loading access token"),this.storage.setAccessTokenCredential(u),u;throw f(V)}loadRefreshToken(e,t,n,o){if(!t.refresh_token)return this.logger.verbose("TokenCache - No refresh token provided for caching"),null;const r=Ho(n,o,t.refresh_token,this.config.auth.clientId);if(this.isBrowserEnvironment)return this.logger.verbose("TokenCache - loading refresh token"),this.storage.setRefreshTokenCredential(r),r;throw f(V)}generateAuthenticationResult(e,t,n,o,r){let s=d.EMPTY_STRING,a=[],c=null,l;n?.accessToken&&(s=n.accessToken.secret,a=L.fromString(n.accessToken.target).asArray(),c=new Date(Number(n.accessToken.expiresOn)*1e3),l=new Date(Number(n.accessToken.extendedExpiresOn)*1e3));const u=t.oid||t.sub||d.EMPTY_STRING,p=t.tid||d.EMPTY_STRING;return{authority:r?r.canonicalAuthority:d.EMPTY_STRING,uniqueId:u,tenantId:p,scopes:a,account:o.getAccountInfo(),idToken:n.idToken?.secret||"",idTokenClaims:t||{},accessToken:s,fromCache:!0,expiresOn:c,correlationId:e.correlationId||d.EMPTY_STRING,requestId:d.EMPTY_STRING,extExpiresOn:l,familyId:d.EMPTY_STRING,tokenType:n?.accessToken?.tokenType||d.EMPTY_STRING,state:d.EMPTY_STRING,cloudGraphHostName:o.cloudGraphHostName||d.EMPTY_STRING,msGraphHost:o.msGraphHost||d.EMPTY_STRING,code:void 0,fromNativeBroker:!1}}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class nc extends ir{constructor(e){super(e),this.includeRedirectUri=!1}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class oc extends Be{constructor(e,t,n,o,r,s,a,c,l,u){super(e,t,n,o,r,s,c,l,u),this.apiId=a}async acquireToken(e){if(!e.code)throw f(Rr);const t=await m(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(e,y.Silent),n=this.initializeServerTelemetryManager(this.apiId);try{const o={...t,code:e.code},r=await m(this.getClientConfiguration.bind(this),h.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,e.correlationId)(n,t.authority,t.azureCloudOptions,t.account),s=new nc(r);this.logger.verbose("Auth code client created");const a=new bn(s,this.browserStorage,o,this.logger,this.performanceClient);return await m(a.handleCodeResponseFromServer.bind(a),h.HandleCodeResponseFromServer,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},t,!1)}catch(o){throw o instanceof O&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),o}}logout(){return Promise.reject(f(Et))}}/*! @azure/msal-browser v3.9.0 2024-02-07 */class St{constructor(e){this.atsAsyncMeasurement=void 0,this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new Ke(this.logger,this.performanceClient):it,this.eventHandler=new Pa(this.logger,this.browserCrypto),this.browserStorage=this.isBrowserEnvironment?new zt(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,Ps(this.config.auth)):Oa(this.config.auth.clientId,this.logger);const t={cacheLocation:H.MemoryStorage,temporaryCacheLocation:H.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new zt(this.config.auth.clientId,t,this.browserCrypto,this.logger),this.tokenCache=new tc(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this)}static async createController(e){const t=new St(e);return await t.initialize(),t}trackPageVisibility(){this.atsAsyncMeasurement&&(this.logger.info("Perf: Visibility change detected"),this.atsAsyncMeasurement.increment({visibilityChangeCount:1}))}async initialize(){if(this.logger.trace("initialize called"),this.initialized){this.logger.info("initialize has already been called, exiting early.");return}const e=this.config.system.allowNativeBroker,t=this.performanceClient.startMeasurement(h.InitializeClientApplication);if(this.eventHandler.emitEvent(T.INITIALIZE_START),e)try{this.nativeExtensionProvider=await ne.createProvider(this.logger,this.config.system.nativeBrokerHandshakeTimeout,this.performanceClient)}catch(n){this.logger.verbose(n)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),await m(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),h.ClearTokensAndKeysWithClaims,this.logger,this.performanceClient)(this.performanceClient)),this.initialized=!0,this.eventHandler.emitEvent(T.INITIALIZE_END),t.end({allowNativeBroker:e,success:!0})}async handleRedirectPromise(e){this.logger.verbose("handleRedirectPromise called"),to(this.initialized);const t=this.getAllAccounts();if(this.isBrowserEnvironment){const n=e||"";let o=this.redirectResponse.get(n);if(typeof o>"u"){const r=this.browserStorage.getCachedNativeRequest(),s=r&&ne.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider)&&this.nativeExtensionProvider&&!e,a=s?r?.correlationId:this.browserStorage.getTemporaryCache(w.CORRELATION_ID,!0)||"",c=this.performanceClient.startMeasurement("acquireTokenRedirect",a);this.eventHandler.emitEvent(T.HANDLE_REDIRECT_START,y.Redirect),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise");let l;if(s&&this.nativeExtensionProvider){this.logger.trace("handleRedirectPromise - acquiring token from native platform");const u=new Me(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.handleRedirectPromise,this.performanceClient,this.nativeExtensionProvider,r.accountId,this.nativeInternalStorage,r.correlationId);l=m(u.handleRedirectPromise.bind(u),h.HandleNativeRedirectPromiseMeasurement,this.logger,this.performanceClient,c.event.correlationId)(this.performanceClient,c.event.correlationId)}else{this.logger.trace("handleRedirectPromise - acquiring token from web flow");const u=this.createRedirectClient(a);l=m(u.handleRedirectPromise.bind(u),h.HandleRedirectPromiseMeasurement,this.logger,this.performanceClient,c.event.correlationId)(e,this.performanceClient,c.event.correlationId)}o=l.then(u=>(u&&(t.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(T.LOGIN_SUCCESS,y.Redirect,u),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_SUCCESS,y.Redirect,u),this.logger.verbose("handleRedirectResponse returned result, acquire token success")),c.end({success:!0})),this.eventHandler.emitEvent(T.HANDLE_REDIRECT_END,y.Redirect),c.end({success:!1}),u)).catch(u=>{const p=u;throw t.length>0?this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_FAILURE,y.Redirect,null,p):this.eventHandler.emitEvent(T.LOGIN_FAILURE,y.Redirect,null,p),this.eventHandler.emitEvent(T.HANDLE_REDIRECT_END,y.Redirect),p instanceof O?c.end({success:!1,errorCode:p.errorCode,subErrorCode:p.subError}):c.end({success:!1}),u}),this.redirectResponse.set(n,o)}else this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call");return o}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async acquireTokenRedirect(e){const t=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",t),this.preflightBrowserEnvironmentCheck(y.Redirect);const n=this.getAllAccounts().length>0;n?this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_START,y.Redirect,e):this.eventHandler.emitEvent(T.LOGIN_START,y.Redirect,e);let o;return this.nativeExtensionProvider&&this.canUseNative(e)?o=new Me(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.acquireTokenRedirect,this.performanceClient,this.nativeExtensionProvider,this.getNativeAccountId(e),this.nativeInternalStorage,t).acquireTokenRedirect(e).catch(s=>{if(s instanceof ce&&be(s))return this.nativeExtensionProvider=void 0,this.createRedirectClient(t).acquireToken(e);if(s instanceof X)return this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createRedirectClient(t).acquireToken(e);throw this.getBrowserStorage().setInteractionInProgress(!1),s}):o=this.createRedirectClient(t).acquireToken(e),o.catch(r=>{throw n?this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_FAILURE,y.Redirect,null,r):this.eventHandler.emitEvent(T.LOGIN_FAILURE,y.Redirect,null,r),r})}acquireTokenPopup(e){const t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(h.AcquireTokenPopup,t);try{this.logger.verbose("acquireTokenPopup called",t),this.preflightBrowserEnvironmentCheck(y.Popup)}catch(s){return Promise.reject(s)}const o=this.getAllAccounts();o.length>0?this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_START,y.Popup,e):this.eventHandler.emitEvent(T.LOGIN_START,y.Popup,e);let r;return this.canUseNative(e)?r=this.acquireTokenNative({...e,correlationId:t},b.acquireTokenPopup).then(s=>(this.getBrowserStorage().setInteractionInProgress(!1),n.end({success:!0,isNativeBroker:!0,requestId:s.requestId}),s)).catch(s=>{if(s instanceof ce&&be(s))return this.nativeExtensionProvider=void 0,this.createPopupClient(t).acquireToken(e);if(s instanceof X)return this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createPopupClient(t).acquireToken(e);throw this.getBrowserStorage().setInteractionInProgress(!1),s}):r=this.createPopupClient(t).acquireToken(e),r.then(s=>(o.length<this.getAllAccounts().length?this.eventHandler.emitEvent(T.LOGIN_SUCCESS,y.Popup,s):this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_SUCCESS,y.Popup,s),n.add({accessTokenSize:s.accessToken.length,idTokenSize:s.idToken.length}),n.end({success:!0,requestId:s.requestId}),s)).catch(s=>(o.length>0?this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_FAILURE,y.Popup,null,s):this.eventHandler.emitEvent(T.LOGIN_FAILURE,y.Popup,null,s),n.end({errorCode:s.errorCode,subErrorCode:s.subError,success:!1}),Promise.reject(s)))}trackPageVisibilityWithMeasurement(){const e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){const t=this.getRequestCorrelationId(e),n={...e,prompt:e.prompt,correlationId:t};this.preflightBrowserEnvironmentCheck(y.Silent),this.ssoSilentMeasurement=this.performanceClient.startMeasurement(h.SsoSilent,t),this.ssoSilentMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",t),this.eventHandler.emitEvent(T.SSO_SILENT_START,y.Silent,n);let o;return this.canUseNative(n)?o=this.acquireTokenNative(n,b.ssoSilent).catch(r=>{if(r instanceof ce&&be(r))return this.nativeExtensionProvider=void 0,this.createSilentIframeClient(n.correlationId).acquireToken(n);throw r}):o=this.createSilentIframeClient(n.correlationId).acquireToken(n),o.then(r=>(this.eventHandler.emitEvent(T.SSO_SILENT_SUCCESS,y.Silent,r),this.ssoSilentMeasurement?.add({accessTokenSize:r.accessToken.length,idTokenSize:r.idToken.length}),this.ssoSilentMeasurement?.end({success:!0,isNativeBroker:r.fromNativeBroker,requestId:r.requestId}),r)).catch(r=>{throw this.eventHandler.emitEvent(T.SSO_SILENT_FAILURE,y.Silent,null,r),this.ssoSilentMeasurement?.end({errorCode:r.errorCode,subErrorCode:r.subError,success:!1}),r}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenByCode(e){const t=this.getRequestCorrelationId(e);this.preflightBrowserEnvironmentCheck(y.Silent),this.logger.trace("acquireTokenByCode called",t),this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_BY_CODE_START,y.Silent,e);const n=this.performanceClient.startMeasurement(h.AcquireTokenByCode,t);try{if(e.code&&e.nativeAccountId)throw f(br);if(e.code){const o=e.code;let r=this.hybridAuthCodeResponses.get(o);return r?(this.logger.verbose("Existing acquireTokenByCode request found",t),n.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",t),r=this.acquireTokenByCodeAsync({...e,correlationId:t}).then(s=>(this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_BY_CODE_SUCCESS,y.Silent,s),this.hybridAuthCodeResponses.delete(o),n.add({accessTokenSize:s.accessToken.length,idTokenSize:s.idToken.length}),n.end({success:!0,isNativeBroker:s.fromNativeBroker,requestId:s.requestId}),s)).catch(s=>{throw this.hybridAuthCodeResponses.delete(o),this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_BY_CODE_FAILURE,y.Silent,null,s),n.end({errorCode:s.errorCode,subErrorCode:s.subError,success:!1}),s}),this.hybridAuthCodeResponses.set(o,r)),await r}else if(e.nativeAccountId){if(this.canUseNative(e,e.nativeAccountId))return await this.acquireTokenNative({...e,correlationId:t},b.acquireTokenByCode,e.nativeAccountId).catch(o=>{throw o instanceof ce&&be(o)&&(this.nativeExtensionProvider=void 0),o});throw f(Or)}else throw f(kr)}catch(o){throw this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_BY_CODE_FAILURE,y.Silent,null,o),n.end({errorCode:o instanceof O&&o.errorCode||void 0,subErrorCode:o instanceof O&&o.subError||void 0,success:!1}),o}}async acquireTokenByCodeAsync(e){return this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(h.AcquireTokenByCodeAsync,e.correlationId),this.acquireTokenByCodeAsyncMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),await this.createSilentAuthCodeClient(e.correlationId).acquireToken(e).then(o=>(this.acquireTokenByCodeAsyncMeasurement?.end({success:!0,fromCache:o.fromCache,isNativeBroker:o.fromNativeBroker,requestId:o.requestId}),o)).catch(o=>{throw this.acquireTokenByCodeAsyncMeasurement?.end({errorCode:o.errorCode,subErrorCode:o.subError,success:!1}),o}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenFromCache(e,t,n){switch(this.performanceClient.addQueueMeasurement(h.AcquireTokenFromCache,t.correlationId),n){case Y.Default:case Y.AccessToken:case Y.AccessTokenAndRefreshToken:return m(e.acquireToken.bind(e),h.SilentCacheClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(t);default:throw g(pe)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(h.AcquireTokenByRefreshToken,e.correlationId),t){case Y.Default:case Y.AccessTokenAndRefreshToken:case Y.RefreshToken:case Y.RefreshTokenAndNetwork:const n=this.createSilentRefreshClient(e.correlationId);return m(n.acquireToken.bind(n),h.SilentRefreshClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw g(pe)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(h.AcquireTokenBySilentIframe,e.correlationId);const t=this.createSilentIframeClient(e.correlationId);return m(t.acquireToken.bind(t),h.SilentIframeClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){const t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){const t=this.getRequestCorrelationId(e);return this.preflightBrowserEnvironmentCheck(y.Redirect),this.createRedirectClient(t).logout(e)}logoutPopup(e){try{const t=this.getRequestCorrelationId(e);return this.preflightBrowserEnvironmentCheck(y.Popup),this.createPopupClient(t).logout(e)}catch(t){return Promise.reject(t)}}async clearCache(e){const t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){return this.logger.verbose("getAllAccounts called"),this.isBrowserEnvironment?this.browserStorage.getAllAccounts(e):[]}getAccount(e){if(this.logger.trace("getAccount called"),Object.keys(e).length===0)return this.logger.warning("getAccount: No accountFilter provided"),null;const t=this.browserStorage.getAccountInfoFilteredBy(e);return t?(this.logger.verbose("getAccount: Account matching provided filter found, returning"),t):(this.logger.verbose("getAccount: No matching account found, returning null"),null)}getAccountByUsername(e){if(this.logger.trace("getAccountByUsername called"),!e)return this.logger.warning("getAccountByUsername: No username provided"),null;const t=this.browserStorage.getAccountInfoFilteredBy({username:e});return t?(this.logger.verbose("getAccountByUsername: Account matching username found, returning"),this.logger.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${e}`),t):(this.logger.verbose("getAccountByUsername: No matching account found, returning null"),null)}getAccountByHomeId(e){if(this.logger.trace("getAccountByHomeId called"),!e)return this.logger.warning("getAccountByHomeId: No homeAccountId provided"),null;const t=this.browserStorage.getAccountInfoFilteredBy({homeAccountId:e});return t?(this.logger.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),this.logger.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${e}`),t):(this.logger.verbose("getAccountByHomeId: No matching account found, returning null"),null)}getAccountByLocalId(e){if(this.logger.trace("getAccountByLocalId called"),!e)return this.logger.warning("getAccountByLocalId: No localAccountId provided"),null;const t=this.browserStorage.getAccountInfoFilteredBy({localAccountId:e});return t?(this.logger.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),this.logger.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${e}`),t):(this.logger.verbose("getAccountByLocalId: No matching account found, returning null"),null)}setActiveAccount(e){this.browserStorage.setActiveAccount(e)}getActiveAccount(){return this.browserStorage.getActiveAccount()}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const n=D.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return this.browserStorage.setAccount(n),e.fromNativeBroker?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}preflightBrowserEnvironmentCheck(e,t=!1){if(this.logger.verbose("preflightBrowserEnvironmentCheck started"),aa(this.isBrowserEnvironment),ia(e,this.config.system.allowRedirectInIframe),Rt(),sa(),to(this.initialized),e===y.Redirect&&this.config.cache.cacheLocation===H.MemoryStorage&&!this.config.cache.storeAuthStateInCookie)throw U(Gr);(e===y.Redirect||e===y.Popup)&&this.preflightInteractiveRequest(!t)}preflightInteractiveRequest(e){this.logger.verbose("preflightInteractiveRequest called, validating app environment"),Rt(),e&&this.getBrowserStorage().setInteractionInProgress(!0)}async acquireTokenNative(e,t,n){if(this.logger.trace("acquireTokenNative called"),!this.nativeExtensionProvider)throw f(We);return new Me(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.nativeExtensionProvider,n||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e)}canUseNative(e,t){if(this.logger.trace("canUseNative called"),!ne.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme))return this.logger.trace("canUseNative: isNativeAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case q.NONE:case q.CONSENT:case q.LOGIN:this.logger.trace("canUseNative: prompt is compatible with native flow");break;default:return this.logger.trace(`canUseNative: prompt = ${e.prompt} is not compatible with native flow, returning false`),!1}return!t&&!this.getNativeAccountId(e)?(this.logger.trace("canUseNative: nativeAccountId is not available, returning false"),!1):!0}getNativeAccountId(e){const t=e.account||this.getAccount({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new Ya(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createRedirectClient(e){return new Va(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentIframeClient(e){return new Za(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.ssoSilent,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentCacheClient(e){return new Yr(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentRefreshClient(e){return new ec(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentAuthCodeClient(e){return new oc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.acquireTokenByCode,this.performanceClient,this.nativeExtensionProvider,e)}addEventCallback(e){return this.eventHandler.addEventCallback(e)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){this.eventHandler.enableAccountStorageEvents()}disableAccountStorageEvents(){this.eventHandler.disableAccountStorageEvents()}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}getBrowserStorage(){return this.browserStorage}isBrowserEnv(){return this.isBrowserEnvironment}getEventHandler(){return this.eventHandler}getRequestCorrelationId(e){return e?.correlationId?e.correlationId:this.isBrowserEnvironment?de():d.EMPTY_STRING}async loginRedirect(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||eo})}loginPopup(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||eo})}async acquireTokenSilent(e){const t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(h.AcquireTokenSilent,t);n.add({cacheLookupPolicy:e.cacheLookupPolicy}),this.preflightBrowserEnvironmentCheck(y.Silent),this.logger.verbose("acquireTokenSilent called",t);const o=e.account||this.getActiveAccount();if(!o)throw f(Ar);const r={clientId:this.config.auth.clientId,authority:e.authority||d.EMPTY_STRING,scopes:e.scopes,homeAccountIdentifier:o.homeAccountId,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid,shrOptions:e.shrOptions},s=JSON.stringify(r),a=this.activeSilentTokenRequests.get(s);if(typeof a>"u"){this.logger.verbose("acquireTokenSilent called for the first time, storing active request",t);const c=m(this.acquireTokenSilentAsync.bind(this),h.AcquireTokenSilentAsync,this.logger,this.performanceClient,t)({...e,correlationId:t},o).then(l=>(this.activeSilentTokenRequests.delete(s),n.add({accessTokenSize:l.accessToken.length,idTokenSize:l.idToken.length}),n.end({success:!0,fromCache:l.fromCache,isNativeBroker:l.fromNativeBroker,cacheLookupPolicy:e.cacheLookupPolicy,requestId:l.requestId}),l)).catch(l=>{throw this.activeSilentTokenRequests.delete(s),n.end({errorCode:l.errorCode,subErrorCode:l.subError,success:!1}),l});return this.activeSilentTokenRequests.set(s,c),{...await c,state:e.state}}else return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",t),n.discard(),{...await a,state:e.state}}async acquireTokenSilentAsync(e,t){this.performanceClient.addQueueMeasurement(h.AcquireTokenSilentAsync,e.correlationId),this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_START,y.Silent,e),this.atsAsyncMeasurement=this.performanceClient.startMeasurement(h.AcquireTokenSilentAsync,e.correlationId),this.atsAsyncMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibility);let n;if(ne.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme)&&t.nativeAccountId){this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform");const o={...e,account:t};n=this.acquireTokenNative(o,b.acquireTokenSilent_silentFlow).catch(async r=>{if(r instanceof ce&&be(r))return this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.nativeExtensionProvider=void 0,this.createSilentIframeClient(e.correlationId).acquireToken(e);throw r})}else{this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow");const o=this.createSilentCacheClient(e.correlationId),r=await m(o.initializeSilentRequest.bind(o),h.InitializeSilentRequest,this.logger,this.performanceClient,e.correlationId)(e,t),s=e.cacheLookupPolicy||Y.Default;n=m(this.acquireTokenFromCache.bind(this),h.AcquireTokenFromCache,this.logger,this.performanceClient,r.correlationId)(o,r,s).catch(a=>{if(e.cacheLookupPolicy===Y.AccessToken)throw a;return Rt(),this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_NETWORK_START,y.Silent,r),m(this.acquireTokenByRefreshToken.bind(this),h.AcquireTokenByRefreshToken,this.logger,this.performanceClient,r.correlationId)(r,s).catch(c=>{if(rc(c,r,s))return this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",r.correlationId),m(this.acquireTokenBySilentIframe.bind(this),h.AcquireTokenBySilentIframe,this.logger,this.performanceClient,r.correlationId)(r);throw c})})}return n.then(o=>(this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_SUCCESS,y.Silent,o),this.atsAsyncMeasurement?.end({success:!0,fromCache:o.fromCache,isNativeBroker:o.fromNativeBroker,requestId:o.requestId}),o)).catch(o=>{throw this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_FAILURE,y.Silent,null,o),this.atsAsyncMeasurement?.end({errorCode:o.errorCode,subErrorCode:o.subError,success:!1}),o}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibility)})}}function rc(i,e,t){const n=!(i instanceof X&&i.subError!==At),o=i.errorCode===j.INVALID_GRANT_ERROR||i.errorCode===pe,r=n&&o||i.errorCode===lt||i.errorCode===pn,s=Xs.includes(t);return r&&s}const ic=Object.freeze(Object.defineProperty({__proto__:null,StandardController:St},Symbol.toStringTag,{value:"Module"}));/*! @azure/msal-browser v3.9.0 2024-02-07 */class jr{static async createPublicClientApplication(e){const t=await Ca(e);return new jr(e,t)}constructor(e,t){if(t)this.controller=t;else{const n=new Ee(e);this.controller=new St(n)}}async initialize(){return this.controller.initialize()}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e){return this.controller.addEventCallback(e)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}/*! @azure/msal-browser v3.9.0 2024-02-07 */const sc={initialize:()=>Promise.reject(U(B)),acquireTokenPopup:()=>Promise.reject(U(B)),acquireTokenRedirect:()=>Promise.reject(U(B)),acquireTokenSilent:()=>Promise.reject(U(B)),acquireTokenByCode:()=>Promise.reject(U(B)),getAllAccounts:()=>[],getAccountByHomeId:()=>null,getAccountByUsername:()=>null,getAccountByLocalId:()=>null,handleRedirectPromise:()=>Promise.reject(U(B)),loginPopup:()=>Promise.reject(U(B)),loginRedirect:()=>Promise.reject(U(B)),logout:()=>Promise.reject(U(B)),logoutRedirect:()=>Promise.reject(U(B)),logoutPopup:()=>Promise.reject(U(B)),ssoSilent:()=>Promise.reject(U(B)),addEventCallback:()=>null,removeEventCallback:()=>{},addPerformanceCallback:()=>"",removePerformanceCallback:()=>!1,enableAccountStorageEvents:()=>{},disableAccountStorageEvents:()=>{},getTokenCache:()=>{throw U(B)},getLogger:()=>{throw U(B)},setLogger:()=>{},setActiveAccount:()=>{},getActiveAccount:()=>null,initializeWrapperLibrary:()=>{},setNavigationClient:()=>{},getConfiguration:()=>{throw U(B)},hydrateCache:()=>Promise.reject(U(B)),clearCache:()=>Promise.reject(U(B))};/*! @azure/msal-browser v3.9.0 2024-02-07 */class ac{static getInteractionStatusFromEvent(e,t){switch(e.eventType){case T.LOGIN_START:return N.Login;case T.SSO_SILENT_START:return N.SsoSilent;case T.ACQUIRE_TOKEN_START:if(e.interactionType===y.Redirect||e.interactionType===y.Popup)return N.AcquireToken;break;case T.HANDLE_REDIRECT_START:return N.HandleRedirect;case T.LOGOUT_START:return N.Logout;case T.SSO_SILENT_SUCCESS:case T.SSO_SILENT_FAILURE:if(t&&t!==N.SsoSilent)break;return N.None;case T.LOGOUT_END:if(t&&t!==N.Logout)break;return N.None;case T.HANDLE_REDIRECT_END:if(t&&t!==N.HandleRedirect)break;return N.None;case T.LOGIN_SUCCESS:case T.LOGIN_FAILURE:case T.ACQUIRE_TOKEN_SUCCESS:case T.ACQUIRE_TOKEN_FAILURE:case T.RESTORE_FROM_BFCACHE:if(e.interactionType===y.Redirect||e.interactionType===y.Popup){if(t&&t!==N.Login&&t!==N.AcquireToken)break;return N.None}break}return null}}/*! @azure/msal-react v2.0.11 2024-02-07 */const cc={instance:sc,inProgress:N.None,accounts:[],logger:new fe({})},On=ee.createContext(cc);On.Consumer;/*! @azure/msal-react v2.0.11 2024-02-07 */function Qr(i,e){return typeof i=="function"?i(e):i}function ho(i,e){if(i.length!==e.length)return!1;const t=[...e];return i.every(n=>{const o=t.shift();return!n||!o?!1:n.homeAccountId===o.homeAccountId&&n.localAccountId===o.localAccountId&&n.username===o.username})}function lc(i,e){return i.length>0&&(e.homeAccountId||e.localAccountId||e.username)&&i.filter(n=>!(e.username&&e.username.toLowerCase()!==n.username.toLowerCase()||e.homeAccountId&&e.homeAccountId.toLowerCase()!==n.homeAccountId.toLowerCase()||e.localAccountId&&e.localAccountId.toLowerCase()!==n.localAccountId.toLowerCase()))[0]||null}/*! @azure/msal-react v2.0.11 2024-02-07 */const hc="@azure/msal-react",uo="2.0.11";/*! @azure/msal-react v2.0.11 2024-02-07 */const pt={UNBLOCK_INPROGRESS:"UNBLOCK_INPROGRESS",EVENT:"EVENT"},dc=(i,e)=>{const{type:t,payload:n}=e;let o=i.inProgress;switch(t){case pt.UNBLOCK_INPROGRESS:i.inProgress===N.Startup&&(o=N.None,n.logger.info("MsalProvider - handleRedirectPromise resolved, setting inProgress to 'none'"));break;case pt.EVENT:const s=n.message,a=ac.getInteractionStatusFromEvent(s,i.inProgress);a&&(n.logger.info(`MsalProvider - ${s.eventType} results in setting inProgress from ${i.inProgress} to ${a}`),o=a);break;default:throw new Error(`Unknown action type: ${t}`)}const r=n.instance.getAllAccounts();return o!==i.inProgress&&!ho(r,i.accounts)?{...i,inProgress:o,accounts:r}:o!==i.inProgress?{...i,inProgress:o}:ho(r,i.accounts)?i:{...i,accounts:r}};function mc({instance:i,children:e}){ee.useEffect(()=>{i.initializeWrapperLibrary(js.React,uo)},[i]);const t=ee.useMemo(()=>i.getLogger().clone(hc,uo),[i]),[n,o]=ee.useReducer(dc,void 0,()=>({inProgress:N.Startup,accounts:i.getAllAccounts()}));ee.useEffect(()=>{const s=i.addEventCallback(a=>{o({payload:{instance:i,logger:t,message:a},type:pt.EVENT})});return t.verbose(`MsalProvider - Registered event callback with id: ${s}`),i.initialize().then(()=>{i.handleRedirectPromise().catch(()=>{}).finally(()=>{o({payload:{instance:i,logger:t},type:pt.UNBLOCK_INPROGRESS})})}).catch(()=>{}),()=>{s&&(t.verbose(`MsalProvider - Removing event callback ${s}`),i.removeEventCallback(s))}},[i,t]);const r={instance:i,inProgress:n.inProgress,accounts:n.accounts,logger:t};return ze.createElement(On.Provider,{value:r},e)}/*! @azure/msal-react v2.0.11 2024-02-07 */const Pn=()=>ee.useContext(On);/*! @azure/msal-react v2.0.11 2024-02-07 */function go(i,e){return e&&(e.username||e.homeAccountId||e.localAccountId)?!!lc(i,e):i.length>0}function Jr(i){const{accounts:e,inProgress:t}=Pn(),[n,o]=ee.useState(()=>t===N.Startup?!1:go(e,i));return ee.useEffect(()=>{o(go(e,i))},[e,i]),n}/*! @azure/msal-react v2.0.11 2024-02-07 */function fc({username:i,homeAccountId:e,localAccountId:t,children:n}){const o=Pn(),r=ee.useMemo(()=>({username:i,homeAccountId:e,localAccountId:t}),[i,e,t]);return Jr(r)&&o.inProgress!==N.Startup?ze.createElement(ze.Fragment,null,Qr(n,o)):null}/*! @azure/msal-react v2.0.11 2024-02-07 */function Cc({username:i,homeAccountId:e,localAccountId:t,children:n}){const o=Pn(),r=ee.useMemo(()=>({username:i,homeAccountId:e,localAccountId:t}),[i,e,t]);return!Jr(r)&&o.inProgress!==N.Startup&&o.inProgress!==N.HandleRedirect?ze.createElement(ze.Fragment,null,Qr(n,o)):null}function Vt(){return Vt=Object.assign?Object.assign.bind():function(i){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(i[n]=t[n])}return i},Vt.apply(this,arguments)}var uc={strings:["These are the default values...","You know what you should do?","Use your own!","Have a great day!"],stringsElement:null,typeSpeed:0,startDelay:0,backSpeed:0,smartBackspace:!0,shuffle:!1,backDelay:700,fadeOut:!1,fadeOutClass:"typed-fade-out",fadeOutDelay:500,loop:!1,loopCount:1/0,showCursor:!0,cursorChar:"|",autoInsertCss:!0,attr:null,bindInputFocusEvents:!1,contentType:"html",onBegin:function(i){},onComplete:function(i){},preStringTyped:function(i,e){},onStringTyped:function(i,e){},onLastStringBackspaced:function(i){},onTypingPaused:function(i,e){},onTypingResumed:function(i,e){},onReset:function(i){},onStop:function(i,e){},onStart:function(i,e){},onDestroy:function(i){}},gc=new(function(){function i(){}var e=i.prototype;return e.load=function(t,n,o){if(t.el=typeof o=="string"?document.querySelector(o):o,t.options=Vt({},uc,n),t.isInput=t.el.tagName.toLowerCase()==="input",t.attr=t.options.attr,t.bindInputFocusEvents=t.options.bindInputFocusEvents,t.showCursor=!t.isInput&&t.options.showCursor,t.cursorChar=t.options.cursorChar,t.cursorBlinking=!0,t.elContent=t.attr?t.el.getAttribute(t.attr):t.el.textContent,t.contentType=t.options.contentType,t.typeSpeed=t.options.typeSpeed,t.startDelay=t.options.startDelay,t.backSpeed=t.options.backSpeed,t.smartBackspace=t.options.smartBackspace,t.backDelay=t.options.backDelay,t.fadeOut=t.options.fadeOut,t.fadeOutClass=t.options.fadeOutClass,t.fadeOutDelay=t.options.fadeOutDelay,t.isPaused=!1,t.strings=t.options.strings.map(function(l){return l.trim()}),t.stringsElement=typeof t.options.stringsElement=="string"?document.querySelector(t.options.stringsElement):t.options.stringsElement,t.stringsElement){t.strings=[],t.stringsElement.style.cssText="clip: rect(0 0 0 0);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px;";var r=Array.prototype.slice.apply(t.stringsElement.children),s=r.length;if(s)for(var a=0;a<s;a+=1)t.strings.push(r[a].innerHTML.trim())}for(var c in t.strPos=0,t.currentElContent=this.getCurrentElContent(t),t.currentElContent&&t.currentElContent.length>0&&(t.strPos=t.currentElContent.length-1,t.strings.unshift(t.currentElContent)),t.sequence=[],t.strings)t.sequence[c]=c;t.arrayPos=0,t.stopNum=0,t.loop=t.options.loop,t.loopCount=t.options.loopCount,t.curLoop=0,t.shuffle=t.options.shuffle,t.pause={status:!1,typewrite:!0,curString:"",curStrPos:0},t.typingComplete=!1,t.autoInsertCss=t.options.autoInsertCss,t.autoInsertCss&&(this.appendCursorAnimationCss(t),this.appendFadeOutAnimationCss(t))},e.getCurrentElContent=function(t){return t.attr?t.el.getAttribute(t.attr):t.isInput?t.el.value:t.contentType==="html"?t.el.innerHTML:t.el.textContent},e.appendCursorAnimationCss=function(t){var n="data-typed-js-cursor-css";if(t.showCursor&&!document.querySelector("["+n+"]")){var o=document.createElement("style");o.setAttribute(n,"true"),o.innerHTML=`
        .typed-cursor{
          opacity: 1;
        }
        .typed-cursor.typed-cursor--blink{
          animation: typedjsBlink 0.7s infinite;
          -webkit-animation: typedjsBlink 0.7s infinite;
                  animation: typedjsBlink 0.7s infinite;
        }
        @keyframes typedjsBlink{
          50% { opacity: 0.0; }
        }
        @-webkit-keyframes typedjsBlink{
          0% { opacity: 1; }
          50% { opacity: 0.0; }
          100% { opacity: 1; }
        }
      `,document.body.appendChild(o)}},e.appendFadeOutAnimationCss=function(t){var n="data-typed-fadeout-js-css";if(t.fadeOut&&!document.querySelector("["+n+"]")){var o=document.createElement("style");o.setAttribute(n,"true"),o.innerHTML=`
        .typed-fade-out{
          opacity: 0;
          transition: opacity .25s;
        }
        .typed-cursor.typed-cursor--blink.typed-fade-out{
          -webkit-animation: 0;
          animation: 0;
        }
      `,document.body.appendChild(o)}},i}()),po=new(function(){function i(){}var e=i.prototype;return e.typeHtmlChars=function(t,n,o){if(o.contentType!=="html")return n;var r=t.substring(n).charAt(0);if(r==="<"||r==="&"){var s;for(s=r==="<"?">":";";t.substring(n+1).charAt(0)!==s&&!(1+ ++n>t.length););n++}return n},e.backSpaceHtmlChars=function(t,n,o){if(o.contentType!=="html")return n;var r=t.substring(n).charAt(0);if(r===">"||r===";"){var s;for(s=r===">"?"<":"&";t.substring(n-1).charAt(0)!==s&&!(--n<0););n--}return n},i}()),yc=function(){function i(t,n){gc.load(this,n,t),this.begin()}var e=i.prototype;return e.toggle=function(){this.pause.status?this.start():this.stop()},e.stop=function(){this.typingComplete||this.pause.status||(this.toggleBlinking(!0),this.pause.status=!0,this.options.onStop(this.arrayPos,this))},e.start=function(){this.typingComplete||this.pause.status&&(this.pause.status=!1,this.pause.typewrite?this.typewrite(this.pause.curString,this.pause.curStrPos):this.backspace(this.pause.curString,this.pause.curStrPos),this.options.onStart(this.arrayPos,this))},e.destroy=function(){this.reset(!1),this.options.onDestroy(this)},e.reset=function(t){t===void 0&&(t=!0),clearInterval(this.timeout),this.replaceText(""),this.cursor&&this.cursor.parentNode&&(this.cursor.parentNode.removeChild(this.cursor),this.cursor=null),this.strPos=0,this.arrayPos=0,this.curLoop=0,t&&(this.insertCursor(),this.options.onReset(this),this.begin())},e.begin=function(){var t=this;this.options.onBegin(this),this.typingComplete=!1,this.shuffleStringsIfNeeded(this),this.insertCursor(),this.bindInputFocusEvents&&this.bindFocusEvents(),this.timeout=setTimeout(function(){t.strPos===0?t.typewrite(t.strings[t.sequence[t.arrayPos]],t.strPos):t.backspace(t.strings[t.sequence[t.arrayPos]],t.strPos)},this.startDelay)},e.typewrite=function(t,n){var o=this;this.fadeOut&&this.el.classList.contains(this.fadeOutClass)&&(this.el.classList.remove(this.fadeOutClass),this.cursor&&this.cursor.classList.remove(this.fadeOutClass));var r=this.humanizer(this.typeSpeed),s=1;this.pause.status!==!0?this.timeout=setTimeout(function(){n=po.typeHtmlChars(t,n,o);var a=0,c=t.substring(n);if(c.charAt(0)==="^"&&/^\^\d+/.test(c)){var l=1;l+=(c=/\d+/.exec(c)[0]).length,a=parseInt(c),o.temporaryPause=!0,o.options.onTypingPaused(o.arrayPos,o),t=t.substring(0,n)+t.substring(n+l),o.toggleBlinking(!0)}if(c.charAt(0)==="`"){for(;t.substring(n+s).charAt(0)!=="`"&&(s++,!(n+s>t.length)););var u=t.substring(0,n),p=t.substring(u.length+1,n+s),C=t.substring(n+s+1);t=u+p+C,s--}o.timeout=setTimeout(function(){o.toggleBlinking(!1),n>=t.length?o.doneTyping(t,n):o.keepTyping(t,n,s),o.temporaryPause&&(o.temporaryPause=!1,o.options.onTypingResumed(o.arrayPos,o))},a)},r):this.setPauseStatus(t,n,!0)},e.keepTyping=function(t,n,o){n===0&&(this.toggleBlinking(!1),this.options.preStringTyped(this.arrayPos,this));var r=t.substring(0,n+=o);this.replaceText(r),this.typewrite(t,n)},e.doneTyping=function(t,n){var o=this;this.options.onStringTyped(this.arrayPos,this),this.toggleBlinking(!0),this.arrayPos===this.strings.length-1&&(this.complete(),this.loop===!1||this.curLoop===this.loopCount)||(this.timeout=setTimeout(function(){o.backspace(t,n)},this.backDelay))},e.backspace=function(t,n){var o=this;if(this.pause.status!==!0){if(this.fadeOut)return this.initFadeOut();this.toggleBlinking(!1);var r=this.humanizer(this.backSpeed);this.timeout=setTimeout(function(){n=po.backSpaceHtmlChars(t,n,o);var s=t.substring(0,n);if(o.replaceText(s),o.smartBackspace){var a=o.strings[o.arrayPos+1];o.stopNum=a&&s===a.substring(0,n)?n:0}n>o.stopNum?(n--,o.backspace(t,n)):n<=o.stopNum&&(o.arrayPos++,o.arrayPos===o.strings.length?(o.arrayPos=0,o.options.onLastStringBackspaced(),o.shuffleStringsIfNeeded(),o.begin()):o.typewrite(o.strings[o.sequence[o.arrayPos]],n))},r)}else this.setPauseStatus(t,n,!1)},e.complete=function(){this.options.onComplete(this),this.loop?this.curLoop++:this.typingComplete=!0},e.setPauseStatus=function(t,n,o){this.pause.typewrite=o,this.pause.curString=t,this.pause.curStrPos=n},e.toggleBlinking=function(t){this.cursor&&(this.pause.status||this.cursorBlinking!==t&&(this.cursorBlinking=t,t?this.cursor.classList.add("typed-cursor--blink"):this.cursor.classList.remove("typed-cursor--blink")))},e.humanizer=function(t){return Math.round(Math.random()*t/2)+t},e.shuffleStringsIfNeeded=function(){this.shuffle&&(this.sequence=this.sequence.sort(function(){return Math.random()-.5}))},e.initFadeOut=function(){var t=this;return this.el.className+=" "+this.fadeOutClass,this.cursor&&(this.cursor.className+=" "+this.fadeOutClass),setTimeout(function(){t.arrayPos++,t.replaceText(""),t.strings.length>t.arrayPos?t.typewrite(t.strings[t.sequence[t.arrayPos]],0):(t.typewrite(t.strings[0],0),t.arrayPos=0)},this.fadeOutDelay)},e.replaceText=function(t){this.attr?this.el.setAttribute(this.attr,t):this.isInput?this.el.value=t:this.contentType==="html"?this.el.innerHTML=t:this.el.textContent=t},e.bindFocusEvents=function(){var t=this;this.isInput&&(this.el.addEventListener("focus",function(n){t.stop()}),this.el.addEventListener("blur",function(n){t.el.value&&t.el.value.length!==0||t.start()}))},e.insertCursor=function(){this.showCursor&&(this.cursor||(this.cursor=document.createElement("span"),this.cursor.className="typed-cursor",this.cursor.setAttribute("aria-hidden",!0),this.cursor.innerHTML=this.cursorChar,this.el.parentNode&&this.el.parentNode.insertBefore(this.cursor,this.el.nextSibling)))},i}();export{fc as A,P as L,mc as M,jr as P,Cc as U,ha as _,yc as i,Pn as u};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
